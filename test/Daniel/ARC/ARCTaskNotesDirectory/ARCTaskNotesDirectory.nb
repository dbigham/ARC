(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     11555,        294]
NotebookOptionsPosition[      5333,        143]
NotebookOutlinePosition[     10858,        280]
CellTagsIndexPosition[     10815,        277]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ARCTaskNotesDirectory", "Title",ExpressionUUID->"04258029-7950-4aed-b785-d5b04836fb8f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"RunUnitTests", "[", "ARCTaskNotesDirectory", "]"}]}], "Code",
 InitializationCell->False,
 CellLabel->"In[61]:=",ExpressionUUID->"64fbc68d-c907-4962-91a2-467aa570505f"],

Cell[CellGroupData[{

Cell["Tests", "Section",ExpressionUUID->"8750d9bc-2255-41fd-995c-939a051c9b17"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCTaskNotesDirectory-20220808-08LJBT", 
              Daniel`ARC`ARCTaskNotesDirectory, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202288124214606], 55083635]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> 
            "ARCTaskNotesDirectory-20220808-08LJBT"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCTaskNotesDirectory-20220808-08LJBT", 
            Daniel`ARC`ARCTaskNotesDirectory, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202288124214606], "CellID" -> 55083635, "SubTest" -> 
            None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCTaskNotesDirectory-20220808-08LJBT", 
           Daniel`ARC`ARCTaskNotesDirectory, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202288124214606], None], ImageSize -> {140., 25}, 
          Method -> "Queued"], 
         Row[{"ARCTaskNotesDirectory-20220808-08LJBT"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202288124214606; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202288124214606], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202288124214606 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202288124214606 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202288124214606, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202288124214606 = "", ImageSize -> {100, 33}]}]}, 
         Spacings -> {0, 1}, Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{605., {21.3544921875, 26.6455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`DynamicOutputSectionVariable202288124214606}\
]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.8689634612298636`*^9},ExpressionUUID->"7e4d8d17-50a9-43ac-8641-\
7fb7e1ec1359"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"ARCTaskNotesDirectory", "[", "\"\<my-task\>\"", "]"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.8689634343729787`*^9, 3.8689634612308645`*^9}},
 CellLabel->"In[59]:=",
 CellID->55083635,
 "TestId" -> 
 "ARCTaskNotesDirectory-20220808-08LJBT",ExpressionUUID->"f8632975-063a-417f-\
bf04-4e6fd4e5ff84"]
}, Open  ]],

Cell[BoxData["\<\"TaskNotes/my-task\"\>"], "Output",
 CellChangeTimes->{{3.8689634367926893`*^9, 3.8689634586273813`*^9}},
 CellLabel->"Out[60]=",ExpressionUUID->"ea94f2ad-4bc5-4a33-a7f0-f42f3048cc40"]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Local",
WindowSize->{718.5, 735.},
WindowMargins->{{-5.25, Automatic}, {Automatic, 0}},
DockedCells->{
  Cell[
   BoxData[
    DynamicBox[
     ToBoxes[
      Column[{
        Row[{
          Button["New Test", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`NewFunctionCell[
            Daniel`ARC`ARCTaskNotesDirectory], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202288123474599]], ImageSize -> {95., 40}, Method -> 
           "Queued"], " ", 
          Button["Add Tests to File", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`CreateUnitTests[
            Daniel`ARC`ARCTaskNotesDirectory, "SubTest" -> None], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202288123474599]], ImageSize -> {162.5, 40}, 
           Method -> "Queued"], " ", 
          Button[
          "Run Tests", 
           DevTools`TestingTools`RunUnitTestsInNotebook[
            Daniel`ARC`ARCTaskNotesDirectory]; Null, ImageSize -> {102.5, 40},
            Method -> "Queued"], " ", 
          Button["Edit Tests", 
           DevTools`TestingTools`EditUnitTests[
           Daniel`ARC`ARCTaskNotesDirectory], ImageSize -> {110., 40}, Method -> 
           "Queued"], " ", 
          Button["Edit Function", 
           DevTools`SourceTools`EditFunction[
           Daniel`ARC`ARCTaskNotesDirectory], ImageSize -> {132.5, 40}, 
           Method -> "Queued"], " ", 
          Row[{
            
            DynamicModule[{
             DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
              "Capture"}, 
             Button[
              Dynamic[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel], 
              If[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel === 
               "Capture", 
               DevTools`TestingTools`FunctionCapture`EnableFunctionCapture[
                Daniel`ARC`ARCTaskNotesDirectory]; 
               DevTools`TestingTools`FunctionCapture`\
RegisterFunctionCaptureNotebook[Daniel`ARC`ARCTaskNotesDirectory, 
                 InputNotebook[]]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Release"; Null, 
               DevTools`TestingTools`FunctionCapture`DisableFunctionCapture[
                Daniel`ARC`ARCTaskNotesDirectory]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Capture"; Null], ImageSize -> {100, 40}, Method -> "Queued"],
              DynamicModuleValues :> {}], 
            Button["?", 
             DevTools`TestingTools`FunctionCapture`CaptureFunctionHelp[], 
             ImageSize -> {30, 40}, Method -> "Queued"]}], " ", 
          Row[{
            Button["<", 
             DevTools`NotebookTools`MoveNotebook["Left"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"], 
            Button[">", 
             DevTools`NotebookTools`MoveNotebook["Right"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"]}]}], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202288123474599; If[
          And[
           ValueQ[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202288123474599], 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202288123474599 =!= "", 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202288123474599 =!= Null], 
          (If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {"MaxHeight" -> 300},
              "NakedSection"]], 
           Framed[#, FrameStyle -> None, FrameMargins -> 2], 
           
           Framed[#, FrameStyle -> LightGray, Background -> White, 
            FrameMargins -> 15]]& )[
           Grid[{{
              Pane[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202288123474599, "ImageSize" -> {Full, {0, 
                  OptionValue[
                  DevTools`NotebookTools`DynamicOutputSection, {
                   "MaxHeight" -> 300}, "MaxHeight"]}}, Scrollbars -> 
               Automatic, FrameMargins -> 0]}, 
             If[
              TrueQ[
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {
                "MaxHeight" -> 300}, "NakedSection"]], 
              Apply[Sequence, {}], {
               Button[
               "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202288123474599 = "", ImageSize -> {100, 33}]}]}, 
            Spacings -> {0, 1}, Alignment -> {Left, Top}]], 
          Apply[Sequence, {}]]}], StandardForm], 
     TrackedSymbols :> {
      DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202288123474599}]], "DockedCell"]},
TaggingRules->{
 "CreateNamedNotebook2Args" -> {
   "ARCTaskNotesDirectory", "Type" -> "Function", 
    "GenerateNotebookArgs" -> {
     "Function" -> Daniel`ARC`ARCTaskNotesDirectory}, "ReturnNotebook" -> 
    True}},
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"a07a1cc2-c2e3-4a60-891e-620bad25c48c"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 93, 0, 98, "Title",ExpressionUUID->"04258029-7950-4aed-b785-d5b04836fb8f"],
Cell[676, 24, 252, 5, 52, "Code",ExpressionUUID->"64fbc68d-c907-4962-91a2-467aa570505f",
 InitializationCell->False],
Cell[CellGroupData[{
Cell[953, 33, 79, 0, 67, "Section",ExpressionUUID->"8750d9bc-2255-41fd-995c-939a051c9b17"],
Cell[CellGroupData[{
Cell[1057, 37, 3572, 84, 50, "TestUI",ExpressionUUID->"7e4d8d17-50a9-43ac-8641-7fb7e1ec1359",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[4632, 123, 457, 11, 52, "Code",ExpressionUUID->"f8632975-063a-417f-bf04-4e6fd4e5ff84",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->55083635]
}, Open  ]],
Cell[5104, 137, 201, 2, 32, "Output",ExpressionUUID->"ea94f2ad-4bc5-4a33-a7f0-f42f3048cc40"]
}, Open  ]]
}, Open  ]]
}
]
*)

