(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[      7708,        204]
NotebookOptionsPosition[      1763,         60]
NotebookOutlinePosition[      7146,        193]
CellTagsIndexPosition[      7103,        190]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ARCMXFile", "Title",ExpressionUUID->"04c9749e-f6a3-44d4-a314-eadb7e32e2c3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"RunUnitTests", "[", "ARCMXFile", "]"}]}], "Code",
 InitializationCell->
  False,ExpressionUUID->"2e0042bc-6600-40e4-a3cb-3543376f80f0"],

Cell[CellGroupData[{

Cell["Tests", "Section",ExpressionUUID->"45eef102-ea8f-495d-b24c-85dcdf22b259"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"ARCMXFile", "[", "]"}]}], "Code",
 InitializationCell->False,
 CellLabel->
  "In[399]:=",ExpressionUUID->"eab3c952-800a-4e4d-af93-e16a89bb074f"],

Cell[BoxData["\<\"C:\\\\Users\\\\danie\\\\AppData\\\\Local\\\\Temp\\\\ARC.mx\"\
\>"], "Output",
 CellChangeTimes->{{3.871415389533229*^9, 3.8714153943081846`*^9}},
 CellLabel->
  "Out[400]=",ExpressionUUID->"a2a79760-2f8a-4595-9c69-32e1cb273a6c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"FileSize", "[", 
  RowBox[{"ARCMXFile", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.871415400497316*^9, 3.8714154057030735`*^9}},
 CellLabel->"",ExpressionUUID->"e61270b1-b5ae-4241-bfb7-ad056e38844a"]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Local",
WindowSize->{958, 980},
WindowMargins->{{-7., Automatic}, {Automatic, 0}},
DockedCells->{
  Cell[
   BoxData[
    DynamicBox[
     ToBoxes[
      Column[{
        Row[{
          Button["New Test", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`NewFunctionCell[Daniel`ARC`ARCMXFile], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022952192537801]], ImageSize -> {95., 40}, 
           Method -> "Queued"], " ", 
          Button["Add Tests to File", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`CreateUnitTests[
            Daniel`ARC`ARCMXFile, "SubTest" -> None], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022952192537801]], ImageSize -> {162.5, 40}, 
           Method -> "Queued"], " ", 
          Button[
          "Run Tests", 
           DevTools`TestingTools`RunUnitTestsInNotebook[Daniel`ARC`ARCMXFile]; 
           Null, ImageSize -> {102.5, 40}, Method -> "Queued"], " ", 
          Button["Edit Tests", 
           DevTools`TestingTools`EditUnitTests[
           Daniel`ARC`ARCMXFile, "SubTest" -> None], ImageSize -> {110., 40}, 
           Method -> "Queued"], " ", 
          Button["Edit Function", 
           DevTools`SourceTools`EditFunction[Daniel`ARC`ARCMXFile], 
           ImageSize -> {132.5, 40}, Method -> "Queued"], " ", 
          Row[{
            
            DynamicModule[{
             DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
              "Capture"}, 
             Button[
              Dynamic[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel], 
              If[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel === 
               "Capture", 
               DevTools`TestingTools`FunctionCapture`EnableFunctionCapture[
                Daniel`ARC`ARCMXFile]; 
               DevTools`TestingTools`FunctionCapture`\
RegisterFunctionCaptureNotebook[Daniel`ARC`ARCMXFile, 
                 InputNotebook[]]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Release"; Null, 
               DevTools`TestingTools`FunctionCapture`DisableFunctionCapture[
                Daniel`ARC`ARCMXFile]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Capture"; Null], ImageSize -> {100, 40}, Method -> "Queued"],
              DynamicModuleValues :> {}], 
            Button["?", 
             DevTools`TestingTools`FunctionCapture`CaptureFunctionHelp[], 
             ImageSize -> {30, 40}, Method -> "Queued"]}], " ", 
          Row[{
            Button["<", 
             DevTools`NotebookTools`MoveNotebook["Left"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"], 
            Button[">", 
             DevTools`NotebookTools`MoveNotebook["Right"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"]}]}], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022952192537801; If[
          And[
           ValueQ[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022952192537801], 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022952192537801 =!= "", 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022952192537801 =!= Null], 
          (If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {"MaxHeight" -> 300},
              "NakedSection"]], 
           Framed[#, FrameStyle -> None, FrameMargins -> 2], 
           
           Framed[#, FrameStyle -> LightGray, Background -> White, 
            FrameMargins -> 15]]& )[
           Grid[{{
              Pane[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022952192537801, "ImageSize" -> {Full, {0, 
                  OptionValue[
                  DevTools`NotebookTools`DynamicOutputSection, {
                   "MaxHeight" -> 300}, "MaxHeight"]}}, Scrollbars -> 
               Automatic, FrameMargins -> 0]}, 
             If[
              TrueQ[
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {
                "MaxHeight" -> 300}, "NakedSection"]], 
              Apply[Sequence, {}], {
               Button[
               "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022952192537801 = "", ImageSize -> {100, 33}]}]},
             Spacings -> {0, 1}, Alignment -> {Left, Top}]], 
          Apply[Sequence, {}]]}], StandardForm], 
     TrackedSymbols :> {
      DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022952192537801}]], "DockedCell"]},
TaggingRules->{
 "CreateNamedNotebook2Args" -> {
   "ARCMXFile", "Type" -> "Function", 
    "GenerateNotebookArgs" -> {"Function" -> Daniel`ARC`ARCMXFile}, 
    "ReturnNotebook" -> True}},
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"daccb97c-4c9e-4184-8a0c-f3a2256c81b0"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 81, 0, 98, "Title",ExpressionUUID->"04c9749e-f6a3-44d4-a314-eadb7e32e2c3"],
Cell[664, 24, 219, 5, 54, "Code",ExpressionUUID->"2e0042bc-6600-40e4-a3cb-3543376f80f0",
 InitializationCell->False],
Cell[CellGroupData[{
Cell[908, 33, 79, 0, 67, "Section",ExpressionUUID->"45eef102-ea8f-495d-b24c-85dcdf22b259"],
Cell[CellGroupData[{
Cell[1012, 37, 228, 6, 54, "Code",ExpressionUUID->"eab3c952-800a-4e4d-af93-e16a89bb074f",
 InitializationCell->False],
Cell[1243, 45, 246, 4, 33, "Output",ExpressionUUID->"a2a79760-2f8a-4595-9c69-32e1cb273a6c"]
}, Open  ]],
Cell[1504, 52, 231, 4, 29, "Input",ExpressionUUID->"e61270b1-b5ae-4241-bfb7-ad056e38844a"]
}, Open  ]]
}, Open  ]]
}
]
*)

