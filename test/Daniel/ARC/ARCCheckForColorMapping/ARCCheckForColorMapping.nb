(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     20843,        530]
NotebookOptionsPosition[     13772,        361]
NotebookOutlinePosition[     19406,        501]
CellTagsIndexPosition[     19363,        498]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ARCCheckForColorMapping", "Title",ExpressionUUID->"7d76b792-3c66-4501-ac98-589bc4b5bbf6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"RunUnitTests", "[", "ARCCheckForColorMapping", "]"}]}], "Code",
 InitializationCell->False,
 CellLabel->
  "In[146]:=",ExpressionUUID->"c1266afd-a17d-40dd-88d6-dcdaaac0f115"],

Cell[CellGroupData[{

Cell["Tests", "Section",ExpressionUUID->"21c833e6-b36b-4491-92a6-5d140d6ec69c"],

Cell[CellGroupData[{

Cell["Images as Input", "Subsection",
 CellChangeTimes->{{3.8747725756819873`*^9, 
  3.874772577648965*^9}},ExpressionUUID->"3d5060b6-1481-452d-b638-\
016a9b49710a"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCCheckForColorMapping-20221014-72LWAR", 
              Daniel`ARC`ARCCheckForColorMapping, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221014174541078], 40175551, "SubTest" -> None]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> 
            "ARCCheckForColorMapping-20221014-72LWAR"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCCheckForColorMapping-20221014-72LWAR", 
            Daniel`ARC`ARCCheckForColorMapping, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221014174541078], "CellID" -> 40175551, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCCheckForColorMapping-20221014-72LWAR", 
           Daniel`ARC`ARCCheckForColorMapping, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221014174541078], 
           Utility`FilterOptions[
           "SubTest" -> None, 
            DevTools`TestingTools`Private`openInEditorClicked]], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCCheckForColorMapping-20221014-72LWAR"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221014174541078; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221014174541078], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221014174541078 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221014174541078 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221014174541078, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221014174541078 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{833., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221014174541078}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.8747727038502464`*^9},ExpressionUUID->"9dcabf37-d1f9-47a1-8284-\
82e095a333b3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"parsedFile", " ", "=", " ", 
      RowBox[{
       RowBox[{"ARCParseFile", "[", "\"\<6d75e8bb\>\"", "]"}], "[", 
       "\"\<Train\>\"", "]"}]}], "}"}], ",", "\n", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"parsedInputScene", " ", "=", " ", 
        RowBox[{"ARCParseScene", "[", 
         RowBox[{"parsedFile", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", " ", "\"\<Input\>\""}], "]"}], "]"}], "]"}]}], 
       "}"}], ",", "\n", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"parsedOutputScene", " ", "=", " ", 
          RowBox[{"ARCParseScene", "[", 
           RowBox[{"parsedFile", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", " ", "\"\<Output\>\""}], "]"}], "]"}], "]"}]}],
          "}"}], ",", "\n", "\t", 
        RowBox[{"ARCCheckForColorMapping", "[", 
         RowBox[{
          RowBox[{"parsedInputScene", "[", 
           RowBox[{"[", 
            RowBox[{
            "\"\<Objects\>\"", ",", " ", "1", ",", " ", "\"\<Image\>\"", ",", 
             " ", "1"}], "]"}], "]"}], ",", " ", 
          RowBox[{"parsedOutputScene", "[", 
           RowBox[{"[", 
            RowBox[{
            "\"\<Objects\>\"", ",", " ", "1", ",", " ", "\"\<Image\>\"", ",", 
             " ", "1"}], "]"}], "]"}]}], "]"}]}], "\n", "]"}]}], "\n", 
     "]"}]}], "\n", "]"}], " ", "//", " ", "Indent2"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.874771773555602*^9, 3.874771939828653*^9}, {
   3.8747719766433926`*^9, 3.8747719777868943`*^9}, 3.8747727038502464`*^9},
 CellLabel->"In[142]:=",
 CellID->40175551,
 "TestId" -> 
 "ARCCheckForColorMapping-20221014-72LWAR",ExpressionUUID->"d8731b65-7fd9-\
40a2-aee4-0d71b30bd9d5"]
}, Open  ]],

Cell[BoxData["\<\"{{-1, 2}}\"\>"], "Output",
 CellChangeTimes->{
  3.8747718829949975`*^9, {3.874771922061924*^9, 3.874772045403268*^9}, {
   3.874772159542588*^9, 3.874772188344017*^9}, {3.8747723474559574`*^9, 
   3.87477236687435*^9}, {3.874772427667471*^9, 3.8747724974911947`*^9}, {
   3.874772556660678*^9, 3.874772585277788*^9}, {3.8747726294889665`*^9, 
   3.8747726559649734`*^9}, 3.8747726924258175`*^9},
 CellLabel->
  "Out[143]=",ExpressionUUID->"a00d59a0-56ac-49c9-8916-3e635350331c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Objects as Input", "Subsection",
 CellChangeTimes->{{3.874772579689068*^9, 
  3.874772581289245*^9}},ExpressionUUID->"de3b5621-9952-41e1-830b-\
abd978b9a49e"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCCheckForColorMapping-20221014-PGUA68", 
              Daniel`ARC`ARCCheckForColorMapping, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221014174541083], 24517735, "SubTest" -> None]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> 
            "ARCCheckForColorMapping-20221014-PGUA68"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCCheckForColorMapping-20221014-PGUA68", 
            Daniel`ARC`ARCCheckForColorMapping, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221014174541083], "CellID" -> 24517735, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCCheckForColorMapping-20221014-PGUA68", 
           Daniel`ARC`ARCCheckForColorMapping, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221014174541083], 
           Utility`FilterOptions[
           "SubTest" -> None, 
            DevTools`TestingTools`Private`openInEditorClicked]], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCCheckForColorMapping-20221014-PGUA68"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221014174541083; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221014174541083], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221014174541083 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221014174541083 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221014174541083, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221014174541083 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{833., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221014174541083}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.874772704268244*^9},ExpressionUUID->"6e75b55d-96e7-4ce4-baba-\
448467aa3f22"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"parsedFile", " ", "=", " ", 
      RowBox[{
       RowBox[{"ARCParseFile", "[", "\"\<6d75e8bb\>\"", "]"}], "[", 
       "\"\<Train\>\"", "]"}]}], "}"}], ",", "\n", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"parsedInputScene", " ", "=", " ", 
        RowBox[{"ARCParseScene", "[", 
         RowBox[{"parsedFile", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", " ", "\"\<Input\>\""}], "]"}], "]"}], "]"}]}], 
       "}"}], ",", "\n", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"parsedOutputScene", " ", "=", " ", 
          RowBox[{"ARCParseScene", "[", 
           RowBox[{"parsedFile", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", " ", "\"\<Output\>\""}], "]"}], "]"}], "]"}]}],
          "}"}], ",", "\n", "\t", 
        RowBox[{"ARCCheckForColorMapping", "[", 
         RowBox[{
          RowBox[{"parsedInputScene", "[", 
           RowBox[{"[", 
            RowBox[{"\"\<Objects\>\"", ",", " ", "1"}], "]"}], "]"}], ",", 
          " ", 
          RowBox[{"parsedOutputScene", "[", 
           RowBox[{"[", 
            RowBox[{"\"\<Objects\>\"", ",", " ", "1"}], "]"}], "]"}]}], 
         "]"}]}], "\n", "]"}]}], "\n", "]"}]}], "\n", "]"}], " ", "//", " ", 
  "Indent2"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.874771773555602*^9, 3.874771939828653*^9}, {
   3.8747719766433926`*^9, 3.8747719777868943`*^9}, {3.874772506550289*^9, 
   3.8747725093780775`*^9}, 3.874772704268244*^9},
 CellLabel->"In[144]:=",
 CellID->24517735,
 "TestId" -> 
 "ARCCheckForColorMapping-20221014-PGUA68",ExpressionUUID->"58093b50-06a0-\
4efa-8d32-a8a9c719f624"]
}, Open  ]],

Cell[BoxData["\<\"<|\\\"Transform\\\" -> <|\\\"Type\\\" -> \\\"ColorMapping\\\
\", \\\"Mapping\\\" -> {{-1, 2}}|>|>\"\>"], "Output",
 CellChangeTimes->{
  3.8747725100746484`*^9, {3.874772558532958*^9, 3.8747725714474835`*^9}, 
   3.874772630774066*^9, 3.8747726994946136`*^9},
 CellLabel->
  "Out[145]=",ExpressionUUID->"1e5b7bbd-608d-4222-b710-43afb53b6a15"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Local",
WindowSize->{958, 980},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
Visible->True,
DockedCells->{
  Cell[
   BoxData[
    DynamicBox[
     ToBoxes[
      Column[{
        Row[{
          Button["New Test", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`NewFunctionCell[
            Daniel`ARC`ARCCheckForColorMapping], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221014172827874]], ImageSize -> {95., 40}, 
           Method -> "Queued"], " ", 
          Button["Add Tests to File", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`CreateUnitTests[
            Daniel`ARC`ARCCheckForColorMapping, "SubTest" -> None], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221014172827874]], ImageSize -> {162.5, 40}, 
           Method -> "Queued"], " ", 
          Button[
          "Run Tests", 
           DevTools`TestingTools`RunUnitTestsInNotebook[
            Daniel`ARC`ARCCheckForColorMapping]; Null, 
           ImageSize -> {102.5, 40}, Method -> "Queued"], " ", 
          Button["Edit Tests", 
           DevTools`TestingTools`EditUnitTests[
           Daniel`ARC`ARCCheckForColorMapping, "SubTest" -> None], 
           ImageSize -> {110., 40}, Method -> "Queued"], " ", 
          Button["Edit Function", 
           DevTools`SourceTools`EditFunction[
           Daniel`ARC`ARCCheckForColorMapping], ImageSize -> {132.5, 40}, 
           Method -> "Queued"], " ", 
          Row[{
            
            DynamicModule[{
             DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
              "Capture"}, 
             Button[
              Dynamic[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel], 
              If[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel === 
               "Capture", 
               DevTools`TestingTools`FunctionCapture`EnableFunctionCapture[
                Daniel`ARC`ARCCheckForColorMapping]; 
               DevTools`TestingTools`FunctionCapture`\
RegisterFunctionCaptureNotebook[Daniel`ARC`ARCCheckForColorMapping, 
                 InputNotebook[]]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Release"; Null, 
               DevTools`TestingTools`FunctionCapture`DisableFunctionCapture[
                Daniel`ARC`ARCCheckForColorMapping]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Capture"; Null], ImageSize -> {100, 40}, Method -> "Queued"],
              DynamicModuleValues :> {}], 
            Button["?", 
             DevTools`TestingTools`FunctionCapture`CaptureFunctionHelp[], 
             ImageSize -> {30, 40}, Method -> "Queued"]}], " ", 
          Row[{
            Button["<", 
             DevTools`NotebookTools`MoveNotebook["Left"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"], 
            Button[">", 
             DevTools`NotebookTools`MoveNotebook["Right"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"]}]}], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221014172827874; If[
          And[
           ValueQ[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221014172827874], 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221014172827874 =!= "", 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221014172827874 =!= Null], 
          (If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {"MaxHeight" -> 300},
              "NakedSection"]], 
           Framed[#, FrameStyle -> None, FrameMargins -> 2], 
           
           Framed[#, FrameStyle -> LightGray, Background -> White, 
            FrameMargins -> 15]]& )[
           Grid[{{
              Pane[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221014172827874, "ImageSize" -> {Full, {0, 
                  OptionValue[
                  DevTools`NotebookTools`DynamicOutputSection, {
                   "MaxHeight" -> 300}, "MaxHeight"]}}, Scrollbars -> 
               Automatic, FrameMargins -> 0]}, 
             If[
              TrueQ[
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {
                "MaxHeight" -> 300}, "NakedSection"]], 
              Apply[Sequence, {}], {
               Button[
               "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221014172827874 = "", 
                ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
            Alignment -> {Left, Top}]], 
          Apply[Sequence, {}]]}], StandardForm], 
     TrackedSymbols :> {
      DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221014172827874}]], "DockedCell"]},
TaggingRules->{
 "CreateNamedNotebook2Args" -> {
   "ARCCheckForColorMapping", "Type" -> "Function", 
    "GenerateNotebookArgs" -> {
     "Function" -> Daniel`ARC`ARCCheckForColorMapping}, "ReturnNotebook" -> 
    True}},
InputAutoReplacements->{},
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"76dd2b04-dc55-4543-9b17-8a957cb6ebfa"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 95, 0, 98, "Title",ExpressionUUID->"7d76b792-3c66-4501-ac98-589bc4b5bbf6"],
Cell[678, 24, 258, 6, 54, "Code",ExpressionUUID->"c1266afd-a17d-40dd-88d6-dcdaaac0f115",
 InitializationCell->False],
Cell[CellGroupData[{
Cell[961, 34, 79, 0, 67, "Section",ExpressionUUID->"21c833e6-b36b-4491-92a6-5d140d6ec69c"],
Cell[CellGroupData[{
Cell[1065, 38, 165, 3, 54, "Subsection",ExpressionUUID->"3d5060b6-1481-452d-b638-016a9b49710a"],
Cell[CellGroupData[{
Cell[1255, 45, 3765, 88, 52, "TestUI",ExpressionUUID->"9dcabf37-d1f9-47a1-8284-82e095a333b3",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[5023, 135, 1950, 50, 162, "Code",ExpressionUUID->"d8731b65-7fd9-40a2-aee4-0d71b30bd9d5",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->40175551]
}, Open  ]],
Cell[6988, 188, 497, 8, 33, "Output",ExpressionUUID->"a00d59a0-56ac-49c9-8916-3e635350331c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7522, 201, 164, 3, 54, "Subsection",ExpressionUUID->"de3b5621-9952-41e1-830b-abd978b9a49e"],
Cell[CellGroupData[{
Cell[7711, 208, 3763, 88, 52, "TestUI",ExpressionUUID->"6e75b55d-96e7-4ce4-baba-448467aa3f22",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[11477, 298, 1880, 49, 162, "Code",ExpressionUUID->"58093b50-06a0-4efa-8d32-a8a9c719f624",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->24517735]
}, Open  ]],
Cell[13372, 350, 360, 6, 33, "Output",ExpressionUUID->"1e5b7bbd-608d-4222-b710-43afb53b6a15"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

