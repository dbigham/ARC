(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     12997,        334]
NotebookOptionsPosition[      6510,        180]
NotebookOutlinePosition[     12010,        315]
CellTagsIndexPosition[     11967,        312]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ARCGoodRulesQ", "Title",ExpressionUUID->"85b32143-c88b-44ae-b32d-cf1a851309d0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"RunUnitTests", "[", "ARCGoodRulesQ", "]"}]}], "Code",
 InitializationCell->False,
 CellLabel->
  "In[425]:=",ExpressionUUID->"55ea4775-16a4-47ce-871c-91f9ae6f151d"],

Cell[CellGroupData[{

Cell["Tests", "Section",ExpressionUUID->"122923fd-37b7-4ab2-9206-b0dde95af25b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"ARCGoodRulesQ", "[", "\n", "\t", 
  RowBox[{
   RowBox[{"ARCFindRules", "[", 
    RowBox[{
     RowBox[{"ARCParseFile", "[", 
      RowBox[{"file", " ", "=", " ", "\"\<0ca9ddb6\>\""}], "]"}], "[", 
     "\"\<Train\>\"", "]"}], "]"}], ",", "\n", "\t", 
   RowBox[{"{", 
    RowBox[{"1", ",", " ", "2", ",", " ", "3"}], "}"}]}], "\n", 
  "]"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.867508224858893*^9, 3.867508249098828*^9}},
 CellLabel->"In[444]:=",
 CellID->240537740,
 "TestId" -> 
 "ARCGoodRulesQ-20220722-55M2SD",ExpressionUUID->"aa87f7aa-ab6e-4560-bb21-\
4dfb6522706f"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"MeanExamplesPerRule\"\>", "\[Rule]", "2.`"}], ",", 
   RowBox[{"\<\"MeanUseCount\"\>", "\[Rule]", "2.5`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.867508249568981*^9, 3.8675082820060825`*^9}, 
   3.8675083951994476`*^9, {3.867508439763479*^9, 3.867508445078084*^9}, {
   3.8675086146445875`*^9, 3.867508624298148*^9}},
 CellLabel->
  "Out[445]=",ExpressionUUID->"43e150fc-506c-4fee-89e6-ced376cdc7d1"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCGoodRulesQ-20220722-55M2SD", Daniel`ARC`ARCGoodRulesQ, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272215503043637], 43296105]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> "ARCGoodRulesQ-20220722-55M2SD"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCGoodRulesQ-20220722-55M2SD", Daniel`ARC`ARCGoodRulesQ, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272215503043637], "CellID" -> 43296105, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCGoodRulesQ-20220722-55M2SD", Daniel`ARC`ARCGoodRulesQ, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272215503043637], None], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCGoodRulesQ-20220722-55M2SD"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272215503043637; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272215503043637], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272215503043637 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272215503043637 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272215503043637, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272215503043637 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{840., {21., 27.}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272215503043637}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.8675082299177294`*^9},ExpressionUUID->"a5e1df92-6e84-4fde-8453-\
f7c9fd8fba35"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"ARCGoodRulesQ", "[", 
  RowBox[{
   RowBox[{"{", "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", " ", "2", ",", " ", "3"}], "}"}]}], "]"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.867508224858893*^9, 3.8675082299177294`*^9}},
 CellLabel->"In[423]:=",
 CellID->43296105,
 "TestId" -> 
 "ARCGoodRulesQ-20220722-55M2SD",ExpressionUUID->"cc654f2a-3e45-4899-aeec-\
ec5df7508659"]
}, Open  ]],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.8675082286159897`*^9},
 CellLabel->
  "Out[424]=",ExpressionUUID->"b7b6856b-0c1e-4172-bf9f-66efd98b6875"]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Local",
WindowSize->{958, 980},
WindowMargins->{{-7., Automatic}, {Automatic, 0}},
DockedCells->{
  Cell[
   BoxData[
    DynamicBox[
     ToBoxes[
      Column[{
        Row[{
          Button["New Test", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`NewFunctionCell[Daniel`ARC`ARCGoodRulesQ], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272215495743631]], ImageSize -> {95., 40}, 
           Method -> "Queued"], " ", 
          Button["Add Tests to File", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`CreateUnitTests[
            Daniel`ARC`ARCGoodRulesQ, "SubTest" -> None], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272215495743631]], ImageSize -> {162.5, 40}, 
           Method -> "Queued"], " ", 
          Button[
          "Run Tests", 
           DevTools`TestingTools`RunUnitTestsInNotebook[
            Daniel`ARC`ARCGoodRulesQ]; Null, ImageSize -> {102.5, 40}, Method -> 
           "Queued"], " ", 
          Button["Edit Tests", 
           DevTools`TestingTools`EditUnitTests[Daniel`ARC`ARCGoodRulesQ], 
           ImageSize -> {110., 40}, Method -> "Queued"], " ", 
          Button["Edit Function", 
           DevTools`SourceTools`EditFunction[Daniel`ARC`ARCGoodRulesQ], 
           ImageSize -> {132.5, 40}, Method -> "Queued"], " ", 
          Row[{
            
            DynamicModule[{
             DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
              "Capture"}, 
             Button[
              Dynamic[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel], 
              If[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel === 
               "Capture", 
               DevTools`TestingTools`FunctionCapture`EnableFunctionCapture[
                Daniel`ARC`ARCGoodRulesQ]; 
               DevTools`TestingTools`FunctionCapture`\
RegisterFunctionCaptureNotebook[Daniel`ARC`ARCGoodRulesQ, 
                 InputNotebook[]]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Release"; Null, 
               DevTools`TestingTools`FunctionCapture`DisableFunctionCapture[
                Daniel`ARC`ARCGoodRulesQ]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Capture"; Null], ImageSize -> {100, 40}, Method -> "Queued"],
              DynamicModuleValues :> {}], 
            Button["?", 
             DevTools`TestingTools`FunctionCapture`CaptureFunctionHelp[], 
             ImageSize -> {30, 40}, Method -> "Queued"]}], " ", 
          Row[{
            Button["<", 
             DevTools`NotebookTools`MoveNotebook["Left"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"], 
            Button[">", 
             DevTools`NotebookTools`MoveNotebook["Right"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"]}]}], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272215495743631; If[
          And[
           ValueQ[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272215495743631], 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272215495743631 =!= "", 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272215495743631 =!= Null], 
          (If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {"MaxHeight" -> 300},
              "NakedSection"]], 
           Framed[#, FrameStyle -> None, FrameMargins -> 2], 
           
           Framed[#, FrameStyle -> LightGray, Background -> White, 
            FrameMargins -> 15]]& )[
           Grid[{{
              Pane[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272215495743631, "ImageSize" -> {Full, {0, 
                  OptionValue[
                  DevTools`NotebookTools`DynamicOutputSection, {
                   "MaxHeight" -> 300}, "MaxHeight"]}}, Scrollbars -> 
               Automatic, FrameMargins -> 0]}, 
             If[
              TrueQ[
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {
                "MaxHeight" -> 300}, "NakedSection"]], 
              Apply[Sequence, {}], {
               Button[
               "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272215495743631 = "", 
                ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
            Alignment -> {Left, Top}]], 
          Apply[Sequence, {}]]}], StandardForm], 
     TrackedSymbols :> {
      DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272215495743631}]], "DockedCell"]},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, 
  "CreateNamedNotebook2Args" -> {
   "ARCGoodRulesQ", "Type" -> "Function", 
    "GenerateNotebookArgs" -> {"Function" -> Daniel`ARC`ARCGoodRulesQ}, 
    "ReturnNotebook" -> True}},
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"0167fa70-1e79-4bef-a39d-59c708fdae63"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 85, 0, 96, "Title",ExpressionUUID->"85b32143-c88b-44ae-b32d-cf1a851309d0"],
Cell[668, 24, 248, 6, 53, "Code",ExpressionUUID->"55ea4775-16a4-47ce-871c-91f9ae6f151d",
 InitializationCell->False],
Cell[CellGroupData[{
Cell[941, 34, 79, 0, 67, "Section",ExpressionUUID->"122923fd-37b7-4ab2-9206-b0dde95af25b"],
Cell[1023, 36, 735, 20, 107, "Code",ExpressionUUID->"aa87f7aa-ab6e-4560-bb21-4dfb6522706f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->240537740],
Cell[1761, 58, 498, 10, 32, "Output",ExpressionUUID->"43e150fc-506c-4fee-89e6-ced376cdc7d1"],
Cell[CellGroupData[{
Cell[2284, 72, 3479, 81, 50, "TestUI",ExpressionUUID->"a5e1df92-6e84-4fde-8453-f7c9fd8fba35",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[5766, 155, 542, 15, 53, "Code",ExpressionUUID->"cc654f2a-3e45-4899-aeec-ec5df7508659",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->43296105]
}, Open  ]],
Cell[6323, 173, 159, 3, 32, "Output",ExpressionUUID->"b7b6856b-0c1e-4172-bf9f-66efd98b6875"]
}, Open  ]]
}, Open  ]]
}
]
*)

