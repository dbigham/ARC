(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     12792,        319]
NotebookOptionsPosition[      6375,        166]
NotebookOutlinePosition[     12092,        305]
CellTagsIndexPosition[     12049,        302]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ARCInferImageUseCountPropertyValues", "Title",ExpressionUUID->"9578e821-b437-43a9-a107-1ac718046c8c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"RunUnitTests", "[", "ARCInferImageUseCountPropertyValues", 
  "]"}]}], "Code",
 InitializationCell->False,
 CellLabel->
  "In[1936]:=",ExpressionUUID->"786ebbd6-c738-4fb3-a3a3-ad9d875ff560"],

Cell[CellGroupData[{

Cell["Tests", "Section",ExpressionUUID->"e9dcb7c1-929e-48fe-a8c2-4f9dde15b53c"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCInferImageUseCountPropertyValues-20220909-NHQHI6", 
              Daniel`ARC`ARCInferImageUseCountPropertyValues, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229994015108721], 25072072, "SubTest" -> None]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> 
            "ARCInferImageUseCountPropertyValues-20220909-NHQHI6"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCInferImageUseCountPropertyValues-20220909-NHQHI6", 
            Daniel`ARC`ARCInferImageUseCountPropertyValues, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229994015108721], "CellID" -> 25072072, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCInferImageUseCountPropertyValues-20220909-NHQHI6", 
           Daniel`ARC`ARCInferImageUseCountPropertyValues, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229994015108721], 
           Utility`FilterOptions[
           "SubTest" -> None, 
            DevTools`TestingTools`Private`openInEditorClicked]], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCInferImageUseCountPropertyValues-20220909-NHQHI6"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229994015108721; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229994015108721], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229994015108721 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229994015108721 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229994015108721, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229994015108721 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{840., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229994015108721}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.871719615493208*^9},ExpressionUUID->"08fa4d74-c56d-469f-9370-\
a66a20f6c4f5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ARCInferImageUseCountPropertyValues", "[", "\n", "\t", 
   RowBox[{"{", "\n", "\t\t", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{"\"\<Image\>\"", " ", "->", " ", "\"\<<my image>\>\""}], "|>"}],
      ",", "\n", "\t\t", 
     RowBox[{"<|", 
      RowBox[{"\"\<Image\>\"", " ", "->", " ", "\"\<<my image>\>\""}], "|>"}],
      ",", "\n", "\t\t", 
     RowBox[{"<|", 
      RowBox[{"\"\<Image\>\"", " ", "->", " ", "\"\<<my image 2>\>\""}], 
      "|>"}]}], "\n", "\t", "}"}], "\n", "]"}], " ", "//", " ", 
  "Indent3"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.8717195700504684`*^9, 3.871719615493208*^9}},
 CellLabel->"In[1934]:=",
 CellID->25072072,
 "TestId" -> 
 "ARCInferImageUseCountPropertyValues-20220909-NHQHI6",ExpressionUUID->\
"29f1d9a7-b52b-43db-a0ba-5b944be4411b"]
}, Open  ]],

Cell[BoxData["\<\"{\\n    <|\\\"Image\\\" -> \\\"<my image>\\\", \
\\\"ImageUseCount\\\" -> 2|>,\\n    <|\\\"Image\\\" -> \\\"<my image>\\\", \\\
\"ImageUseCount\\\" -> 2|>,\\n    <|\\\"Image\\\" -> \\\"<my image 2>\\\", \\\
\"ImageUseCount\\\" -> 1|>\\n}\"\>"], "Output",
 CellChangeTimes->{{3.8717195944941807`*^9, 3.8717196067546473`*^9}},
 CellLabel->
  "Out[1935]=",ExpressionUUID->"51396e8b-091e-4a96-8498-2a3e1d48b36c"]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Local",
WindowSize->{958, 980},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
DockedCells->{
  Cell[
   BoxData[
    DynamicBox[
     ToBoxes[
      Column[{
        Row[{
          Button["New Test", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`NewFunctionCell[
            Daniel`ARC`ARCInferImageUseCountPropertyValues], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022999389108662]], ImageSize -> {95., 40}, 
           Method -> "Queued"], " ", 
          Button["Add Tests to File", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`CreateUnitTests[
            Daniel`ARC`ARCInferImageUseCountPropertyValues, "SubTest" -> 
             None], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022999389108662]], ImageSize -> {162.5, 40}, 
           Method -> "Queued"], " ", 
          Button[
          "Run Tests", 
           DevTools`TestingTools`RunUnitTestsInNotebook[
            Daniel`ARC`ARCInferImageUseCountPropertyValues]; Null, 
           ImageSize -> {102.5, 40}, Method -> "Queued"], " ", 
          Button["Edit Tests", 
           DevTools`TestingTools`EditUnitTests[
           Daniel`ARC`ARCInferImageUseCountPropertyValues, "SubTest" -> None],
            ImageSize -> {110., 40}, Method -> "Queued"], " ", 
          Button["Edit Function", 
           DevTools`SourceTools`EditFunction[
           Daniel`ARC`ARCInferImageUseCountPropertyValues], 
           ImageSize -> {132.5, 40}, Method -> "Queued"], " ", 
          Row[{
            
            DynamicModule[{
             DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
              "Capture"}, 
             Button[
              Dynamic[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel], 
              If[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel === 
               "Capture", 
               DevTools`TestingTools`FunctionCapture`EnableFunctionCapture[
                Daniel`ARC`ARCInferImageUseCountPropertyValues]; 
               DevTools`TestingTools`FunctionCapture`\
RegisterFunctionCaptureNotebook[
                Daniel`ARC`ARCInferImageUseCountPropertyValues, 
                 InputNotebook[]]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Release"; Null, 
               DevTools`TestingTools`FunctionCapture`DisableFunctionCapture[
                Daniel`ARC`ARCInferImageUseCountPropertyValues]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Capture"; Null], ImageSize -> {100, 40}, Method -> "Queued"],
              DynamicModuleValues :> {}], 
            Button["?", 
             DevTools`TestingTools`FunctionCapture`CaptureFunctionHelp[], 
             ImageSize -> {30, 40}, Method -> "Queued"]}], " ", 
          Row[{
            Button["<", 
             DevTools`NotebookTools`MoveNotebook["Left"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"], 
            Button[">", 
             DevTools`NotebookTools`MoveNotebook["Right"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"]}]}], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022999389108662; If[
          And[
           ValueQ[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022999389108662], 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022999389108662 =!= "", 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022999389108662 =!= Null], 
          (If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {"MaxHeight" -> 300},
              "NakedSection"]], 
           Framed[#, FrameStyle -> None, FrameMargins -> 2], 
           
           Framed[#, FrameStyle -> LightGray, Background -> White, 
            FrameMargins -> 15]]& )[
           Grid[{{
              Pane[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022999389108662, "ImageSize" -> {Full, {0, 
                  OptionValue[
                  DevTools`NotebookTools`DynamicOutputSection, {
                   "MaxHeight" -> 300}, "MaxHeight"]}}, Scrollbars -> 
               Automatic, FrameMargins -> 0]}, 
             If[
              TrueQ[
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {
                "MaxHeight" -> 300}, "NakedSection"]], 
              Apply[Sequence, {}], {
               Button[
               "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022999389108662 = "", ImageSize -> {100, 33}]}]},
             Spacings -> {0, 1}, Alignment -> {Left, Top}]], 
          Apply[Sequence, {}]]}], StandardForm], 
     TrackedSymbols :> {
      DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022999389108662}]], "DockedCell"]},
TaggingRules->{
 "CreateNamedNotebook2Args" -> {
   "ARCInferImageUseCountPropertyValues", "Type" -> "Function", 
    "GenerateNotebookArgs" -> {
     "Function" -> Daniel`ARC`ARCInferImageUseCountPropertyValues}, 
    "ReturnNotebook" -> True}},
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"65723460-6bc9-4139-a7ae-d2d2cab70586"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 107, 0, 98, "Title",ExpressionUUID->"9578e821-b437-43a9-a107-1ac718046c8c"],
Cell[690, 24, 274, 7, 54, "Code",ExpressionUUID->"786ebbd6-c738-4fb3-a3a3-ad9d875ff560",
 InitializationCell->False],
Cell[CellGroupData[{
Cell[989, 35, 79, 0, 67, "Section",ExpressionUUID->"e9dcb7c1-929e-48fe-a8c2-4f9dde15b53c"],
Cell[CellGroupData[{
Cell[1093, 39, 3859, 88, 52, "TestUI",ExpressionUUID->"08fa4d74-c56d-469f-9370-a66a20f6c4f5",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[4955, 129, 951, 24, 162, "Code",ExpressionUUID->"29f1d9a7-b52b-43db-a0ba-5b944be4411b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->25072072]
}, Open  ]],
Cell[5921, 156, 426, 6, 114, "Output",ExpressionUUID->"51396e8b-091e-4a96-8498-2a3e1d48b36c"]
}, Open  ]]
}, Open  ]]
}
]
*)

