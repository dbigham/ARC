(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     12392,        306]
NotebookOptionsPosition[      5934,        153]
NotebookOutlinePosition[     11693,        292]
CellTagsIndexPosition[     11650,        289]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ARCGridSizeMatchesOutputPixelDimensions", "Title",ExpressionUUID->"c1e8a769-6ad4-48f9-98d3-edc0c3dca75b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"RunUnitTests", "[", "ARCGridSizeMatchesOutputPixelDimensions", 
  "]"}]}], "Code",
 InitializationCell->False,
 CellLabel->"In[7]:=",ExpressionUUID->"19c72456-9f0d-41bf-8269-be59bcefd46f"],

Cell[CellGroupData[{

Cell["Tests", "Section",ExpressionUUID->"3f55fcd5-b094-4829-aeb7-35878d5864b2"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCGridSizeMatchesOutputPixelDimensions-20220910-S4VBKW", 
              Daniel`ARC`ARCGridSizeMatchesOutputPixelDimensions, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291022386127], 37465363, "SubTest" -> None]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> 
            "ARCGridSizeMatchesOutputPixelDimensions-20220910-S4VBKW"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCGridSizeMatchesOutputPixelDimensions-20220910-S4VBKW", 
            Daniel`ARC`ARCGridSizeMatchesOutputPixelDimensions, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291022386127], "CellID" -> 37465363, "SubTest" -> 
            None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCGridSizeMatchesOutputPixelDimensions-20220910-S4VBKW", 
           Daniel`ARC`ARCGridSizeMatchesOutputPixelDimensions, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291022386127], 
           Utility`FilterOptions[
           "SubTest" -> None, 
            DevTools`TestingTools`Private`openInEditorClicked]], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCGridSizeMatchesOutputPixelDimensions-20220910-S4VBKW"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291022386127; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291022386127], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291022386127 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291022386127 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291022386127, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291022386127 = "", ImageSize -> {100, 33}]}]}, 
         Spacings -> {0, 1}, Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{840., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`DynamicOutputSectionVariable202291022386127}\
]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.8718526863143616`*^9},ExpressionUUID->"b518d26c-e1bb-41ad-a0a7-\
0d16a346ba7c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"ARCGridSizeMatchesOutputPixelDimensions", "[", "\n", "\t", 
  RowBox[{"ARCParseInputAndOutputScenes", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"ARCParseFile", "[", "\"\<6773b310\>\"", "]"}], "[", 
    "\"\<Train\>\"", "]"}], "\n", "\t", "]"}], "\n", "]"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.8718260574951534`*^9, 3.871826058683978*^9}, {
  3.8718261652684803`*^9, 3.8718261807155714`*^9}, {3.8718526646606812`*^9, 
  3.871852671686129*^9}},
 CellLabel->"In[5]:=",
 CellID->37465363,
 "TestId" -> 
 "ARCGridSizeMatchesOutputPixelDimensions-20220910-S4VBKW",ExpressionUUID->\
"50fc9650-be7a-4c8a-9426-3d872a783d6c"]
}, Open  ]],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8718526768276677`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"5f83b531-d51c-4013-827d-d4631b53361b"]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Local",
WindowSize->{958, 980},
WindowMargins->{{-7., Automatic}, {Automatic, 0}},
DockedCells->{
  Cell[
   BoxData[
    DynamicBox[
     ToBoxes[
      Column[{
        Row[{
          Button["New Test", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`NewFunctionCell[
            Daniel`ARC`ARCGridSizeMatchesOutputPixelDimensions], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022910223528116]], ImageSize -> {95., 40}, 
           Method -> "Queued"], " ", 
          Button["Add Tests to File", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`CreateUnitTests[
            Daniel`ARC`ARCGridSizeMatchesOutputPixelDimensions, "SubTest" -> 
             None], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022910223528116]], ImageSize -> {162.5, 40}, 
           Method -> "Queued"], " ", 
          Button[
          "Run Tests", 
           DevTools`TestingTools`RunUnitTestsInNotebook[
            Daniel`ARC`ARCGridSizeMatchesOutputPixelDimensions]; Null, 
           ImageSize -> {102.5, 40}, Method -> "Queued"], " ", 
          Button["Edit Tests", 
           DevTools`TestingTools`EditUnitTests[
           Daniel`ARC`ARCGridSizeMatchesOutputPixelDimensions, "SubTest" -> 
            None], ImageSize -> {110., 40}, Method -> "Queued"], " ", 
          Button["Edit Function", 
           DevTools`SourceTools`EditFunction[
           Daniel`ARC`ARCGridSizeMatchesOutputPixelDimensions], 
           ImageSize -> {132.5, 40}, Method -> "Queued"], " ", 
          Row[{
            
            DynamicModule[{
             DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
              "Capture"}, 
             Button[
              Dynamic[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel], 
              If[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel === 
               "Capture", 
               DevTools`TestingTools`FunctionCapture`EnableFunctionCapture[
                Daniel`ARC`ARCGridSizeMatchesOutputPixelDimensions]; 
               DevTools`TestingTools`FunctionCapture`\
RegisterFunctionCaptureNotebook[
                Daniel`ARC`ARCGridSizeMatchesOutputPixelDimensions, 
                 InputNotebook[]]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Release"; Null, 
               DevTools`TestingTools`FunctionCapture`DisableFunctionCapture[
                Daniel`ARC`ARCGridSizeMatchesOutputPixelDimensions]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Capture"; Null], ImageSize -> {100, 40}, Method -> "Queued"],
              DynamicModuleValues :> {}], 
            Button["?", 
             DevTools`TestingTools`FunctionCapture`CaptureFunctionHelp[], 
             ImageSize -> {30, 40}, Method -> "Queued"]}], " ", 
          Row[{
            Button["<", 
             DevTools`NotebookTools`MoveNotebook["Left"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"], 
            Button[">", 
             DevTools`NotebookTools`MoveNotebook["Right"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"]}]}], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022910223528116; If[
          And[
           ValueQ[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022910223528116], 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022910223528116 =!= "", 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022910223528116 =!= Null], 
          (If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {"MaxHeight" -> 300},
              "NakedSection"]], 
           Framed[#, FrameStyle -> None, FrameMargins -> 2], 
           
           Framed[#, FrameStyle -> LightGray, Background -> White, 
            FrameMargins -> 15]]& )[
           Grid[{{
              Pane[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022910223528116, "ImageSize" -> {Full, {0, 
                  OptionValue[
                  DevTools`NotebookTools`DynamicOutputSection, {
                   "MaxHeight" -> 300}, "MaxHeight"]}}, Scrollbars -> 
               Automatic, FrameMargins -> 0]}, 
             If[
              TrueQ[
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {
                "MaxHeight" -> 300}, "NakedSection"]], 
              Apply[Sequence, {}], {
               Button[
               "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022910223528116 = "", ImageSize -> {100, 33}]}]},
             Spacings -> {0, 1}, Alignment -> {Left, Top}]], 
          Apply[Sequence, {}]]}], StandardForm], 
     TrackedSymbols :> {
      DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022910223528116}]], "DockedCell"]},
TaggingRules->{
 "CreateNamedNotebook2Args" -> {
   "ARCGridSizeMatchesOutputPixelDimensions", "Type" -> "Function", 
    "GenerateNotebookArgs" -> {
     "Function" -> Daniel`ARC`ARCGridSizeMatchesOutputPixelDimensions}, 
    "ReturnNotebook" -> True}},
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"2e50b4a3-9b63-45c1-b596-d09cd6b907f6"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 111, 0, 98, "Title",ExpressionUUID->"c1e8a769-6ad4-48f9-98d3-edc0c3dca75b"],
Cell[694, 24, 272, 6, 54, "Code",ExpressionUUID->"19c72456-9f0d-41bf-8269-be59bcefd46f",
 InitializationCell->False],
Cell[CellGroupData[{
Cell[991, 34, 79, 0, 67, "Section",ExpressionUUID->"3f55fcd5-b094-4829-aeb7-35878d5864b2"],
Cell[CellGroupData[{
Cell[1095, 38, 3859, 87, 52, "TestUI",ExpressionUUID->"b518d26c-e1bb-41ad-a0a7-0d16a346ba7c",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[4957, 127, 781, 17, 126, "Code",ExpressionUUID->"50fc9650-be7a-4c8a-9426-3d872a783d6c",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->37465363]
}, Open  ]],
Cell[5753, 147, 153, 2, 33, "Output",ExpressionUUID->"5f83b531-d51c-4013-827d-d4631b53361b"]
}, Open  ]]
}, Open  ]]
}
]
*)

