(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     21638,        521]
NotebookOptionsPosition[     15306,        366]
NotebookOutlinePosition[     20937,        507]
CellTagsIndexPosition[     20894,        504]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ARCInferShapeAndShapes", "Title",ExpressionUUID->"08618e9e-e293-485a-96ee-36ff4b51ea6e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"RunUnitTests", "[", "ARCInferShapeAndShapes", "]"}]}], "Code",
 InitializationCell->False,
 CellLabel->
  "In[492]:=",ExpressionUUID->"2e62652b-0e80-42b8-af91-ea776acf3db8"],

Cell[CellGroupData[{

Cell["Tests", "Section",ExpressionUUID->"78a4ab73-943a-4a24-a929-8599f2304f16"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCInferShapeAndShapes-20220816-0MH7C6", 
              Daniel`ARC`ARCInferShapeAndShapes, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202281617341243397], 40591322]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> 
            "ARCInferShapeAndShapes-20220816-0MH7C6"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCInferShapeAndShapes-20220816-0MH7C6", 
            Daniel`ARC`ARCInferShapeAndShapes, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202281617341243397], "CellID" -> 40591322, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCInferShapeAndShapes-20220816-0MH7C6", 
           Daniel`ARC`ARCInferShapeAndShapes, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202281617341243397], None], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCInferShapeAndShapes-20220816-0MH7C6"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202281617341243397; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202281617341243397], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202281617341243397 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202281617341243397 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202281617341243397, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202281617341243397 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{840., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202281617341243397}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.8696744515462666`*^9},ExpressionUUID->"ab90838e-898c-4ecc-924b-\
db77c5d6a217"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ARCInferShapeAndShapes", "[", "\n", "\t", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", " ", "2", ",", " ", "2"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"2", ",", " ", 
       RowBox[{"-", "1"}], ",", " ", 
       RowBox[{"-", "1"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"2", ",", " ", 
       RowBox[{"-", "1"}], ",", " ", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}], "\n", "]"}], " ", "//", " ", 
  "ARCIndent"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.869674354141845*^9, 3.869674370216387*^9}, {
  3.8696744398737783`*^9, 3.8696744515462666`*^9}},
 CellLabel->"In[504]:=",
 CellID->40591322,
 "TestId" -> 
 "ARCInferShapeAndShapes-20220816-0MH7C6",ExpressionUUID->"b6e202e8-a76b-448a-\
b5bf-3508097317f7"]
}, Open  ]],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"<|\"\>"},
    {
     TemplateBox[{
       TemplateBox[{"\"    \"", 
         TemplateBox[{"\"\\\"Shape\\\" -> \"", 
           TagBox[
            TooltipBox[
             FrameBox["\"L\"", FrameStyle -> Directive[
                RGBColor[1, 0.5, 0.], "Thickness" -> 1], RoundingRadius -> 4, 
              Background -> 
              RGBColor[1., 0.9803921568627451, 0.9215686274509803], BaseStyle -> {
                RGBColor[0.4, 0.21, 0.06], "FontFamily" -> "Arial"}, 
              BaselinePosition -> Baseline, ContentPadding -> True, 
              FrameMargins -> {{5, 5}, {3, 3}}, StripOnInput -> False], 
             
             TemplateBox[{
              "\"<|\\\"Name\\\" -> \\\"L\\\", \\\"Transform\\\" -> \"", 
               "\"<|\\\"Type\\\" -> \\\"Rotation\\\", \\\"Angle\\\" -> \
90|>\"", "\"|>\""}, "RowDefault"], TooltipDelay -> 0.4, LabelStyle -> 
             "TextStyling"], Annotation[#, 
             
             Row[{"<|\"Name\" -> \"L\", \"Transform\" -> ", 
               "<|\"Type\" -> \"Rotation\", \"Angle\" -> 90|>", "|>"}], 
             "Tooltip"]& ]}, "RowDefault"]}, "RowDefault"], "\",\""},
      "RowDefault"]},
    {"\<\"    \\\"Shapes\\\" -> {\"\>"},
    {
     TemplateBox[{
       TemplateBox[{"\"        \"", 
         TemplateBox[{"\"<|\\\"Image\\\" -> \"", 
           TagBox[
            
            GridBox[{{"\"\"", "\"\"", "\"\""}, {"\"\"", "\"\"", "\"\""}, {
              "\"\"", "\"\"", "\"\""}}, AutoDelete -> False, 
             GridBoxBackground -> {
              "Columns" -> {{None}}, "Rows" -> {{None}}, 
               "ItemsIndexed" -> {{1, 1} -> GrayLevel[1], {1, 2} -> 
                 GrayLevel[1], {1, 3} -> GrayLevel[1], {2, 1} -> 
                 GrayLevel[1], {2, 2} -> GrayLevel[0.2], {2, 3} -> 
                 GrayLevel[0.2], {3, 1} -> GrayLevel[1], {3, 2} -> 
                 GrayLevel[0.2], {3, 3} -> GrayLevel[0.2]}}, 
             GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
             GridBoxFrame -> {
              "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}}, 
             GridBoxItemSize -> {"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}, 
             FrameStyle -> {
               AbsoluteThickness[1], 
               GrayLevel[0.5]}], "Grid"], "\"|>\""}, "RowDefault"]}, 
        "RowDefault"], "\",\""},
      "RowDefault"]},
    {"\<\"        <|\"\>"},
    {
     TemplateBox[{
       TemplateBox[{"\"            \"", 
         TemplateBox[{"\"\\\"Image\\\" -> \"", 
           TagBox[
            
            GridBox[{{"\"\"", "\"\"", "\"\""}, {"\"\"", "\"\"", "\"\""}, {
              "\"\"", "\"\"", "\"\""}}, AutoDelete -> False, 
             GridBoxBackground -> {
              "Columns" -> {{None}}, "Rows" -> {{None}}, 
               "ItemsIndexed" -> {{1, 1} -> GrayLevel[1], {1, 2} -> 
                 GrayLevel[1], {1, 3} -> GrayLevel[1], {2, 1} -> 
                 GrayLevel[0.2], {2, 2} -> GrayLevel[0.2], {2, 3} -> 
                 GrayLevel[1], {3, 1} -> GrayLevel[0.2], {3, 2} -> 
                 GrayLevel[0.2], {3, 3} -> GrayLevel[1]}}, 
             GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
             GridBoxFrame -> {
              "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}}, 
             GridBoxItemSize -> {"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}, 
             FrameStyle -> {
               AbsoluteThickness[1], 
               GrayLevel[0.5]}], "Grid"]}, "RowDefault"]}, "RowDefault"], 
       "\",\""},
      "RowDefault"]},
    {"\<\"            \\\"Transform\\\" -> <|\\\"Type\\\" -> \
\\\"Rotation\\\", \\\"Angle\\\" -> 270|>\"\>"},
    {"\<\"        |>,\"\>"},
    {"\<\"        <|\"\>"},
    {
     TemplateBox[{
       TemplateBox[{"\"            \"", 
         TemplateBox[{"\"\\\"Image\\\" -> \"", 
           TagBox[
            
            GridBox[{{"\"\"", "\"\"", "\"\""}, {"\"\"", "\"\"", "\"\""}, {
              "\"\"", "\"\"", "\"\""}}, AutoDelete -> False, 
             GridBoxBackground -> {
              "Columns" -> {{None}}, "Rows" -> {{None}}, 
               "ItemsIndexed" -> {{1, 1} -> GrayLevel[0.2], {1, 2} -> 
                 GrayLevel[0.2], {1, 3} -> GrayLevel[1], {2, 1} -> 
                 GrayLevel[0.2], {2, 2} -> GrayLevel[0.2], {2, 3} -> 
                 GrayLevel[1], {3, 1} -> GrayLevel[1], {3, 2} -> 
                 GrayLevel[1], {3, 3} -> GrayLevel[1]}}, 
             GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
             GridBoxFrame -> {
              "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}}, 
             GridBoxItemSize -> {"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}, 
             FrameStyle -> {
               AbsoluteThickness[1], 
               GrayLevel[0.5]}], "Grid"]}, "RowDefault"]}, "RowDefault"], 
       "\",\""},
      "RowDefault"]},
    {"\<\"            \\\"Transform\\\" -> <|\\\"Type\\\" -> \
\\\"Rotation\\\", \\\"Angle\\\" -> 180|>\"\>"},
    {"\<\"        |>,\"\>"},
    {"\<\"        <|\"\>"},
    {
     TemplateBox[{
       TemplateBox[{"\"            \"", 
         TemplateBox[{"\"\\\"Image\\\" -> \"", 
           TagBox[
            
            GridBox[{{"\"\"", "\"\"", "\"\""}, {"\"\"", "\"\"", "\"\""}, {
              "\"\"", "\"\"", "\"\""}}, AutoDelete -> False, 
             GridBoxBackground -> {
              "Columns" -> {{None}}, "Rows" -> {{None}}, 
               "ItemsIndexed" -> {{1, 1} -> GrayLevel[1], {1, 2} -> 
                 GrayLevel[0.2], {1, 3} -> GrayLevel[0.2], {2, 1} -> 
                 GrayLevel[1], {2, 2} -> GrayLevel[0.2], {2, 3} -> 
                 GrayLevel[0.2], {3, 1} -> GrayLevel[1], {3, 2} -> 
                 GrayLevel[1], {3, 3} -> GrayLevel[1]}}, 
             GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
             GridBoxFrame -> {
              "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}}, 
             GridBoxItemSize -> {"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}, 
             FrameStyle -> {
               AbsoluteThickness[1], 
               GrayLevel[0.5]}], "Grid"]}, "RowDefault"]}, "RowDefault"], 
       "\",\""},
      "RowDefault"]},
    {"\<\"            \\\"Transform\\\" -> <|\\\"Type\\\" -> \
\\\"Rotation\\\", \\\"Angle\\\" -> 90|>\"\>"},
    {"\<\"        |>,\"\>"},
    {
     TemplateBox[{
       TemplateBox[{"\"        \"", 
         TagBox[
          TooltipBox[
           FrameBox["\"L\"", FrameStyle -> Directive[
              RGBColor[1, 0.5, 0.], "Thickness" -> 1], RoundingRadius -> 4, 
            Background -> 
            RGBColor[1., 0.9803921568627451, 0.9215686274509803], BaseStyle -> {
              RGBColor[0.4, 0.21, 0.06], "FontFamily" -> "Arial"}, 
            BaselinePosition -> Baseline, ContentPadding -> True, 
            FrameMargins -> {{5, 5}, {3, 3}}, StripOnInput -> False], 
           "\"<|\\\"Name\\\" -> \\\"L\\\"|>\"", TooltipDelay -> 0.4, 
           LabelStyle -> "TextStyling"], 
          Annotation[#, "<|\"Name\" -> \"L\"|>", "Tooltip"]& ]}, 
        "RowDefault"], "\",\""},
      "RowDefault"]},
    {
     TemplateBox[{
       TemplateBox[{"\"        \"", 
         TagBox[
          TooltipBox[
           FrameBox["\"L\"", FrameStyle -> Directive[
              RGBColor[1, 0.5, 0.], "Thickness" -> 1], RoundingRadius -> 4, 
            Background -> 
            RGBColor[1., 0.9803921568627451, 0.9215686274509803], BaseStyle -> {
              RGBColor[0.4, 0.21, 0.06], "FontFamily" -> "Arial"}, 
            BaselinePosition -> Baseline, ContentPadding -> True, 
            FrameMargins -> {{5, 5}, {3, 3}}, StripOnInput -> False], 
           
           TemplateBox[{
            "\"<|\\\"Name\\\" -> \\\"L\\\", \\\"Transform\\\" -> \"", 
             "\"<|\\\"Type\\\" -> \\\"Rotation\\\", \\\"Angle\\\" -> 90|>\"", 
             "\"|>\""}, "RowDefault"], TooltipDelay -> 0.4, LabelStyle -> 
           "TextStyling"], Annotation[#, 
           
           Row[{"<|\"Name\" -> \"L\", \"Transform\" -> ", 
             "<|\"Type\" -> \"Rotation\", \"Angle\" -> 90|>", "|>"}], 
           "Tooltip"]& ]}, "RowDefault"], "\",\""},
      "RowDefault"]},
    {
     TemplateBox[{"\"        \"", 
       TagBox[
        TooltipBox[
         FrameBox["\"L\"", FrameStyle -> Directive[
            RGBColor[1, 0.5, 0.], "Thickness" -> 1], RoundingRadius -> 4, 
          Background -> RGBColor[1., 0.9803921568627451, 0.9215686274509803], 
          BaseStyle -> {
            RGBColor[0.4, 0.21, 0.06], "FontFamily" -> "Arial"}, 
          BaselinePosition -> Baseline, ContentPadding -> True, 
          FrameMargins -> {{5, 5}, {3, 3}}, StripOnInput -> False], 
         TemplateBox[{
          "\"<|\\\"Name\\\" -> \\\"L\\\", \\\"Transform\\\" -> \"", 
           "\"<|\\\"Type\\\" -> \\\"Flip\\\", \\\"Direction\\\" -> \
\\\"Vertical\\\"|>\"", "\"|>\""}, "RowDefault"], TooltipDelay -> 0.4, 
         LabelStyle -> "TextStyling"], Annotation[#, 
         Row[{
          "<|\"Name\" -> \"L\", \"Transform\" -> ", 
           "<|\"Type\" -> \"Flip\", \"Direction\" -> \"Vertical\"|>", "|>"}], 
         "Tooltip"]& ]},
      "RowDefault"]},
    {"\<\"    }\"\>"},
    {"\<\"|>\"\>"}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.8696743567416754`*^9, 3.8696743849643917`*^9}, {
   3.8696744374829187`*^9, 3.8696744418260283`*^9}, 3.8696745528010635`*^9, 
   3.86967460267196*^9},
 CellLabel->
  "Out[505]=",ExpressionUUID->"8830a490-1f9d-40d6-bd6b-ea57e4b541cd"]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Local",
WindowSize->{958, 980},
WindowMargins->{{-7., Automatic}, {Automatic, 0}},
Visible->True,
DockedCells->{
  Cell[
   BoxData[
    DynamicBox[
     ToBoxes[
      Column[{
        Row[{
          Button["New Test", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`NewFunctionCell[
            Daniel`ARC`ARCInferShapeAndShapes], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202281617315843214]], ImageSize -> {95., 40}, 
           Method -> "Queued"], " ", 
          Button["Add Tests to File", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`CreateUnitTests[
            Daniel`ARC`ARCInferShapeAndShapes, "SubTest" -> None], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202281617315843214]], ImageSize -> {162.5, 40}, 
           Method -> "Queued"], " ", 
          Button[
          "Run Tests", 
           DevTools`TestingTools`RunUnitTestsInNotebook[
            Daniel`ARC`ARCInferShapeAndShapes]; Null, 
           ImageSize -> {102.5, 40}, Method -> "Queued"], " ", 
          Button["Edit Tests", 
           DevTools`TestingTools`EditUnitTests[
           Daniel`ARC`ARCInferShapeAndShapes], ImageSize -> {110., 40}, 
           Method -> "Queued"], " ", 
          Button["Edit Function", 
           DevTools`SourceTools`EditFunction[
           Daniel`ARC`ARCInferShapeAndShapes], ImageSize -> {132.5, 40}, 
           Method -> "Queued"], " ", 
          Row[{
            
            DynamicModule[{
             DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
              "Capture"}, 
             Button[
              Dynamic[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel], 
              If[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel === 
               "Capture", 
               DevTools`TestingTools`FunctionCapture`EnableFunctionCapture[
                Daniel`ARC`ARCInferShapeAndShapes]; 
               
               DevTools`TestingTools`FunctionCapture`\
RegisterFunctionCaptureNotebook[Daniel`ARC`ARCInferShapeAndShapes, 
                 InputNotebook[]]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Release"; Null, 
               DevTools`TestingTools`FunctionCapture`DisableFunctionCapture[
                Daniel`ARC`ARCInferShapeAndShapes]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Capture"; Null], ImageSize -> {100, 40}, Method -> "Queued"],
              DynamicModuleValues :> {}], 
            Button["?", 
             DevTools`TestingTools`FunctionCapture`CaptureFunctionHelp[], 
             ImageSize -> {30, 40}, Method -> "Queued"]}], " ", 
          Row[{
            Button["<", 
             DevTools`NotebookTools`MoveNotebook["Left"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"], 
            Button[">", 
             DevTools`NotebookTools`MoveNotebook["Right"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"]}]}], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202281617315843214; If[
          And[
           ValueQ[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202281617315843214], 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202281617315843214 =!= "", 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202281617315843214 =!= Null], 
          (If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {"MaxHeight" -> 300},
              "NakedSection"]], 
           Framed[#, FrameStyle -> None, FrameMargins -> 2], 
           
           Framed[#, FrameStyle -> LightGray, Background -> White, 
            FrameMargins -> 15]]& )[
           Grid[{{
              Pane[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202281617315843214, "ImageSize" -> {Full, {0, 
                  OptionValue[
                  DevTools`NotebookTools`DynamicOutputSection, {
                   "MaxHeight" -> 300}, "MaxHeight"]}}, Scrollbars -> 
               Automatic, FrameMargins -> 0]}, 
             If[
              TrueQ[
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {
                "MaxHeight" -> 300}, "NakedSection"]], 
              Apply[Sequence, {}], {
               Button[
               "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202281617315843214 = "", 
                ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
            Alignment -> {Left, Top}]], 
          Apply[Sequence, {}]]}], StandardForm], 
     TrackedSymbols :> {
      DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202281617315843214}]], "DockedCell"]},
TaggingRules->{
 "CreateNamedNotebook2Args" -> {
   "ARCInferShapeAndShapes", "Type" -> "Function", 
    "GenerateNotebookArgs" -> {
     "Function" -> Daniel`ARC`ARCInferShapeAndShapes}, "ReturnNotebook" -> 
    True}},
InputAutoReplacements->{},
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"b3dc45db-3996-4620-b0a5-ba51c98e630d"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 94, 0, 98, "Title",ExpressionUUID->"08618e9e-e293-485a-96ee-36ff4b51ea6e"],
Cell[677, 24, 257, 6, 54, "Code",ExpressionUUID->"2e62652b-0e80-42b8-af91-ea776acf3db8",
 InitializationCell->False],
Cell[CellGroupData[{
Cell[959, 34, 79, 0, 67, "Section",ExpressionUUID->"78a4ab73-943a-4a24-a929-8599f2304f16"],
Cell[CellGroupData[{
Cell[1063, 38, 3624, 85, 52, "TestUI",ExpressionUUID->"ab90838e-898c-4ecc-924b-db77c5d6a217",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[4690, 125, 938, 26, 90, "Code",ExpressionUUID->"b6e202e8-a76b-448a-b5bf-3508097317f7",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->40591322]
}, Open  ]],
Cell[5643, 154, 9635, 208, 671, "Output",ExpressionUUID->"8830a490-1f9d-40d6-bd6b-ea57e4b541cd"]
}, Open  ]]
}, Open  ]]
}
]
*)

