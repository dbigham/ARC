(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     18149,        471]
NotebookOptionsPosition[     11388,        308]
NotebookOutlinePosition[     16974,        448]
CellTagsIndexPosition[     16931,        445]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ARCCombineRowOfImages", "Title",ExpressionUUID->"0e097089-819f-466b-b7d6-826c9b98a49f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"RunUnitTests", "[", "ARCCombineRowOfImages", "]"}]}], "Code",
 InitializationCell->False,
 CellLabel->
  "In[156]:=",ExpressionUUID->"0284ab7e-3670-4e96-b0e4-e9bcd4d26cd9"],

Cell[CellGroupData[{

Cell["Tests", "Section",ExpressionUUID->"29b02916-7753-42ad-ae09-30a4dd685d61"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCCombineRowOfImages-20220907-9MRTVH", 
              Daniel`ARC`ARCCombineRowOfImages, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229793259850], 94765416, "SubTest" -> None]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> 
            "ARCCombineRowOfImages-20220907-9MRTVH"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCCombineRowOfImages-20220907-9MRTVH", 
            Daniel`ARC`ARCCombineRowOfImages, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229793259850], "CellID" -> 94765416, "SubTest" -> 
            None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCCombineRowOfImages-20220907-9MRTVH", 
           Daniel`ARC`ARCCombineRowOfImages, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229793259850], 
           Utility`FilterOptions[
           "SubTest" -> None, 
            DevTools`TestingTools`Private`openInEditorClicked]], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCCombineRowOfImages-20220907-9MRTVH"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229793259850; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229793259850], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229793259850 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229793259850 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229793259850, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229793259850 = "", ImageSize -> {100, 33}]}]}, 
         Spacings -> {0, 1}, Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{840., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`DynamicOutputSectionVariable20229793259850}]\
], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.8715463790173635`*^9},ExpressionUUID->"d6fb8e52-aef6-48c0-abf9-\
96fd8cf7d8af"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"ARCCombineRowOfImages", "[", "\n", "\t", 
  RowBox[{"{", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", " ", "2"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"3", ",", " ", "4"}], "}"}]}], "}"}], ",", "\n", "\t\t", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"5", ",", " ", "6"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"7", ",", " ", "8"}], "}"}]}], "}"}]}], "\n", "\t", "}"}], 
  "\n", "]"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.871546169781001*^9, 3.8715461840749617`*^9}, {
  3.8715463653952885`*^9, 3.8715463790173635`*^9}},
 CellLabel->"In[138]:=",
 CellID->94765416,
 "TestId" -> 
 "ARCCombineRowOfImages-20220907-9MRTVH",ExpressionUUID->"a94a1133-cf50-4f1d-\
92ad-a2b9cf828839"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "7", ",", "8"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8715461869511085`*^9, 3.8715462343082795`*^9, {3.8715463358329043`*^9, 
   3.871546372048693*^9}},
 CellLabel->
  "Out[139]=",ExpressionUUID->"30a00257-3cac-4394-93a8-2e7a11af4a77"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCCombineRowOfImages-20220907-6AHPEQ", 
              Daniel`ARC`ARCCombineRowOfImages, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229793929867], 22009534, "SubTest" -> None]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> 
            "ARCCombineRowOfImages-20220907-6AHPEQ"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCCombineRowOfImages-20220907-6AHPEQ", 
            Daniel`ARC`ARCCombineRowOfImages, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229793929867], "CellID" -> 22009534, "SubTest" -> 
            None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCCombineRowOfImages-20220907-6AHPEQ", 
           Daniel`ARC`ARCCombineRowOfImages, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229793929867], 
           Utility`FilterOptions[
           "SubTest" -> None, 
            DevTools`TestingTools`Private`openInEditorClicked]], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCCombineRowOfImages-20220907-6AHPEQ"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229793929867; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229793929867], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229793929867 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229793929867 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229793929867, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229793929867 = "", ImageSize -> {100, 33}]}]}, 
         Spacings -> {0, 1}, Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{840., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`DynamicOutputSectionVariable20229793929867}]\
], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.8715467686400723`*^9},ExpressionUUID->"c4149204-523f-4e16-9e11-\
2cdef383c198"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"ARCCombineRowOfImages", "[", "\n", "\t", 
  RowBox[{"{", "\n", "\t\t", 
   RowBox[{
    RowBox[{"ARCScene", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "2"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"3", ",", " ", "4"}], "}"}]}], "}"}], "]"}], ",", "\n", 
    "\t\t", 
    RowBox[{"ARCScene", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", " ", "6"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"7", ",", " ", "8"}], "}"}]}], "}"}], "]"}]}], "\n", "\t", 
   "}"}], "\n", "]"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.871546169781001*^9, 3.8715461840749617`*^9}, {
  3.8715463653952885`*^9, 3.8715463790173635`*^9}, {3.871546760003009*^9, 
  3.871546766597989*^9}},
 CellLabel->"In[158]:=",
 CellID->22009534,
 "TestId" -> 
 "ARCCombineRowOfImages-20220907-6AHPEQ",ExpressionUUID->"864963ca-dff3-488a-\
b408-61f3973795a2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "7", ",", "8"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.871546767063841*^9, 3.871546793563554*^9}},
 CellLabel->
  "Out[159]=",ExpressionUUID->"1212d3e7-ed48-4f6f-b213-1cf99082310e"]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Local",
WindowSize->{958, 980},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
Visible->True,
DockedCells->{
  Cell[
   BoxData[
    DynamicBox[
     ToBoxes[
      Column[{
        Row[{
          Button["New Test", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`NewFunctionCell[
            Daniel`ARC`ARCCombineRowOfImages], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229792918838]], ImageSize -> {95., 40}, Method -> 
           "Queued"], " ", 
          Button["Add Tests to File", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`CreateUnitTests[
            Daniel`ARC`ARCCombineRowOfImages, "SubTest" -> None], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229792918838]], ImageSize -> {162.5, 40}, 
           Method -> "Queued"], " ", 
          Button[
          "Run Tests", 
           DevTools`TestingTools`RunUnitTestsInNotebook[
            Daniel`ARC`ARCCombineRowOfImages]; Null, ImageSize -> {102.5, 40},
            Method -> "Queued"], " ", 
          Button["Edit Tests", 
           DevTools`TestingTools`EditUnitTests[
           Daniel`ARC`ARCCombineRowOfImages, "SubTest" -> None], 
           ImageSize -> {110., 40}, Method -> "Queued"], " ", 
          Button["Edit Function", 
           DevTools`SourceTools`EditFunction[
           Daniel`ARC`ARCCombineRowOfImages], ImageSize -> {132.5, 40}, 
           Method -> "Queued"], " ", 
          Row[{
            
            DynamicModule[{
             DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
              "Capture"}, 
             Button[
              Dynamic[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel], 
              If[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel === 
               "Capture", 
               DevTools`TestingTools`FunctionCapture`EnableFunctionCapture[
                Daniel`ARC`ARCCombineRowOfImages]; 
               
               DevTools`TestingTools`FunctionCapture`\
RegisterFunctionCaptureNotebook[Daniel`ARC`ARCCombineRowOfImages, 
                 InputNotebook[]]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Release"; Null, 
               DevTools`TestingTools`FunctionCapture`DisableFunctionCapture[
                Daniel`ARC`ARCCombineRowOfImages]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Capture"; Null], ImageSize -> {100, 40}, Method -> "Queued"],
              DynamicModuleValues :> {}], 
            Button["?", 
             DevTools`TestingTools`FunctionCapture`CaptureFunctionHelp[], 
             ImageSize -> {30, 40}, Method -> "Queued"]}], " ", 
          Row[{
            Button["<", 
             DevTools`NotebookTools`MoveNotebook["Left"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"], 
            Button[">", 
             DevTools`NotebookTools`MoveNotebook["Right"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"]}]}], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229792918838; If[
          And[
           ValueQ[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229792918838], 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229792918838 =!= "", 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229792918838 =!= Null], 
          (If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {"MaxHeight" -> 300},
              "NakedSection"]], 
           Framed[#, FrameStyle -> None, FrameMargins -> 2], 
           
           Framed[#, FrameStyle -> LightGray, Background -> White, 
            FrameMargins -> 15]]& )[
           Grid[{{
              Pane[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229792918838, "ImageSize" -> {Full, {0, 
                  OptionValue[
                  DevTools`NotebookTools`DynamicOutputSection, {
                   "MaxHeight" -> 300}, "MaxHeight"]}}, Scrollbars -> 
               Automatic, FrameMargins -> 0]}, 
             If[
              TrueQ[
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {
                "MaxHeight" -> 300}, "NakedSection"]], 
              Apply[Sequence, {}], {
               Button[
               "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229792918838 = "", ImageSize -> {100, 33}]}]}, 
            Spacings -> {0, 1}, Alignment -> {Left, Top}]], 
          Apply[Sequence, {}]]}], StandardForm], 
     TrackedSymbols :> {
      DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229792918838}]], "DockedCell"]},
TaggingRules->{
 "CreateNamedNotebook2Args" -> {
   "ARCCombineRowOfImages", "Type" -> "Function", 
    "GenerateNotebookArgs" -> {
     "Function" -> Daniel`ARC`ARCCombineRowOfImages}, "ReturnNotebook" -> 
    True}},
InputAutoReplacements->{},
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"883c1592-bb56-492a-b9ce-05a2d6131b8b"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 93, 0, 98, "Title",ExpressionUUID->"0e097089-819f-466b-b7d6-826c9b98a49f"],
Cell[676, 24, 256, 6, 54, "Code",ExpressionUUID->"0284ab7e-3670-4e96-b0e4-e9bcd4d26cd9",
 InitializationCell->False],
Cell[CellGroupData[{
Cell[957, 34, 79, 0, 67, "Section",ExpressionUUID->"29b02916-7753-42ad-ae09-30a4dd685d61"],
Cell[CellGroupData[{
Cell[1061, 38, 3705, 87, 52, "TestUI",ExpressionUUID->"d6fb8e52-aef6-48c0-abf9-96fd8cf7d8af",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[4769, 127, 955, 27, 144, "Code",ExpressionUUID->"a94a1133-cf50-4f1d-92ad-a2b9cf828839",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->94765416]
}, Open  ]],
Cell[5739, 157, 417, 11, 33, "Output",ExpressionUUID->"30a00257-3cac-4394-93a8-2e7a11af4a77"],
Cell[CellGroupData[{
Cell[6181, 172, 3705, 87, 52, "TestUI",ExpressionUUID->"c4149204-523f-4e16-9e11-2cdef383c198",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[9889, 261, 1096, 31, 144, "Code",ExpressionUUID->"864963ca-dff3-488a-b408-61f3973795a2",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->22009534]
}, Open  ]],
Cell[11000, 295, 360, 9, 33, "Output",ExpressionUUID->"1212d3e7-ed48-4f6f-b213-1cf99082310e"]
}, Open  ]]
}, Open  ]]
}
]
*)

