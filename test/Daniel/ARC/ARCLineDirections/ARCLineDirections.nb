(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     17144,        436]
NotebookOptionsPosition[     10472,        277]
NotebookOutlinePosition[     15971,        413]
CellTagsIndexPosition[     15928,        410]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ARCLineDirections", "Title",ExpressionUUID->"441113f2-2457-4752-8e97-31ed9c8a9788"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"RunUnitTests", "[", "ARCLineDirections", "]"}]}], "Code",
 InitializationCell->False,
 CellLabel->"In[72]:=",ExpressionUUID->"1a4c491e-38e9-4945-b536-4a5e0feab605"],

Cell[CellGroupData[{

Cell["Tests", "Section",ExpressionUUID->"a2a719f2-44d6-4e57-a77b-f7c25629a12f"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCLineDirections-20220826-X6ZW7F", 
              Daniel`ARC`ARCLineDirections, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826211528365], 82934410]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> "ARCLineDirections-20220826-X6ZW7F"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCLineDirections-20220826-X6ZW7F", Daniel`ARC`ARCLineDirections, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826211528365], "CellID" -> 82934410, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCLineDirections-20220826-X6ZW7F", Daniel`ARC`ARCLineDirections, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826211528365], None], ImageSize -> {140., 25},
           Method -> "Queued"], 
         Row[{"ARCLineDirections-20220826-X6ZW7F"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826211528365; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826211528365], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826211528365 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826211528365 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826211528365, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826211528365 = "", ImageSize -> {100, 33}]}]},
          Spacings -> {0, 1}, Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{840., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826211528365}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.870551727647086*^9},ExpressionUUID->"e26ed38d-818a-4149-821c-\
edc1b252bf4c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"ARCLineDirections", "[", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<Shape\>\"", " ", "->", " ", 
     RowBox[{"<|", 
      RowBox[{"\"\<Name\>\"", " ", "->", " ", "\"\<Line\>\""}], "|>"}]}], ",",
     " ", 
    RowBox[{"\"\<Width\>\"", " ", "->", " ", "3"}], ",", " ", 
    RowBox[{"\"\<Height\>\"", " ", "->", " ", "1"}]}], "|>"}], "]"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.8705516788756633`*^9, 3.8705516862716656`*^9}, 
   3.870551727647086*^9, {3.870903859276848*^9, 3.8709038641372695`*^9}},
 CellLabel->"In[923]:=",
 CellID->82934410,
 "TestId" -> 
 "ARCLineDirections-20220826-X6ZW7F",ExpressionUUID->"0179b0e7-0700-491e-a391-\
ad435d51d3af"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.870551723569846*^9, 3.8709038644009247`*^9},
 CellLabel->
  "Out[924]=",ExpressionUUID->"52022a69-138a-465f-b7b0-6584246bbe49"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCLineDirections-20220826-PT30RE", 
              Daniel`ARC`ARCLineDirections, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826211528370], 72112839]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> "ARCLineDirections-20220826-PT30RE"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCLineDirections-20220826-PT30RE", Daniel`ARC`ARCLineDirections, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826211528370], "CellID" -> 72112839, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCLineDirections-20220826-PT30RE", Daniel`ARC`ARCLineDirections, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826211528370], None], ImageSize -> {140., 25},
           Method -> "Queued"], 
         Row[{"ARCLineDirections-20220826-PT30RE"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826211528370; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826211528370], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826211528370 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826211528370 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826211528370, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826211528370 = "", ImageSize -> {100, 33}]}]},
          Spacings -> {0, 1}, Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{840., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826211528370}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.870551727804536*^9},ExpressionUUID->"19fb44cc-97c4-40db-9ab4-\
f6606ba745c8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"ARCLineDirections", "[", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<Shape\>\"", " ", "->", " ", 
     RowBox[{"<|", 
      RowBox[{"\"\<Name\>\"", " ", "->", " ", "\"\<Line\>\""}], "|>"}]}], ",",
     " ", 
    RowBox[{"\"\<Width\>\"", " ", "->", " ", "1"}], ",", " ", 
    RowBox[{"\"\<Height\>\"", " ", "->", " ", "3"}]}], "|>"}], "]"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.8705516788756633`*^9, 3.870551692449225*^9}, 
   3.870551727804536*^9, {3.8709038688069735`*^9, 3.870903869498335*^9}},
 CellLabel->"In[925]:=",
 CellID->72112839,
 "TestId" -> 
 "ARCLineDirections-20220826-PT30RE",ExpressionUUID->"793e8e76-a95d-4a5a-9d29-\
751a2c2ce3e9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8705517256780643`*^9, 3.870903869761938*^9},
 CellLabel->
  "Out[926]=",ExpressionUUID->"d8bb3103-5278-4eae-9973-a3e71101bd8d"]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Local",
WindowSize->{958, 980},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
Visible->True,
DockedCells->{
  Cell[
   BoxData[
    DynamicBox[
     ToBoxes[
      Column[{
        Row[{
          Button["New Test", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`NewFunctionCell[
            Daniel`ARC`ARCLineDirections], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826211431356]], ImageSize -> {95., 40}, 
           Method -> "Queued"], " ", 
          Button["Add Tests to File", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`CreateUnitTests[
            Daniel`ARC`ARCLineDirections, "SubTest" -> None], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826211431356]], ImageSize -> {162.5, 40}, 
           Method -> "Queued"], " ", 
          Button[
          "Run Tests", 
           DevTools`TestingTools`RunUnitTestsInNotebook[
            Daniel`ARC`ARCLineDirections]; Null, ImageSize -> {102.5, 40}, 
           Method -> "Queued"], " ", 
          Button["Edit Tests", 
           DevTools`TestingTools`EditUnitTests[Daniel`ARC`ARCLineDirections], 
           ImageSize -> {110., 40}, Method -> "Queued"], " ", 
          Button["Edit Function", 
           DevTools`SourceTools`EditFunction[Daniel`ARC`ARCLineDirections], 
           ImageSize -> {132.5, 40}, Method -> "Queued"], " ", 
          Row[{
            
            DynamicModule[{
             DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
              "Capture"}, 
             Button[
              Dynamic[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel], 
              If[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel === 
               "Capture", 
               DevTools`TestingTools`FunctionCapture`EnableFunctionCapture[
                Daniel`ARC`ARCLineDirections]; 
               DevTools`TestingTools`FunctionCapture`\
RegisterFunctionCaptureNotebook[Daniel`ARC`ARCLineDirections, 
                 InputNotebook[]]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Release"; Null, 
               DevTools`TestingTools`FunctionCapture`DisableFunctionCapture[
                Daniel`ARC`ARCLineDirections]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Capture"; Null], ImageSize -> {100, 40}, Method -> "Queued"],
              DynamicModuleValues :> {}], 
            Button["?", 
             DevTools`TestingTools`FunctionCapture`CaptureFunctionHelp[], 
             ImageSize -> {30, 40}, Method -> "Queued"]}], " ", 
          Row[{
            Button["<", 
             DevTools`NotebookTools`MoveNotebook["Left"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"], 
            Button[">", 
             DevTools`NotebookTools`MoveNotebook["Right"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"]}]}], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826211431356; If[
          And[
           ValueQ[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826211431356], 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826211431356 =!= "", 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826211431356 =!= Null], 
          (If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {"MaxHeight" -> 300},
              "NakedSection"]], 
           Framed[#, FrameStyle -> None, FrameMargins -> 2], 
           
           Framed[#, FrameStyle -> LightGray, Background -> White, 
            FrameMargins -> 15]]& )[
           Grid[{{
              Pane[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826211431356, "ImageSize" -> {Full, {0, 
                  OptionValue[
                  DevTools`NotebookTools`DynamicOutputSection, {
                   "MaxHeight" -> 300}, "MaxHeight"]}}, Scrollbars -> 
               Automatic, FrameMargins -> 0]}, 
             If[
              TrueQ[
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {
                "MaxHeight" -> 300}, "NakedSection"]], 
              Apply[Sequence, {}], {
               Button[
               "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826211431356 = "", ImageSize -> {100, 33}]}]},
             Spacings -> {0, 1}, Alignment -> {Left, Top}]], 
          Apply[Sequence, {}]]}], StandardForm], 
     TrackedSymbols :> {
      DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826211431356}]], "DockedCell"]},
TaggingRules->{
 "CreateNamedNotebook2Args" -> {
   "ARCLineDirections", "Type" -> "Function", 
    "GenerateNotebookArgs" -> {"Function" -> Daniel`ARC`ARCLineDirections}, 
    "ReturnNotebook" -> True}},
InputAutoReplacements->{},
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"d4daecca-bb8a-454b-a2e3-70b486c39519"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 89, 0, 98, "Title",ExpressionUUID->"441113f2-2457-4752-8e97-31ed9c8a9788"],
Cell[672, 24, 248, 5, 54, "Code",ExpressionUUID->"1a4c491e-38e9-4945-b536-4a5e0feab605",
 InitializationCell->False],
Cell[CellGroupData[{
Cell[945, 33, 79, 0, 67, "Section",ExpressionUUID->"a2a719f2-44d6-4e57-a77b-f7c25629a12f"],
Cell[CellGroupData[{
Cell[1049, 37, 3510, 81, 52, "TestUI",ExpressionUUID->"e26ed38d-818a-4149-821c-edc1b252bf4c",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[4562, 120, 817, 20, 54, "Code",ExpressionUUID->"0179b0e7-0700-491e-a391-ad435d51d3af",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->82934410]
}, Open  ]],
Cell[5394, 143, 341, 10, 33, "Output",ExpressionUUID->"52022a69-138a-465f-b7b0-6584246bbe49"],
Cell[CellGroupData[{
Cell[5760, 157, 3510, 81, 52, "TestUI",ExpressionUUID->"19fb44cc-97c4-40db-9ab4-f6606ba745c8",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[9273, 240, 815, 20, 54, "Code",ExpressionUUID->"793e8e76-a95d-4a5a-9d29-751a2c2ce3e9",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->72112839]
}, Open  ]],
Cell[10103, 263, 341, 10, 33, "Output",ExpressionUUID->"d8bb3103-5278-4eae-9973-a3e71101bd8d"]
}, Open  ]]
}, Open  ]]
}
]
*)

