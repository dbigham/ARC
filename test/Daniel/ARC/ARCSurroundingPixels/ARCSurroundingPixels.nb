(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     18893,        467]
NotebookOptionsPosition[     12113,        305]
NotebookOutlinePosition[     17715,        444]
CellTagsIndexPosition[     17672,        441]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ARCSurroundingPixels", "Title",ExpressionUUID->"cc5c09a0-307e-4317-9448-54160d4e39f1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"RunUnitTests", "[", "ARCSurroundingPixels", "]"}]}], "Code",
 InitializationCell->False,
 CellLabel->"In[93]:=",ExpressionUUID->"0583c754-9ff2-4f33-b455-5a5630ea0c39"],

Cell[CellGroupData[{

Cell["Tests", "Section",ExpressionUUID->"f4e396d9-425c-434d-b1a4-9f3eec083e5f"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCSurroundingPixels-20220904-IJ2SCS", 
              Daniel`ARC`ARCSurroundingPixels, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229413222036157], 26334055, "SubTest" -> None]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> 
            "ARCSurroundingPixels-20220904-IJ2SCS"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCSurroundingPixels-20220904-IJ2SCS", 
            Daniel`ARC`ARCSurroundingPixels, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229413222036157], "CellID" -> 26334055, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCSurroundingPixels-20220904-IJ2SCS", 
           Daniel`ARC`ARCSurroundingPixels, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229413222036157], 
           Utility`FilterOptions[
           "SubTest" -> None, 
            DevTools`TestingTools`Private`openInEditorClicked]], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCSurroundingPixels-20220904-IJ2SCS"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229413222036157; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229413222036157], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229413222036157 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229413222036157 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229413222036157, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229413222036157 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{840., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229413222036157}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.8713009403715343`*^9},ExpressionUUID->"938e351b-f947-4729-a796-\
d39d2faef5c1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ARCSurroundingPixels", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"<|", "\n", "\t\t", 
     RowBox[{
      RowBox[{"\"\<X\>\"", " ", "->", " ", "2"}], ",", "\n", "\t\t", 
      RowBox[{"\"\<Y\>\"", " ", "->", " ", "2"}], ",", "\n", "\t\t", 
      RowBox[{"\"\<X2\>\"", " ", "->", " ", "2"}], ",", "\n", "\t\t", 
      RowBox[{"\"\<Y2\>\"", " ", "->", " ", "2"}]}], "\n", "\t", "|>"}], ",", 
    "\n", "\t", 
    RowBox[{"{", "\n", "\t\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", " ", "2", ",", " ", "3"}], "}"}], ",", "\n", "\t\t", 
      RowBox[{"{", 
       RowBox[{"4", ",", " ", "5", ",", " ", "6"}], "}"}], ",", "\n", "\t\t", 
      RowBox[{"{", 
       RowBox[{"7", ",", " ", "8", ",", " ", "9"}], "}"}]}], "\n", "\t", 
     "}"}]}], "\n", "]"}], " ", "//", " ", "Indent2"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.8713006856256266`*^9, 3.871300763153865*^9}, 
   3.8713009403715343`*^9},
 CellLabel->"In[99]:=",
 CellID->26334055,
 "TestId" -> 
 "ARCSurroundingPixels-20220904-IJ2SCS",ExpressionUUID->"6a8ddbbe-9a0e-4cbe-\
bb87-cbd7d952fb9a"]
}, Open  ]],

Cell[BoxData["\<\"<|\\n    {1, 1} -> 1,\\n    {1, 2} -> 2,\\n    {1, 3} -> 3,\
\\n    {2, 1} -> 4,\\n    {2, 3} -> 6,\\n    {3, 1} -> 7,\\n    {3, 2} -> \
8,\\n    {3, 3} -> 9\\n|>\"\>"], "Output",
 CellChangeTimes->{{3.8713007341662407`*^9, 3.871300763615999*^9}, {
   3.871300823892224*^9, 3.8713008504471684`*^9}, 3.8713009048565702`*^9, 
   3.8721510070463114`*^9, {3.8721510374964504`*^9, 3.8721510713012085`*^9}},
 CellLabel->
  "Out[100]=",ExpressionUUID->"41d36c4a-923d-43bd-a51b-068a100e21c6"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCSurroundingPixels-20220904-T8TTP9", 
              Daniel`ARC`ARCSurroundingPixels, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229413222136170], 70236878, "SubTest" -> None]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> 
            "ARCSurroundingPixels-20220904-T8TTP9"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCSurroundingPixels-20220904-T8TTP9", 
            Daniel`ARC`ARCSurroundingPixels, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229413222136170], "CellID" -> 70236878, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCSurroundingPixels-20220904-T8TTP9", 
           Daniel`ARC`ARCSurroundingPixels, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229413222136170], 
           Utility`FilterOptions[
           "SubTest" -> None, 
            DevTools`TestingTools`Private`openInEditorClicked]], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCSurroundingPixels-20220904-T8TTP9"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229413222136170; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229413222136170], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229413222136170 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229413222136170 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229413222136170, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229413222136170 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{840., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229413222136170}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.8713009405755177`*^9},ExpressionUUID->"f5dda8d7-8b2c-4535-970f-\
6bb8f7dd4edb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ARCSurroundingPixels", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"<|", "\n", "\t\t", 
     RowBox[{
      RowBox[{"\"\<X\>\"", " ", "->", " ", "1"}], ",", "\n", "\t\t", 
      RowBox[{"\"\<Y\>\"", " ", "->", " ", "1"}], ",", "\n", "\t\t", 
      RowBox[{"\"\<X2\>\"", " ", "->", " ", "1"}], ",", "\n", "\t\t", 
      RowBox[{"\"\<Y2\>\"", " ", "->", " ", "1"}]}], "\n", "\t", "|>"}], ",", 
    "\n", "\t", 
    RowBox[{"{", "\n", "\t\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", " ", "2", ",", " ", "3"}], "}"}], ",", "\n", "\t\t", 
      RowBox[{"{", 
       RowBox[{"4", ",", " ", "5", ",", " ", "6"}], "}"}], ",", "\n", "\t\t", 
      RowBox[{"{", 
       RowBox[{"7", ",", " ", "8", ",", " ", "9"}], "}"}]}], "\n", "\t", 
     "}"}]}], "\n", "]"}], " ", "//", " ", "Indent2"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.8713006856256266`*^9, 3.871300763153865*^9}, {
  3.871300926154666*^9, 3.8713009405755177`*^9}},
 CellLabel->"In[101]:=",
 CellID->70236878,
 "TestId" -> 
 "ARCSurroundingPixels-20220904-T8TTP9",ExpressionUUID->"6a2dd6ba-06bb-4c04-\
9b65-141e780c0e14"]
}, Open  ]],

Cell[BoxData["\<\"<|\\n    {0, 0} -> Missing[\\\"OutOfBounds\\\"],\\n    {0, \
1} -> Missing[\\\"OutOfBounds\\\"],\\n    {0, 2} -> Missing[\\\"OutOfBounds\\\
\"],\\n    {1, 0} -> Missing[\\\"OutOfBounds\\\"],\\n    {1, 2} -> 2,\\n    \
{2, 0} -> Missing[\\\"OutOfBounds\\\"],\\n    {2, 1} -> 4,\\n    {2, 2} -> \
5\\n|>\"\>"], "Output",
 CellChangeTimes->{3.871300930054059*^9, 3.872151074613875*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"0211846e-f5fc-401d-804e-af45451195e3"]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Local",
WindowSize->{958, 980},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
Visible->True,
DockedCells->{
  Cell[
   BoxData[
    DynamicBox[
     ToBoxes[
      Column[{
        Row[{
          Button["New Test", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`NewFunctionCell[
            Daniel`ARC`ARCSurroundingPixels], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229413155236124]], ImageSize -> {95., 40}, 
           Method -> "Queued"], " ", 
          Button["Add Tests to File", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`CreateUnitTests[
            Daniel`ARC`ARCSurroundingPixels, "SubTest" -> None], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229413155236124]], ImageSize -> {162.5, 40}, 
           Method -> "Queued"], " ", 
          Button[
          "Run Tests", 
           DevTools`TestingTools`RunUnitTestsInNotebook[
            Daniel`ARC`ARCSurroundingPixels]; Null, ImageSize -> {102.5, 40}, 
           Method -> "Queued"], " ", 
          Button["Edit Tests", 
           DevTools`TestingTools`EditUnitTests[
           Daniel`ARC`ARCSurroundingPixels, "SubTest" -> None], 
           ImageSize -> {110., 40}, Method -> "Queued"], " ", 
          Button["Edit Function", 
           DevTools`SourceTools`EditFunction[Daniel`ARC`ARCSurroundingPixels],
            ImageSize -> {132.5, 40}, Method -> "Queued"], " ", 
          Row[{
            
            DynamicModule[{
             DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
              "Capture"}, 
             Button[
              Dynamic[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel], 
              If[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel === 
               "Capture", 
               DevTools`TestingTools`FunctionCapture`EnableFunctionCapture[
                Daniel`ARC`ARCSurroundingPixels]; 
               
               DevTools`TestingTools`FunctionCapture`\
RegisterFunctionCaptureNotebook[Daniel`ARC`ARCSurroundingPixels, 
                 InputNotebook[]]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Release"; Null, 
               DevTools`TestingTools`FunctionCapture`DisableFunctionCapture[
                Daniel`ARC`ARCSurroundingPixels]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Capture"; Null], ImageSize -> {100, 40}, Method -> "Queued"],
              DynamicModuleValues :> {}], 
            Button["?", 
             DevTools`TestingTools`FunctionCapture`CaptureFunctionHelp[], 
             ImageSize -> {30, 40}, Method -> "Queued"]}], " ", 
          Row[{
            Button["<", 
             DevTools`NotebookTools`MoveNotebook["Left"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"], 
            Button[">", 
             DevTools`NotebookTools`MoveNotebook["Right"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"]}]}], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229413155236124; If[
          And[
           ValueQ[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229413155236124], 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229413155236124 =!= "", 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229413155236124 =!= Null], 
          (If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {"MaxHeight" -> 300},
              "NakedSection"]], 
           Framed[#, FrameStyle -> None, FrameMargins -> 2], 
           
           Framed[#, FrameStyle -> LightGray, Background -> White, 
            FrameMargins -> 15]]& )[
           Grid[{{
              Pane[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229413155236124, "ImageSize" -> {Full, {0, 
                  OptionValue[
                  DevTools`NotebookTools`DynamicOutputSection, {
                   "MaxHeight" -> 300}, "MaxHeight"]}}, Scrollbars -> 
               Automatic, FrameMargins -> 0]}, 
             If[
              TrueQ[
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {
                "MaxHeight" -> 300}, "NakedSection"]], 
              Apply[Sequence, {}], {
               Button[
               "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229413155236124 = "", 
                ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
            Alignment -> {Left, Top}]], 
          Apply[Sequence, {}]]}], StandardForm], 
     TrackedSymbols :> {
      DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229413155236124}]], "DockedCell"]},
TaggingRules->{
 "CreateNamedNotebook2Args" -> {
   "ARCSurroundingPixels", "Type" -> "Function", 
    "GenerateNotebookArgs" -> {"Function" -> Daniel`ARC`ARCSurroundingPixels},
     "ReturnNotebook" -> True}},
InputAutoReplacements->{},
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"ebaaca93-df13-45b0-ae32-3fbdd34ab70c"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 92, 0, 98, "Title",ExpressionUUID->"cc5c09a0-307e-4317-9448-54160d4e39f1"],
Cell[675, 24, 251, 5, 54, "Code",ExpressionUUID->"0583c754-9ff2-4f33-b455-5a5630ea0c39",
 InitializationCell->False],
Cell[CellGroupData[{
Cell[951, 33, 79, 0, 67, "Section",ExpressionUUID->"f4e396d9-425c-434d-b1a4-9f3eec083e5f"],
Cell[CellGroupData[{
Cell[1055, 37, 3741, 88, 52, "TestUI",ExpressionUUID->"938e351b-f947-4729-a796-d39d2faef5c1",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[4799, 127, 1239, 30, 270, "Code",ExpressionUUID->"6a8ddbbe-9a0e-4cbe-bb87-cbd7d952fb9a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->26334055]
}, Open  ]],
Cell[6053, 160, 502, 7, 214, "Output",ExpressionUUID->"41d36c4a-923d-43bd-a51b-068a100e21c6"],
Cell[CellGroupData[{
Cell[6580, 171, 3741, 88, 52, "TestUI",ExpressionUUID->"f5dda8d7-8b2c-4535-970f-6bb8f7dd4edb",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[10324, 261, 1263, 30, 270, "Code",ExpressionUUID->"6a2dd6ba-06bb-4c04-9b65-141e780c0e14",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->70236878]
}, Open  ]],
Cell[11602, 294, 483, 7, 214, "Output",ExpressionUUID->"0211846e-f5fc-401d-804e-af45451195e3"]
}, Open  ]]
}, Open  ]]
}
]
*)

