(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     29668,        756]
NotebookOptionsPosition[     21364,        564]
NotebookOutlinePosition[     26877,        700]
CellTagsIndexPosition[     26834,        697]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ARCLineTurnCount", "Title",ExpressionUUID->"97c3db29-4ebe-4d71-85a1-eb58b316fcc1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"RunUnitTests", "[", "ARCLineTurnCount", "]"}]}], "Code",
 InitializationCell->False,
 CellLabel->
  "In[561]:=",ExpressionUUID->"208ecd83-10d7-4984-b257-6b2bf28fa71d"],

Cell[CellGroupData[{

Cell["Tests", "Section",ExpressionUUID->"af193538-035a-4621-bf55-31d2b678e0b2"],

Cell[CellGroupData[{

Cell["One Turn", "Subsection",
 CellChangeTimes->{{3.8721952951393814`*^9, 
  3.872195295852092*^9}},ExpressionUUID->"09580d6f-aab2-4a77-a4bb-\
d6f67c136133"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCLineTurnCount-20220914-BIFC68", Daniel`ARC`ARCLineTurnCount, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291421483629067], 18270890, "SubTest" -> 
              None]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> "ARCLineTurnCount-20220914-BIFC68"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCLineTurnCount-20220914-BIFC68", Daniel`ARC`ARCLineTurnCount, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291421483629067], "CellID" -> 18270890, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCLineTurnCount-20220914-BIFC68", Daniel`ARC`ARCLineTurnCount, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291421483629067], 
           Utility`FilterOptions[
           "SubTest" -> None, 
            DevTools`TestingTools`Private`openInEditorClicked]], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCLineTurnCount-20220914-BIFC68"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291421483629067; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291421483629067], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291421483629067 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291421483629067 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291421483629067, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291421483629067 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{833., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291421483629067}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.8721953159589252`*^9},ExpressionUUID->"f3fc7837-7bee-4a5d-b4ba-\
016dcc923a63"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"ARCLineTurnCount", "[", "\n", "\t", 
  RowBox[{"{", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "1"}], "}"}], ",", "\n", "\t\t", 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "2"}], "}"}], ",", " ", "\n", "\t\t", 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "3"}], "}"}], ",", "\n", "\t\t", 
    RowBox[{"{", 
     RowBox[{"2", ",", " ", "3"}], "}"}], ",", "\n", "\t\t", 
    RowBox[{"{", 
     RowBox[{"3", ",", " ", "3"}], "}"}]}], "\n", "\t", "}"}], "\n", 
  "]"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.8721948904032335`*^9, 3.872194908690223*^9}, 
   3.8721953159589252`*^9},
 CellLabel->"In[551]:=",
 CellID->18270890,
 "TestId" -> 
 "ARCLineTurnCount-20220914-BIFC68",ExpressionUUID->"0c440da4-39ca-443d-9a55-\
fc42fd821b8e"]
}, Open  ]],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.8721949092213106`*^9, 3.8721949119647694`*^9}, 
   3.872195122421421*^9, {3.872195264598777*^9, 3.8721952876821136`*^9}},
 CellLabel->
  "Out[552]=",ExpressionUUID->"6a8d90a2-0d51-48ac-8ae2-dfd6c0a1c9ea"]
}, Closed]],

Cell[CellGroupData[{

Cell["No Turns", "Subsection",
 CellChangeTimes->{{3.872195298252257*^9, 
  3.8721952989708223`*^9}},ExpressionUUID->"7f84e6ae-b064-49e7-b4f7-\
a3aaceea68a9"],

Cell[CellGroupData[{

Cell["Flat Line", "Subsubsection",
 CellChangeTimes->{{3.872195302029931*^9, 
  3.8721953030216026`*^9}},ExpressionUUID->"cdfa3674-c170-437f-99f0-\
c11f9263a5e8"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCLineTurnCount-20220914-F18WVS", Daniel`ARC`ARCLineTurnCount, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291421483629070], 42794578, "SubTest" -> 
              None]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> "ARCLineTurnCount-20220914-F18WVS"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCLineTurnCount-20220914-F18WVS", Daniel`ARC`ARCLineTurnCount, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291421483629070], "CellID" -> 42794578, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCLineTurnCount-20220914-F18WVS", Daniel`ARC`ARCLineTurnCount, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291421483629070], 
           Utility`FilterOptions[
           "SubTest" -> None, 
            DevTools`TestingTools`Private`openInEditorClicked]], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCLineTurnCount-20220914-F18WVS"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291421483629070; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291421483629070], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291421483629070 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291421483629070 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291421483629070, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291421483629070 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{826., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291421483629070}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.8721953161965933`*^9},ExpressionUUID->"e090ad51-b5b5-42b1-a74d-\
aa9bcffd0f8a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"ARCLineTurnCount", "[", "\n", "\t", 
  RowBox[{"{", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "1"}], "}"}], ",", "\n", "\t\t", 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "2"}], "}"}], ",", " ", "\n", "\t\t", 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "3"}], "}"}]}], "\n", "\t", "}"}], "\n", 
  "]"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.8721948904032335`*^9, 3.872194908690223*^9}, {
  3.872195292260498*^9, 3.872195316197613*^9}},
 CellLabel->"In[553]:=",
 CellID->42794578,
 "TestId" -> 
 "ARCLineTurnCount-20220914-F18WVS",ExpressionUUID->"34b0f442-1579-45d5-99c0-\
46873ddbea0c"]
}, Open  ]],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.872195292797801*^9},
 CellLabel->
  "Out[554]=",ExpressionUUID->"1fcd87a5-728d-4594-994d-2ecdd57fe182"]
}, Closed]],

Cell[CellGroupData[{

Cell["Diagonal Line", "Subsubsection",
 CellChangeTimes->{{3.872195302029931*^9, 
  3.8721953082667365`*^9}},ExpressionUUID->"6afff614-433e-4dac-8852-\
ba230470a442"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCLineTurnCount-20220914-HCCY3I", Daniel`ARC`ARCLineTurnCount, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291421483629073], 91855101, "SubTest" -> 
              None]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> "ARCLineTurnCount-20220914-HCCY3I"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCLineTurnCount-20220914-HCCY3I", Daniel`ARC`ARCLineTurnCount, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291421483629073], "CellID" -> 91855101, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCLineTurnCount-20220914-HCCY3I", Daniel`ARC`ARCLineTurnCount, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291421483629073], 
           Utility`FilterOptions[
           "SubTest" -> None, 
            DevTools`TestingTools`Private`openInEditorClicked]], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCLineTurnCount-20220914-HCCY3I"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291421483629073; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291421483629073], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291421483629073 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291421483629073 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291421483629073, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291421483629073 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{826., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291421483629073}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.872195316438266*^9},ExpressionUUID->"724538a4-39c7-4c64-bf8a-\
e7c63ea0d458"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"ARCLineTurnCount", "[", "\n", "\t", 
  RowBox[{"{", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "1"}], "}"}], ",", "\n", "\t\t", 
    RowBox[{"{", 
     RowBox[{"2", ",", " ", "2"}], "}"}], ",", " ", "\n", "\t\t", 
    RowBox[{"{", 
     RowBox[{"3", ",", " ", "3"}], "}"}]}], "\n", "\t", "}"}], "\n", 
  "]"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.8721948904032335`*^9, 3.872194908690223*^9}, {
  3.872195292260498*^9, 3.872195316438266*^9}},
 CellLabel->"In[555]:=",
 CellID->91855101,
 "TestId" -> 
 "ARCLineTurnCount-20220914-HCCY3I",ExpressionUUID->"92cbeb4d-7b3d-49ef-8cc9-\
74f3ef74680b"]
}, Open  ]],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.8721953144484873`*^9},
 CellLabel->
  "Out[556]=",ExpressionUUID->"e44c304e-232a-4b4c-a30a-46ac170e993c"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Three Turns", "Subsection",
 CellChangeTimes->{{3.8721952951393814`*^9, 
  3.872195326571521*^9}},ExpressionUUID->"25681464-1727-4f3e-b86e-\
0c793d1911d8"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCLineTurnCount-20220914-AHXZ5A", Daniel`ARC`ARCLineTurnCount, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229142149829081], 93222175, "SubTest" -> None]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> "ARCLineTurnCount-20220914-AHXZ5A"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCLineTurnCount-20220914-AHXZ5A", Daniel`ARC`ARCLineTurnCount, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229142149829081], "CellID" -> 93222175, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCLineTurnCount-20220914-AHXZ5A", Daniel`ARC`ARCLineTurnCount, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229142149829081], 
           Utility`FilterOptions[
           "SubTest" -> None, 
            DevTools`TestingTools`Private`openInEditorClicked]], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCLineTurnCount-20220914-AHXZ5A"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229142149829081; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229142149829081], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229142149829081 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229142149829081 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229142149829081, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229142149829081 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{833., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229142149829081}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.8721953480321083`*^9},ExpressionUUID->"f5899b7c-153e-4588-a1ec-\
eab2cf638b6a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"ARCLineTurnCount", "[", "\n", "\t", 
  RowBox[{"{", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "1"}], "}"}], ",", "\n", "\t\t", 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "2"}], "}"}], ",", " ", "\n", "\t\t", 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "3"}], "}"}], ",", "\n", "\t\t", 
    RowBox[{"{", 
     RowBox[{"2", ",", " ", "3"}], "}"}], ",", "\n", "\t\t", 
    RowBox[{"{", 
     RowBox[{"3", ",", " ", "3"}], "}"}], ",", "\n", "\t\t", 
    RowBox[{"{", 
     RowBox[{"4", ",", " ", "3"}], "}"}], ",", "\n", "\t\t", 
    RowBox[{"{", 
     RowBox[{"4", ",", " ", "2"}], "}"}]}], "\n", "\t", "}"}], "\n", 
  "]"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.8721948904032335`*^9, 3.872194908690223*^9}, {
  3.8721953159589252`*^9, 3.872195341784635*^9}},
 CellLabel->"In[559]:=",
 CellID->93222175,
 "TestId" -> 
 "ARCLineTurnCount-20220914-AHXZ5A",ExpressionUUID->"dfa2063f-762c-47a3-8102-\
0f682daaa1ef"]
}, Open  ]],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{{3.8721949092213106`*^9, 3.8721949119647694`*^9}, 
   3.872195122421421*^9, {3.872195264598777*^9, 3.8721952876821136`*^9}, 
   3.8721953431794906`*^9},
 CellLabel->
  "Out[560]=",ExpressionUUID->"c6cc0ca1-7f37-43bd-b6b2-8a13efab9fa9"]
}, Closed]]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Local",
WindowSize->{958, 980},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
DockedCells->{
  Cell[
   BoxData[
    DynamicBox[
     ToBoxes[
      Column[{
        Row[{
          Button["New Test", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`NewFunctionCell[
            Daniel`ARC`ARCLineTurnCount], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291421412329050]], ImageSize -> {95., 40}, 
           Method -> "Queued"], " ", 
          Button["Add Tests to File", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`CreateUnitTests[
            Daniel`ARC`ARCLineTurnCount, "SubTest" -> None], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291421412329050]], ImageSize -> {162.5, 40}, 
           Method -> "Queued"], " ", 
          Button[
          "Run Tests", 
           DevTools`TestingTools`RunUnitTestsInNotebook[
            Daniel`ARC`ARCLineTurnCount]; Null, ImageSize -> {102.5, 40}, 
           Method -> "Queued"], " ", 
          Button["Edit Tests", 
           DevTools`TestingTools`EditUnitTests[
           Daniel`ARC`ARCLineTurnCount, "SubTest" -> None], 
           ImageSize -> {110., 40}, Method -> "Queued"], " ", 
          Button["Edit Function", 
           DevTools`SourceTools`EditFunction[Daniel`ARC`ARCLineTurnCount], 
           ImageSize -> {132.5, 40}, Method -> "Queued"], " ", 
          Row[{
            
            DynamicModule[{
             DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
              "Capture"}, 
             Button[
              Dynamic[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel], 
              If[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel === 
               "Capture", 
               DevTools`TestingTools`FunctionCapture`EnableFunctionCapture[
                Daniel`ARC`ARCLineTurnCount]; 
               DevTools`TestingTools`FunctionCapture`\
RegisterFunctionCaptureNotebook[Daniel`ARC`ARCLineTurnCount, 
                 InputNotebook[]]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Release"; Null, 
               DevTools`TestingTools`FunctionCapture`DisableFunctionCapture[
                Daniel`ARC`ARCLineTurnCount]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Capture"; Null], ImageSize -> {100, 40}, Method -> "Queued"],
              DynamicModuleValues :> {}], 
            Button["?", 
             DevTools`TestingTools`FunctionCapture`CaptureFunctionHelp[], 
             ImageSize -> {30, 40}, Method -> "Queued"]}], " ", 
          Row[{
            Button["<", 
             DevTools`NotebookTools`MoveNotebook["Left"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"], 
            Button[">", 
             DevTools`NotebookTools`MoveNotebook["Right"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"]}]}], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291421412329050; If[
          And[
           ValueQ[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291421412329050], 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291421412329050 =!= "", 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291421412329050 =!= Null], 
          (If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {"MaxHeight" -> 300},
              "NakedSection"]], 
           Framed[#, FrameStyle -> None, FrameMargins -> 2], 
           
           Framed[#, FrameStyle -> LightGray, Background -> White, 
            FrameMargins -> 15]]& )[
           Grid[{{
              Pane[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291421412329050, "ImageSize" -> {Full, {0, 
                  OptionValue[
                  DevTools`NotebookTools`DynamicOutputSection, {
                   "MaxHeight" -> 300}, "MaxHeight"]}}, Scrollbars -> 
               Automatic, FrameMargins -> 0]}, 
             If[
              TrueQ[
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {
                "MaxHeight" -> 300}, "NakedSection"]], 
              Apply[Sequence, {}], {
               Button[
               "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291421412329050 = "", 
                ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
            Alignment -> {Left, Top}]], 
          Apply[Sequence, {}]]}], StandardForm], 
     TrackedSymbols :> {
      DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291421412329050}]], "DockedCell"]},
TaggingRules->{
 "CreateNamedNotebook2Args" -> {
   "ARCLineTurnCount", "Type" -> "Function", 
    "GenerateNotebookArgs" -> {"Function" -> Daniel`ARC`ARCLineTurnCount}, 
    "ReturnNotebook" -> True}},
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"84922431-730b-4b74-bc35-28f85931763a"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 88, 0, 98, "Title",ExpressionUUID->"97c3db29-4ebe-4d71-85a1-eb58b316fcc1"],
Cell[671, 24, 251, 6, 54, "Code",ExpressionUUID->"208ecd83-10d7-4984-b257-6b2bf28fa71d",
 InitializationCell->False],
Cell[CellGroupData[{
Cell[947, 34, 79, 0, 67, "Section",ExpressionUUID->"af193538-035a-4621-bf55-31d2b678e0b2"],
Cell[CellGroupData[{
Cell[1051, 38, 158, 3, 54, "Subsection",ExpressionUUID->"09580d6f-aab2-4a77-a4bb-d6f67c136133"],
Cell[CellGroupData[{
Cell[1234, 45, 3681, 85, 52, "TestUI",ExpressionUUID->"f3fc7837-7bee-4a5d-b4ba-016dcc923a63",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[4918, 132, 925, 25, 198, "Code",ExpressionUUID->"0c440da4-39ca-443d-9a55-fc42fd821b8e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->18270890]
}, Open  ]],
Cell[5858, 160, 255, 4, 33, "Output",ExpressionUUID->"6a8d90a2-0d51-48ac-8ae2-dfd6c0a1c9ea"]
}, Closed]],
Cell[CellGroupData[{
Cell[6150, 169, 158, 3, 38, "Subsection",ExpressionUUID->"7f84e6ae-b064-49e7-b4f7-a3aaceea68a9"],
Cell[CellGroupData[{
Cell[6333, 176, 162, 3, 45, "Subsubsection",ExpressionUUID->"cdfa3674-c170-437f-99f0-c11f9263a5e8"],
Cell[CellGroupData[{
Cell[6520, 183, 3681, 85, 52, "TestUI",ExpressionUUID->"e090ad51-b5b5-42b1-a74d-aa9bcffd0f8a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[10204, 270, 786, 21, 162, "Code",ExpressionUUID->"34b0f442-1579-45d5-99c0-46873ddbea0c",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->42794578]
}, Open  ]],
Cell[11005, 294, 153, 3, 33, "Output",ExpressionUUID->"1fcd87a5-728d-4594-994d-2ecdd57fe182"]
}, Closed]],
Cell[CellGroupData[{
Cell[11195, 302, 166, 3, 37, "Subsubsection",ExpressionUUID->"6afff614-433e-4dac-8852-ba230470a442"],
Cell[CellGroupData[{
Cell[11386, 309, 3679, 85, 52, "TestUI",ExpressionUUID->"724538a4-39c7-4c64-bf8a-e7c63ea0d458",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[15068, 396, 786, 21, 162, "Code",ExpressionUUID->"92cbeb4d-7b3d-49ef-8cc9-74f3ef74680b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->91855101]
}, Open  ]],
Cell[15869, 420, 155, 3, 33, "Output",ExpressionUUID->"e44c304e-232a-4b4c-a30a-46ac170e993c"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[16073, 429, 161, 3, 38, "Subsection",ExpressionUUID->"25681464-1727-4f3e-b86e-0c793d1911d8"],
Cell[CellGroupData[{
Cell[16259, 436, 3656, 84, 52, "TestUI",ExpressionUUID->"f5899b7c-153e-4588-a1ec-eab2cf638b6a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[19918, 522, 1108, 29, 234, "Code",ExpressionUUID->"dfa2063f-762c-47a3-8102-0f682daaa1ef",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->93222175]
}, Open  ]],
Cell[21041, 554, 283, 5, 33, "Output",ExpressionUUID->"c6cc0ca1-7f37-43bd-b6b2-8a13efab9fa9"]
}, Closed]]
}, Open  ]]
}, Open  ]]
}
]
*)

