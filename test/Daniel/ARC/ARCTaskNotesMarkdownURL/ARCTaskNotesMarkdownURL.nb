(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     11974,        306]
NotebookOptionsPosition[      5643,        152]
NotebookOutlinePosition[     11277,        292]
CellTagsIndexPosition[     11234,        289]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ARCTaskNotesMarkdownURL", "Title",ExpressionUUID->"02320121-3632-4b39-bcb9-e43a43722b89"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"RunUnitTests", "[", "ARCTaskNotesMarkdownURL", "]"}]}], "Code",
 InitializationCell->False,
 CellLabel->
  "In[1523]:=",ExpressionUUID->"3c1c8387-dfb0-426f-8bed-f0745f3f55fa"],

Cell[CellGroupData[{

Cell["Tests", "Section",ExpressionUUID->"6ce1505b-907c-4137-9aff-16fbdb626922"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCTaskNotesMarkdownURL-20220908-1T3NT5", 
              Daniel`ARC`ARCTaskNotesMarkdownURL, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202298192921101854], 49312146, "SubTest" -> 
              None]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> 
            "ARCTaskNotesMarkdownURL-20220908-1T3NT5"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCTaskNotesMarkdownURL-20220908-1T3NT5", 
            Daniel`ARC`ARCTaskNotesMarkdownURL, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202298192921101854], "CellID" -> 49312146, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCTaskNotesMarkdownURL-20220908-1T3NT5", 
           Daniel`ARC`ARCTaskNotesMarkdownURL, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202298192921101854], 
           Utility`FilterOptions[
           "SubTest" -> None, 
            DevTools`TestingTools`Private`openInEditorClicked]], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCTaskNotesMarkdownURL-20220908-1T3NT5"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202298192921101854; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202298192921101854], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202298192921101854 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202298192921101854 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202298192921101854, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202298192921101854 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{840., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202298192921101854}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.871668561555463*^9},ExpressionUUID->"802e42fb-9a28-4f1f-b4cf-\
6000091cdb0a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"ARCTaskNotesMarkdownURL", "[", "\"\<0ca9ddb6\>\"", "]"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.871668320344486*^9, 3.8716683210413*^9}, 
   3.871668561555463*^9},
 CellLabel->"In[1505]:=",
 CellID->49312146,
 "TestId" -> 
 "ARCTaskNotesMarkdownURL-20220908-1T3NT5",ExpressionUUID->"e6782ac2-ce17-\
4934-a236-e36a530d5193"]
}, Open  ]],

Cell[BoxData["\<\"https://github.com/dbigham/ARC/blob/main/TaskNotes/0ca9ddb6/\
notes.md\"\>"], "Output",
 CellChangeTimes->{{3.8716683215109577`*^9, 3.8716683482677703`*^9}},
 CellLabel->
  "Out[1506]=",ExpressionUUID->"49e2c3d0-5876-4b75-9279-27a0bbd71424"]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Local",
WindowSize->{958, 980},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
Visible->True,
DockedCells->{
  Cell[
   BoxData[
    DynamicBox[
     ToBoxes[
      Column[{
        Row[{
          Button["New Test", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`NewFunctionCell[
            Daniel`ARC`ARCTaskNotesMarkdownURL], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229819251101185]], ImageSize -> {95., 40}, 
           Method -> "Queued"], " ", 
          Button["Add Tests to File", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`CreateUnitTests[
            Daniel`ARC`ARCTaskNotesMarkdownURL, "SubTest" -> None], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229819251101185]], ImageSize -> {162.5, 40}, 
           Method -> "Queued"], " ", 
          Button[
          "Run Tests", 
           DevTools`TestingTools`RunUnitTestsInNotebook[
            Daniel`ARC`ARCTaskNotesMarkdownURL]; Null, 
           ImageSize -> {102.5, 40}, Method -> "Queued"], " ", 
          Button["Edit Tests", 
           DevTools`TestingTools`EditUnitTests[
           Daniel`ARC`ARCTaskNotesMarkdownURL, "SubTest" -> None], 
           ImageSize -> {110., 40}, Method -> "Queued"], " ", 
          Button["Edit Function", 
           DevTools`SourceTools`EditFunction[
           Daniel`ARC`ARCTaskNotesMarkdownURL], ImageSize -> {132.5, 40}, 
           Method -> "Queued"], " ", 
          Row[{
            
            DynamicModule[{
             DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
              "Capture"}, 
             Button[
              Dynamic[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel], 
              If[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel === 
               "Capture", 
               DevTools`TestingTools`FunctionCapture`EnableFunctionCapture[
                Daniel`ARC`ARCTaskNotesMarkdownURL]; 
               DevTools`TestingTools`FunctionCapture`\
RegisterFunctionCaptureNotebook[Daniel`ARC`ARCTaskNotesMarkdownURL, 
                 InputNotebook[]]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Release"; Null, 
               DevTools`TestingTools`FunctionCapture`DisableFunctionCapture[
                Daniel`ARC`ARCTaskNotesMarkdownURL]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Capture"; Null], ImageSize -> {100, 40}, Method -> "Queued"],
              DynamicModuleValues :> {}], 
            Button["?", 
             DevTools`TestingTools`FunctionCapture`CaptureFunctionHelp[], 
             ImageSize -> {30, 40}, Method -> "Queued"]}], " ", 
          Row[{
            Button["<", 
             DevTools`NotebookTools`MoveNotebook["Left"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"], 
            Button[">", 
             DevTools`NotebookTools`MoveNotebook["Right"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"]}]}], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229819251101185; If[
          And[
           ValueQ[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229819251101185], 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229819251101185 =!= "", 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229819251101185 =!= Null], 
          (If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {"MaxHeight" -> 300},
              "NakedSection"]], 
           Framed[#, FrameStyle -> None, FrameMargins -> 2], 
           
           Framed[#, FrameStyle -> LightGray, Background -> White, 
            FrameMargins -> 15]]& )[
           Grid[{{
              Pane[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229819251101185, "ImageSize" -> {Full, {0, 
                  OptionValue[
                  DevTools`NotebookTools`DynamicOutputSection, {
                   "MaxHeight" -> 300}, "MaxHeight"]}}, Scrollbars -> 
               Automatic, FrameMargins -> 0]}, 
             If[
              TrueQ[
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {
                "MaxHeight" -> 300}, "NakedSection"]], 
              Apply[Sequence, {}], {
               Button[
               "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229819251101185 = "", 
                ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
            Alignment -> {Left, Top}]], 
          Apply[Sequence, {}]]}], StandardForm], 
     TrackedSymbols :> {
      DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229819251101185}]], "DockedCell"]},
TaggingRules->{
 "CreateNamedNotebook2Args" -> {
   "ARCTaskNotesMarkdownURL", "Type" -> "Function", 
    "GenerateNotebookArgs" -> {
     "Function" -> Daniel`ARC`ARCTaskNotesMarkdownURL}, "ReturnNotebook" -> 
    True}},
InputAutoReplacements->{},
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"8b8010b9-5a6e-4f90-b128-5965f12f191d"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 95, 0, 98, "Title",ExpressionUUID->"02320121-3632-4b39-bcb9-e43a43722b89"],
Cell[678, 24, 259, 6, 54, "Code",ExpressionUUID->"3c1c8387-dfb0-426f-8bed-f0745f3f55fa",
 InitializationCell->False],
Cell[CellGroupData[{
Cell[962, 34, 79, 0, 67, "Section",ExpressionUUID->"6ce1505b-907c-4137-9aff-16fbdb626922"],
Cell[CellGroupData[{
Cell[1066, 38, 3788, 89, 52, "TestUI",ExpressionUUID->"802e42fb-9a28-4f1f-b4cf-6000091cdb0a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[4857, 129, 484, 12, 54, "Code",ExpressionUUID->"e6782ac2-ce17-4934-a236-e36a530d5193",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->49312146]
}, Open  ]],
Cell[5356, 144, 259, 4, 33, "Output",ExpressionUUID->"49e2c3d0-5876-4b75-9279-27a0bbd71424"]
}, Open  ]]
}, Open  ]]
}
]
*)

