(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     12050,        305]
NotebookOptionsPosition[      5691,        153]
NotebookOutlinePosition[     11353,        291]
CellTagsIndexPosition[     11310,        288]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ARCLinkToDanielBighamsSolution", "Title",ExpressionUUID->"a637e1b6-2695-47a8-acf1-ba95ff4690ce"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"RunUnitTests", "[", "ARCLinkToDanielBighamsSolution", 
  "]"}]}], "Code",
 InitializationCell->False,
 CellLabel->
  "In[1538]:=",ExpressionUUID->"f4677a42-6149-4fd8-b532-37130d4fb5a7"],

Cell[CellGroupData[{

Cell["Tests", "Section",ExpressionUUID->"0fa448a0-f82e-4427-9559-152adb95cad9"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCLinkToDanielBighamsSolution-20220908-BJHD3J", 
              Daniel`ARC`ARCLinkToDanielBighamsSolution, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202298193847101905], 3199087, "SubTest" -> None]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> 
            "ARCLinkToDanielBighamsSolution-20220908-BJHD3J"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCLinkToDanielBighamsSolution-20220908-BJHD3J", 
            Daniel`ARC`ARCLinkToDanielBighamsSolution, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202298193847101905], "CellID" -> 3199087, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCLinkToDanielBighamsSolution-20220908-BJHD3J", 
           Daniel`ARC`ARCLinkToDanielBighamsSolution, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202298193847101905], 
           Utility`FilterOptions[
           "SubTest" -> None, 
            DevTools`TestingTools`Private`openInEditorClicked]], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCLinkToDanielBighamsSolution-20220908-BJHD3J"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202298193847101905; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202298193847101905], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202298193847101905 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202298193847101905 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202298193847101905, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202298193847101905 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{840., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202298193847101905}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.871669126877231*^9},ExpressionUUID->"23887fd6-c3a3-41c0-960c-\
5f2600065ab4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"ARCLinkToDanielBighamsSolution", "[", "\"\<0ca9ddb6\>\"", 
  "]"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.871669124425989*^9, 3.871669126877231*^9}},
 CellLabel->"In[1536]:=",
 CellID->3199087,
 "TestId" -> 
 "ARCLinkToDanielBighamsSolution-20220908-BJHD3J",ExpressionUUID->"a94c6d73-\
4052-460c-b327-c3456b031b04"]
}, Open  ]],

Cell[BoxData["\<\"* [danielb's \
solution](https://github.com/dbigham/ARC/blob/main/TaskNotes/0ca9ddb6/notes.\
md)\"\>"], "Output",
 CellChangeTimes->{3.8716691253970423`*^9},
 CellLabel->
  "Out[1537]=",ExpressionUUID->"50a34bd3-8a27-482f-8d66-1f7b250b4cc1"]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Local",
WindowSize->{958, 980},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
DockedCells->{
  Cell[
   BoxData[
    DynamicBox[
     ToBoxes[
      Column[{
        Row[{
          Button["New Test", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`NewFunctionCell[
            Daniel`ARC`ARCLinkToDanielBighamsSolution], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229819387101899]], ImageSize -> {95., 40}, 
           Method -> "Queued"], " ", 
          Button["Add Tests to File", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`CreateUnitTests[
            Daniel`ARC`ARCLinkToDanielBighamsSolution, "SubTest" -> None], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229819387101899]], ImageSize -> {162.5, 40}, 
           Method -> "Queued"], " ", 
          Button[
          "Run Tests", 
           DevTools`TestingTools`RunUnitTestsInNotebook[
            Daniel`ARC`ARCLinkToDanielBighamsSolution]; Null, 
           ImageSize -> {102.5, 40}, Method -> "Queued"], " ", 
          Button["Edit Tests", 
           DevTools`TestingTools`EditUnitTests[
           Daniel`ARC`ARCLinkToDanielBighamsSolution, "SubTest" -> None], 
           ImageSize -> {110., 40}, Method -> "Queued"], " ", 
          Button["Edit Function", 
           DevTools`SourceTools`EditFunction[
           Daniel`ARC`ARCLinkToDanielBighamsSolution], 
           ImageSize -> {132.5, 40}, Method -> "Queued"], " ", 
          Row[{
            
            DynamicModule[{
             DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
              "Capture"}, 
             Button[
              Dynamic[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel], 
              If[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel === 
               "Capture", 
               DevTools`TestingTools`FunctionCapture`EnableFunctionCapture[
                Daniel`ARC`ARCLinkToDanielBighamsSolution]; 
               DevTools`TestingTools`FunctionCapture`\
RegisterFunctionCaptureNotebook[Daniel`ARC`ARCLinkToDanielBighamsSolution, 
                 InputNotebook[]]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Release"; Null, 
               DevTools`TestingTools`FunctionCapture`DisableFunctionCapture[
                Daniel`ARC`ARCLinkToDanielBighamsSolution]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Capture"; Null], ImageSize -> {100, 40}, Method -> "Queued"],
              DynamicModuleValues :> {}], 
            Button["?", 
             DevTools`TestingTools`FunctionCapture`CaptureFunctionHelp[], 
             ImageSize -> {30, 40}, Method -> "Queued"]}], " ", 
          Row[{
            Button["<", 
             DevTools`NotebookTools`MoveNotebook["Left"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"], 
            Button[">", 
             DevTools`NotebookTools`MoveNotebook["Right"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"]}]}], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229819387101899; If[
          And[
           ValueQ[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229819387101899], 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229819387101899 =!= "", 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229819387101899 =!= Null], 
          (If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {"MaxHeight" -> 300},
              "NakedSection"]], 
           Framed[#, FrameStyle -> None, FrameMargins -> 2], 
           
           Framed[#, FrameStyle -> LightGray, Background -> White, 
            FrameMargins -> 15]]& )[
           Grid[{{
              Pane[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229819387101899, "ImageSize" -> {Full, {0, 
                  OptionValue[
                  DevTools`NotebookTools`DynamicOutputSection, {
                   "MaxHeight" -> 300}, "MaxHeight"]}}, Scrollbars -> 
               Automatic, FrameMargins -> 0]}, 
             If[
              TrueQ[
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {
                "MaxHeight" -> 300}, "NakedSection"]], 
              Apply[Sequence, {}], {
               Button[
               "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229819387101899 = "", 
                ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
            Alignment -> {Left, Top}]], 
          Apply[Sequence, {}]]}], StandardForm], 
     TrackedSymbols :> {
      DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229819387101899}]], "DockedCell"]},
TaggingRules->{
 "CreateNamedNotebook2Args" -> {
   "ARCLinkToDanielBighamsSolution", "Type" -> "Function", 
    "GenerateNotebookArgs" -> {
     "Function" -> Daniel`ARC`ARCLinkToDanielBighamsSolution}, 
    "ReturnNotebook" -> True}},
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"c13dc322-cee7-4856-a887-f2b979b9cfc1"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 102, 0, 98, "Title",ExpressionUUID->"a637e1b6-2695-47a8-acf1-ba95ff4690ce"],
Cell[685, 24, 269, 7, 54, "Code",ExpressionUUID->"f4677a42-6149-4fd8-b532-37130d4fb5a7",
 InitializationCell->False],
Cell[CellGroupData[{
Cell[979, 35, 79, 0, 67, "Section",ExpressionUUID->"0fa448a0-f82e-4427-9559-152adb95cad9"],
Cell[CellGroupData[{
Cell[1083, 39, 3827, 88, 52, "TestUI",ExpressionUUID->"23887fd6-c3a3-41c0-960c-5f2600065ab4",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[4913, 129, 476, 12, 54, "Code",ExpressionUUID->"a94c6d73-4052-460c-b327-c3456b031b04",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->3199087]
}, Open  ]],
Cell[5404, 144, 259, 5, 33, "Output",ExpressionUUID->"50a34bd3-8a27-482f-8d66-1f7b250b4cc1"]
}, Open  ]]
}, Open  ]]
}
]
*)

