(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     14455,        361]
NotebookOptionsPosition[      8006,        206]
NotebookOutlinePosition[     13490,        341]
CellTagsIndexPosition[     13447,        338]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ARCResolveExample", "Title",ExpressionUUID->"22c17916-a1a5-4430-b247-1517049cdc5a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"RunUnitTests", "[", "ARCResolveExample", "]"}]}], "Code",
 InitializationCell->
  False,ExpressionUUID->"6a37b1f8-eb75-43f6-91ca-adce11550acb"],

Cell[CellGroupData[{

Cell["Tests", "Section",ExpressionUUID->"c21ba97c-bfc1-4c36-a09c-baa14bc8f66c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"ARCResolveExample", "[", "\"\<B1948B0A\>\"", "]"}]}], "Code",
 InitializationCell->False,
 CellChangeTimes->{3.8708820283034945`*^9, 3.8708823040871625`*^9},
 CellLabel->
  "In[243]:=",ExpressionUUID->"b52f84da-038b-439b-8212-eeba2744c808"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"File\"\>", 
    "\[Rule]", \
"\<\"C:\\\\Users\\\\danie\\\\WolframWorkspaces\\\\Base\\\\ARC\\\\data\\\\\
training\\\\b1948b0a.json\"\>"}], ",", 
   RowBox[{"\<\"ExampleType\"\>", "\[Rule]", "\<\"TrainingExample\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.870882265661022*^9, 3.870882324860959*^9}, 
   3.870882404273857*^9, {3.8708824352881126`*^9, 3.8708824420571704`*^9}, 
   3.8708825107879276`*^9},
 CellLabel->
  "Out[244]=",ExpressionUUID->"cb0f9384-2b06-49df-b874-7fe048d3a572"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"ARCResolveExample", "[", "\"\<66e6c45b\>\"", "]"}]}], "Code",
 InitializationCell->False,
 CellChangeTimes->{
  3.8708820283034945`*^9, 3.8708823040871625`*^9, {3.870882466963504*^9, 
   3.870882480180484*^9}},
 CellLabel->
  "In[245]:=",ExpressionUUID->"a03b14d0-35c8-4ed4-8839-56fa521d23cf"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"File\"\>", 
    "\[Rule]", \
"\<\"C:\\\\Users\\\\danie\\\\WolframWorkspaces\\\\Base\\\\ARC\\\\data\\\\\
evaluation\\\\66e6c45b.json\"\>"}], ",", 
   RowBox[{"\<\"ExampleType\"\>", "\[Rule]", "\<\"EvaluationExample\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.8708824674710875`*^9, 3.870882480614258*^9}, 
   3.8708825120776176`*^9},
 CellLabel->
  "Out[246]=",ExpressionUUID->"d0b9ed14-7d7c-465d-b0b6-16c8e7e719ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"ARCResolveExample", "[", "\"\<sdfsdfd\>\"", "]"}]}], "Code",
 InitializationCell->False,
 CellChangeTimes->{
  3.8708820283034945`*^9, 3.8708823040871625`*^9, {3.870882466963504*^9, 
   3.870882480180484*^9}, {3.870882516012822*^9, 3.8708825204010415`*^9}},
 CellLabel->
  "In[249]:=",ExpressionUUID->"ddd6adea-d740-4341-bf10-866a621b42ea"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Failure",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                  "\"No matching training example was found.\"", HoldForm], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox["\"FileNotFound\"", HoldForm], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"ExampleName\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox["\"sdfsdfd\"", HoldForm], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                  "\"No matching training example was found.\"", HoldForm], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox["\"FileNotFound\"", HoldForm], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"ExampleName\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox["\"sdfsdfd\"", HoldForm], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Failure["FileNotFound", 
   Association[
   "MessageTemplate" -> "No matching training example was found.", 
    "MessageParameters" -> Association[], "ExampleName" -> "sdfsdfd"]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.87088251655217*^9, 3.870882521010297*^9}},
 CellLabel->
  "Out[250]=",ExpressionUUID->"9377aa20-5d35-4eee-a8ff-75ab21f267e9"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Local",
WindowSize->{958, 980},
WindowMargins->{{-7., Automatic}, {Automatic, 0}},
DockedCells->{
  Cell[
   BoxData[
    DynamicBox[
     ToBoxes[
      Column[{
        Row[{
          Button["New Test", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`NewFunctionCell[
            Daniel`ARC`ARCResolveExample], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20228301701745205]], ImageSize -> {95., 40}, 
           Method -> "Queued"], " ", 
          Button["Add Tests to File", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`CreateUnitTests[
            Daniel`ARC`ARCResolveExample, "SubTest" -> None], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20228301701745205]], ImageSize -> {162.5, 40}, 
           Method -> "Queued"], " ", 
          Button[
          "Run Tests", 
           DevTools`TestingTools`RunUnitTestsInNotebook[
            Daniel`ARC`ARCResolveExample]; Null, ImageSize -> {102.5, 40}, 
           Method -> "Queued"], " ", 
          Button["Edit Tests", 
           DevTools`TestingTools`EditUnitTests[Daniel`ARC`ARCResolveExample], 
           ImageSize -> {110., 40}, Method -> "Queued"], " ", 
          Button["Edit Function", 
           DevTools`SourceTools`EditFunction[Daniel`ARC`ARCResolveExample], 
           ImageSize -> {132.5, 40}, Method -> "Queued"], " ", 
          Row[{
            
            DynamicModule[{
             DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
              "Capture"}, 
             Button[
              Dynamic[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel], 
              If[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel === 
               "Capture", 
               DevTools`TestingTools`FunctionCapture`EnableFunctionCapture[
                Daniel`ARC`ARCResolveExample]; 
               DevTools`TestingTools`FunctionCapture`\
RegisterFunctionCaptureNotebook[Daniel`ARC`ARCResolveExample, 
                 InputNotebook[]]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Release"; Null, 
               DevTools`TestingTools`FunctionCapture`DisableFunctionCapture[
                Daniel`ARC`ARCResolveExample]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Capture"; Null], ImageSize -> {100, 40}, Method -> "Queued"],
              DynamicModuleValues :> {}], 
            Button["?", 
             DevTools`TestingTools`FunctionCapture`CaptureFunctionHelp[], 
             ImageSize -> {30, 40}, Method -> "Queued"]}], " ", 
          Row[{
            Button["<", 
             DevTools`NotebookTools`MoveNotebook["Left"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"], 
            Button[">", 
             DevTools`NotebookTools`MoveNotebook["Right"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"]}]}], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20228301701745205; If[
          And[
           ValueQ[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20228301701745205], 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20228301701745205 =!= "", 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20228301701745205 =!= Null], 
          (If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {"MaxHeight" -> 300},
              "NakedSection"]], 
           Framed[#, FrameStyle -> None, FrameMargins -> 2], 
           
           Framed[#, FrameStyle -> LightGray, Background -> White, 
            FrameMargins -> 15]]& )[
           Grid[{{
              Pane[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20228301701745205, "ImageSize" -> {Full, {0, 
                  OptionValue[
                  DevTools`NotebookTools`DynamicOutputSection, {
                   "MaxHeight" -> 300}, "MaxHeight"]}}, Scrollbars -> 
               Automatic, FrameMargins -> 0]}, 
             If[
              TrueQ[
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {
                "MaxHeight" -> 300}, "NakedSection"]], 
              Apply[Sequence, {}], {
               Button[
               "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20228301701745205 = "", 
                ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
            Alignment -> {Left, Top}]], 
          Apply[Sequence, {}]]}], StandardForm], 
     TrackedSymbols :> {
      DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20228301701745205}]], "DockedCell"]},
TaggingRules->{
 "CreateNamedNotebook2Args" -> {
   "ARCResolveExample", "Type" -> "Function", 
    "GenerateNotebookArgs" -> {"Function" -> Daniel`ARC`ARCResolveExample}, 
    "ReturnNotebook" -> True}},
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"2364d61c-f204-47a6-b619-5a3ca661acbf"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 89, 0, 98, "Title",ExpressionUUID->"22c17916-a1a5-4430-b247-1517049cdc5a"],
Cell[672, 24, 227, 5, 54, "Code",ExpressionUUID->"6a37b1f8-eb75-43f6-91ca-adce11550acb",
 InitializationCell->False],
Cell[CellGroupData[{
Cell[924, 33, 79, 0, 67, "Section",ExpressionUUID->"c21ba97c-bfc1-4c36-a09c-baa14bc8f66c"],
Cell[CellGroupData[{
Cell[1028, 37, 324, 7, 54, "Code",ExpressionUUID->"b52f84da-038b-439b-8212-eeba2744c808",
 InitializationCell->False],
Cell[1355, 46, 584, 13, 33, "Output",ExpressionUUID->"cb0f9384-2b06-49df-b874-7fe048d3a572"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1976, 64, 377, 9, 54, "Code",ExpressionUUID->"a03b14d0-35c8-4ed4-8839-56fa521d23cf",
 InitializationCell->False],
Cell[2356, 75, 514, 12, 33, "Output",ExpressionUUID->"d0b9ed14-7d7c-465d-b0b6-16c8e7e719ff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2907, 92, 424, 9, 54, "Code",ExpressionUUID->"ddd6adea-d740-4341-bf10-866a621b42ea",
 InitializationCell->False],
Cell[3334, 103, 4632, 98, 79, "Output",ExpressionUUID->"9377aa20-5d35-4eee-a8ff-75ab21f267e9"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

