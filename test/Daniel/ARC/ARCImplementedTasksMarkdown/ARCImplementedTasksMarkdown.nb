(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[      9683,        238]
NotebookOptionsPosition[      3582,         89]
NotebookOutlinePosition[      9209,        228]
CellTagsIndexPosition[      9166,        225]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ARCImplementedTasksMarkdown", "Title",ExpressionUUID->"fe3416a8-2723-4e9f-b090-12335c6842d0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"RunUnitTests", "[", "ARCImplementedTasksMarkdown", "]"}]}], "Code",
 InitializationCell->
  False,ExpressionUUID->"d77e5628-2add-4172-ba75-063b9d9334b1"],

Cell[CellGroupData[{

Cell["Tests", "Section",ExpressionUUID->"578486c2-b286-42c7-bbc9-f764a16a30ed"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"res", " ", "=", " ", 
   RowBox[{"ARCImplementedTasksMarkdown", "[", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"CopyToClipboard", "[", "res", "]"}], ";"}], "\n", "res"}], "Code",
 InitializationCell->False,
 CellChangeTimes->{{3.8689646210938005`*^9, 3.868964627988933*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"a2a4ec1e-61cd-497c-a140-dda8f4f720fa"],

Cell[BoxData["\<\"## Tasks Implemented\\n\\n### Core ARC Training \
Tasks\\n\\n* [0ca9ddb6](TaskNotes/0ca9ddb6/notes.md)\\n* \
[3c9b0459](TaskNotes/3c9b0459/notes.md)\\n* \
[1caeab9d](TaskNotes/1caeab9d/notes.md)\\n* \
[b60334d2](TaskNotes/b60334d2/notes.md)\\n* \
[25ff71a9](TaskNotes/25ff71a9/notes.md)\\n* \
[3ac3eb23](TaskNotes/3ac3eb23/notes.md)\\n* \
[e76a88a6](TaskNotes/e76a88a6/notes.md)\\n* \
[c0f76784](TaskNotes/c0f76784/notes.md)\\n* \
[321b1fc6](TaskNotes/321b1fc6/notes.md)\\n* \
[05f2a901](TaskNotes/05f2a901/notes.md)\\n* \
[08ed6ac7](TaskNotes/08ed6ac7/notes.md)\\n* \
[a61f2674](TaskNotes/a61f2674/notes.md)\\n\\n### Personally Created Training \
Tasks\\n\\n* [jnohuorzh-easier](TaskNotes/jnohuorzh-easier/notes.md)\\n* \
[ihiz27k2n](TaskNotes/ihiz27k2n/notes.md)\\n* \
[jnohuorzh](TaskNotes/jnohuorzh/notes.md)\\n* \
[0uduqqj6f](TaskNotes/0uduqqj6f/notes.md)\\n* \
[2wfys5w64](TaskNotes/2wfys5w64/notes.md)\\n* \
[2wfys5w64-relative-right-side](TaskNotes/2wfys5w64-relative-right-side/notes.\
md)\\n* [n1hczotml](TaskNotes/n1hczotml/notes.md)\\n\\n## Tasks Passing via \
Generalization\\n\\n### Training Tasks\\n\\nThe following ARC training tasks \
started passing after some different task was implemented.\\n\\n* \
[ea32f347](TaskNotes/ea32f347/notes.md)\\n\\n### Evaluation Tasks\\n\\nThe \
following ARC evaluation tasks are passing. Evaluation tasks have not been \
analyzed or implemented specifically.\\n\\n* \
[84f2aca1](TaskNotes/84f2aca1/notes.md)\"\>"], "Output",
 CellChangeTimes->{
  3.868963274491413*^9, 3.868963354403633*^9, {3.8689637509692574`*^9, 
   3.8689637849733963`*^9}, 3.868963861963874*^9, {3.868963909338173*^9, 
   3.8689639390164165`*^9}, {3.8689639711675625`*^9, 3.868964024133667*^9}, {
   3.868964386692843*^9, 3.8689644208448353`*^9}, {3.868964456606146*^9, 
   3.868964482799322*^9}, {3.868964548504091*^9, 3.868964592362439*^9}, 
   3.868964628694541*^9, 3.86896581216848*^9, 3.868967522587689*^9},
 CellLabel->
  "Out[128]=",ExpressionUUID->"15a01566-e94f-4271-8649-130e1d812b3e"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Local",
WindowSize->{718.5, 735.},
WindowMargins->{{-5.25, Automatic}, {Automatic, 0}},
Visible->True,
DockedCells->{
  Cell[
   BoxData[
    DynamicBox[
     ToBoxes[
      Column[{
        Row[{
          Button["New Test", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`NewFunctionCell[
            Daniel`ARC`ARCImplementedTasksMarkdown], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202288120354581]], ImageSize -> {95., 40}, Method -> 
           "Queued"], " ", 
          Button["Add Tests to File", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`CreateUnitTests[
            Daniel`ARC`ARCImplementedTasksMarkdown, "SubTest" -> None], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202288120354581]], ImageSize -> {162.5, 40}, 
           Method -> "Queued"], " ", 
          Button[
          "Run Tests", 
           DevTools`TestingTools`RunUnitTestsInNotebook[
            Daniel`ARC`ARCImplementedTasksMarkdown]; Null, 
           ImageSize -> {102.5, 40}, Method -> "Queued"], " ", 
          Button["Edit Tests", 
           DevTools`TestingTools`EditUnitTests[
           Daniel`ARC`ARCImplementedTasksMarkdown], ImageSize -> {110., 40}, 
           Method -> "Queued"], " ", 
          Button["Edit Function", 
           DevTools`SourceTools`EditFunction[
           Daniel`ARC`ARCImplementedTasksMarkdown], ImageSize -> {132.5, 40}, 
           Method -> "Queued"], " ", 
          Row[{
            
            DynamicModule[{
             DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
              "Capture"}, 
             Button[
              Dynamic[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel], 
              If[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel === 
               "Capture", 
               DevTools`TestingTools`FunctionCapture`EnableFunctionCapture[
                Daniel`ARC`ARCImplementedTasksMarkdown]; 
               DevTools`TestingTools`FunctionCapture`\
RegisterFunctionCaptureNotebook[Daniel`ARC`ARCImplementedTasksMarkdown, 
                 InputNotebook[]]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Release"; Null, 
               DevTools`TestingTools`FunctionCapture`DisableFunctionCapture[
                Daniel`ARC`ARCImplementedTasksMarkdown]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Capture"; Null], ImageSize -> {100, 40}, Method -> "Queued"],
              DynamicModuleValues :> {}], 
            Button["?", 
             DevTools`TestingTools`FunctionCapture`CaptureFunctionHelp[], 
             ImageSize -> {30, 40}, Method -> "Queued"]}], " ", 
          Row[{
            Button["<", 
             DevTools`NotebookTools`MoveNotebook["Left"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"], 
            Button[">", 
             DevTools`NotebookTools`MoveNotebook["Right"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"]}]}], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202288120354581; If[
          And[
           ValueQ[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202288120354581], 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202288120354581 =!= "", 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202288120354581 =!= Null], 
          (If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {"MaxHeight" -> 300},
              "NakedSection"]], 
           Framed[#, FrameStyle -> None, FrameMargins -> 2], 
           
           Framed[#, FrameStyle -> LightGray, Background -> White, 
            FrameMargins -> 15]]& )[
           Grid[{{
              Pane[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202288120354581, "ImageSize" -> {Full, {0, 
                  OptionValue[
                  DevTools`NotebookTools`DynamicOutputSection, {
                   "MaxHeight" -> 300}, "MaxHeight"]}}, Scrollbars -> 
               Automatic, FrameMargins -> 0]}, 
             If[
              TrueQ[
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {
                "MaxHeight" -> 300}, "NakedSection"]], 
              Apply[Sequence, {}], {
               Button[
               "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202288120354581 = "", ImageSize -> {100, 33}]}]}, 
            Spacings -> {0, 1}, Alignment -> {Left, Top}]], 
          Apply[Sequence, {}]]}], StandardForm], 
     TrackedSymbols :> {
      DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202288120354581}]], "DockedCell"]},
TaggingRules->{
 "CreateNamedNotebook2Args" -> {
   "ARCImplementedTasksMarkdown", "Type" -> "Function", 
    "GenerateNotebookArgs" -> {
     "Function" -> Daniel`ARC`ARCImplementedTasksMarkdown}, "ReturnNotebook" -> 
    True}},
InputAutoReplacements->{},
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"a12cb916-bc91-4726-8b95-10beea622b0f"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 99, 0, 98, "Title",ExpressionUUID->"fe3416a8-2723-4e9f-b090-12335c6842d0"],
Cell[682, 24, 237, 5, 52, "Code",ExpressionUUID->"d77e5628-2add-4172-ba75-063b9d9334b1",
 InitializationCell->False],
Cell[CellGroupData[{
Cell[944, 33, 79, 0, 67, "Section",ExpressionUUID->"578486c2-b286-42c7-bbc9-f764a16a30ed"],
Cell[CellGroupData[{
Cell[1048, 37, 453, 11, 87, "Code",ExpressionUUID->"a2a4ec1e-61cd-497c-a140-dda8f4f720fa",
 InitializationCell->False],
Cell[1504, 50, 2038, 34, 832, "Output",ExpressionUUID->"15a01566-e94f-4271-8649-130e1d812b3e"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

