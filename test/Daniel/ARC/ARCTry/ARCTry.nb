(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     15263,        353]
NotebookOptionsPosition[      9230,        206]
NotebookOutlinePosition[     14693,        342]
CellTagsIndexPosition[     14650,        339]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ARCTry", "Title",ExpressionUUID->"3332f9af-18d2-4f85-b3a0-7d4dd4648a70"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"RunUnitTests", "[", "ARCTry", "]"}]}], "Code",
 InitializationCell->
  False,ExpressionUUID->"ba516aed-6901-4c15-8119-2a7205b12d1f"],

Cell[CellGroupData[{

Cell["Tests", "Section",ExpressionUUID->"ff94ac4a-0260-4685-94a3-18505133d913"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ARCTry", "[", 
   RowBox[{"\"\<4522001f\>\"", ",", " ", "\"\<Train\>\"", ",", " ", "2"}], 
   "]"}], " ", "//", " ", "ARCIndent"}]}], "Code",
 InitializationCell->False,
 CellChangeTimes->{{3.867695379205022*^9, 3.8676953890447073`*^9}, {
   3.867695579031397*^9, 3.8676955807954597`*^9}, 3.867744951112472*^9},
 CellLabel->
  "In[890]:=",ExpressionUUID->"171cbeab-c5a8-4232-be39-6a148c514189"],

Cell[BoxData[
 TemplateBox[{
  "Set", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) in \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\"}], \\\"}\\\"}]}], \\\"}\\\"}]\\).\"", 2, 891, 85, 
   24363642775327862640, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.867744952171022*^9},
 CellLabel->
  "During evaluation of \
In[890]:=",ExpressionUUID->"307cf52a-9ef2-41b6-bb2f-31f580908aef"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"<|\"\>"},
    {"\<\"    \\\"Result\\\" -> \\\"Failure\\\",\"\>"},
    {
     TemplateBox[{
       TemplateBox[{"\"    \"", 
         TemplateBox[{"\"\\\"Input\\\" -> \"", 
           TagBox[
            
            GridBox[{{"\"\"", "\"\"", "\"\""}, {"\"\"", "\"\"", "\"\""}, {
              "\"\"", "\"\"", "\"\""}}, AutoDelete -> False, 
             GridBoxBackground -> {
              "Columns" -> {{None}}, "Rows" -> {{None}}, 
               "ItemsIndexed" -> {{1, 1} -> GrayLevel[0], {1, 2} -> 
                 GrayLevel[0], {1, 3} -> GrayLevel[0], {2, 1} -> 
                 GrayLevel[0], {2, 2} -> RGBColor[1, 0, 0], {2, 3} -> 
                 RGBColor[0, 1, 0], {3, 1} -> GrayLevel[0], {3, 2} -> 
                 RGBColor[0, 1, 0], {3, 3} -> RGBColor[0, 1, 0]}}, 
             GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
             GridBoxFrame -> {
              "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}}, 
             GridBoxItemSize -> {"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}, 
             FrameStyle -> {
               AbsoluteThickness[1], 
               GrayLevel[0.5]}], "Grid"]}, "RowDefault"]}, "RowDefault"], 
       "\",\""},
      "RowDefault"]},
    {
     TemplateBox[{
       TemplateBox[{"\"    \"", 
         TemplateBox[{"\"\\\"Output\\\" -> \"", 
           TagBox[
            
            GridBox[{{"\"\"", "\"\"", "\"\""}, {"\"\"", "\"\"", "\"\""}, {
              "\"\"", "\"\"", "\"\""}}, AutoDelete -> False, 
             GridBoxBackground -> {
              "Columns" -> {{None}}, "Rows" -> {{None}}, 
               "ItemsIndexed" -> {{1, 1} -> GrayLevel[0], {1, 2} -> 
                 GrayLevel[0], {1, 3} -> GrayLevel[0], {2, 1} -> 
                 GrayLevel[0], {2, 2} -> GrayLevel[0], {2, 3} -> 
                 GrayLevel[0], {3, 1} -> GrayLevel[0], {3, 2} -> 
                 GrayLevel[0], {3, 3} -> GrayLevel[0]}}, 
             GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
             GridBoxFrame -> {
              "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}}, 
             GridBoxItemSize -> {"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}, 
             FrameStyle -> {
               AbsoluteThickness[1], 
               GrayLevel[0.5]}], "Grid"]}, "RowDefault"]}, "RowDefault"], 
       "\",\""},
      "RowDefault"]},
    {
     TemplateBox[{"\"    \\\"Expected\\\" -> \"", 
       TagBox[
        GridBox[{{
          "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", 
           "\"\""}, {
          "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", 
           "\"\""}, {
          "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", 
           "\"\""}, {
          "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", 
           "\"\""}, {
          "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", 
           "\"\""}, {
          "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", 
           "\"\""}, {
          "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", 
           "\"\""}, {
          "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", 
           "\"\""}, {
          "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", 
           "\"\""}}, AutoDelete -> False, 
         GridBoxBackground -> {
          "Columns" -> {{None}}, "Rows" -> {{None}}, 
           "ItemsIndexed" -> {{1, 1} -> GrayLevel[0], {1, 2} -> 
             GrayLevel[0], {1, 3} -> GrayLevel[0], {1, 4} -> 
             GrayLevel[0], {1, 5} -> GrayLevel[0], {1, 6} -> 
             GrayLevel[0], {1, 7} -> GrayLevel[0], {1, 8} -> 
             GrayLevel[0], {1, 9} -> GrayLevel[0], {2, 1} -> 
             GrayLevel[0], {2, 2} -> RGBColor[0, 1, 0], {2, 3} -> 
             RGBColor[0, 1, 0], {2, 4} -> RGBColor[0, 1, 0], {2, 5} -> 
             RGBColor[0, 1, 0], {2, 6} -> GrayLevel[0], {2, 7} -> 
             GrayLevel[0], {2, 8} -> GrayLevel[0], {2, 9} -> 
             GrayLevel[0], {3, 1} -> GrayLevel[0], {3, 2} -> 
             RGBColor[0, 1, 0], {3, 3} -> RGBColor[0, 1, 0], {3, 4} -> 
             RGBColor[0, 1, 0], {3, 5} -> RGBColor[0, 1, 0], {3, 6} -> 
             GrayLevel[0], {3, 7} -> GrayLevel[0], {3, 8} -> 
             GrayLevel[0], {3, 9} -> GrayLevel[0], {4, 1} -> 
             GrayLevel[0], {4, 2} -> RGBColor[0, 1, 0], {4, 3} -> 
             RGBColor[0, 1, 0], {4, 4} -> RGBColor[0, 1, 0], {4, 5} -> 
             RGBColor[0, 1, 0], {4, 6} -> GrayLevel[0], {4, 7} -> 
             GrayLevel[0], {4, 8} -> GrayLevel[0], {4, 9} -> 
             GrayLevel[0], {5, 1} -> GrayLevel[0], {5, 2} -> 
             RGBColor[0, 1, 0], {5, 3} -> RGBColor[0, 1, 0], {5, 4} -> 
             RGBColor[0, 1, 0], {5, 5} -> RGBColor[0, 1, 0], {5, 6} -> 
             GrayLevel[0], {5, 7} -> GrayLevel[0], {5, 8} -> 
             GrayLevel[0], {5, 9} -> GrayLevel[0], {6, 1} -> 
             GrayLevel[0], {6, 2} -> GrayLevel[0], {6, 3} -> 
             GrayLevel[0], {6, 4} -> GrayLevel[0], {6, 5} -> 
             GrayLevel[0], {6, 6} -> RGBColor[0, 1, 0], {6, 7} -> 
             RGBColor[0, 1, 0], {6, 8} -> RGBColor[0, 1, 0], {6, 9} -> 
             RGBColor[0, 1, 0], {7, 1} -> GrayLevel[0], {7, 2} -> 
             GrayLevel[0], {7, 3} -> GrayLevel[0], {7, 4} -> 
             GrayLevel[0], {7, 5} -> GrayLevel[0], {7, 6} -> 
             RGBColor[0, 1, 0], {7, 7} -> RGBColor[0, 1, 0], {7, 8} -> 
             RGBColor[0, 1, 0], {7, 9} -> RGBColor[0, 1, 0], {8, 1} -> 
             GrayLevel[0], {8, 2} -> GrayLevel[0], {8, 3} -> 
             GrayLevel[0], {8, 4} -> GrayLevel[0], {8, 5} -> 
             GrayLevel[0], {8, 6} -> RGBColor[0, 1, 0], {8, 7} -> 
             RGBColor[0, 1, 0], {8, 8} -> RGBColor[0, 1, 0], {8, 9} -> 
             RGBColor[0, 1, 0], {9, 1} -> GrayLevel[0], {9, 2} -> 
             GrayLevel[0], {9, 3} -> GrayLevel[0], {9, 4} -> 
             GrayLevel[0], {9, 5} -> GrayLevel[0], {9, 6} -> 
             RGBColor[0, 1, 0], {9, 7} -> RGBColor[0, 1, 0], {9, 8} -> 
             RGBColor[0, 1, 0], {9, 9} -> RGBColor[0, 1, 0]}}, 
         GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
         GridBoxFrame -> {"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}}, 
         GridBoxItemSize -> {"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}, 
         FrameStyle -> {
           AbsoluteThickness[1], 
           GrayLevel[0.5]}], "Grid"]},
      "RowDefault"]},
    {"\<\"|>\"\>"}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.867695456038334*^9, {3.8676955310574937`*^9, 3.8676956699226265`*^9}, 
   3.867695733337448*^9, 3.867744952179022*^9},
 CellLabel->
  "Out[891]=",ExpressionUUID->"a239dd15-3bf8-49e5-ae97-f225b908c396"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Local",
WindowSize->{958, 980},
WindowMargins->{{1913., Automatic}, {Automatic, -45}},
Visible->True,
DockedCells->{
  Cell[
   BoxData[
    DynamicBox[
     ToBoxes[
      Column[{
        Row[{
          Button["New Test", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`NewFunctionCell[Daniel`ARC`ARCTry], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272419493226639]], ImageSize -> {95., 40}, 
           Method -> "Queued"], " ", 
          Button["Add Tests to File", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`CreateUnitTests[
            Daniel`ARC`ARCTry, "SubTest" -> None], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272419493226639]], ImageSize -> {162.5, 40}, 
           Method -> "Queued"], " ", 
          Button[
          "Run Tests", 
           DevTools`TestingTools`RunUnitTestsInNotebook[Daniel`ARC`ARCTry]; 
           Null, ImageSize -> {102.5, 40}, Method -> "Queued"], " ", 
          Button["Edit Tests", 
           DevTools`TestingTools`EditUnitTests[Daniel`ARC`ARCTry], 
           ImageSize -> {110., 40}, Method -> "Queued"], " ", 
          Button["Edit Function", 
           DevTools`SourceTools`EditFunction[Daniel`ARC`ARCTry], 
           ImageSize -> {132.5, 40}, Method -> "Queued"], " ", 
          Row[{
            
            DynamicModule[{
             DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
              "Capture"}, 
             Button[
              Dynamic[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel], 
              If[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel === 
               "Capture", 
               DevTools`TestingTools`FunctionCapture`EnableFunctionCapture[
                Daniel`ARC`ARCTry]; 
               DevTools`TestingTools`FunctionCapture`\
RegisterFunctionCaptureNotebook[Daniel`ARC`ARCTry, 
                 InputNotebook[]]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Release"; Null, 
               DevTools`TestingTools`FunctionCapture`DisableFunctionCapture[
                Daniel`ARC`ARCTry]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Capture"; Null], ImageSize -> {100, 40}, Method -> "Queued"],
              DynamicModuleValues :> {}], 
            Button["?", 
             DevTools`TestingTools`FunctionCapture`CaptureFunctionHelp[], 
             ImageSize -> {30, 40}, Method -> "Queued"]}], " ", 
          Row[{
            Button["<", 
             DevTools`NotebookTools`MoveNotebook["Left"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"], 
            Button[">", 
             DevTools`NotebookTools`MoveNotebook["Right"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"]}]}], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272419493226639; If[
          And[
           ValueQ[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272419493226639], 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272419493226639 =!= "", 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272419493226639 =!= Null], 
          (If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {"MaxHeight" -> 300},
              "NakedSection"]], 
           Framed[#, FrameStyle -> None, FrameMargins -> 2], 
           
           Framed[#, FrameStyle -> LightGray, Background -> White, 
            FrameMargins -> 15]]& )[
           Grid[{{
              Pane[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272419493226639, "ImageSize" -> {Full, {0, 
                  OptionValue[
                  DevTools`NotebookTools`DynamicOutputSection, {
                   "MaxHeight" -> 300}, "MaxHeight"]}}, Scrollbars -> 
               Automatic, FrameMargins -> 0]}, 
             If[
              TrueQ[
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {
                "MaxHeight" -> 300}, "NakedSection"]], 
              Apply[Sequence, {}], {
               Button[
               "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272419493226639 = "", 
                ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
            Alignment -> {Left, Top}]], 
          Apply[Sequence, {}]]}], StandardForm], 
     TrackedSymbols :> {
      DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272419493226639}]], "DockedCell"]},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, 
  "CreateNamedNotebook2Args" -> {
   "ARCTry", "Type" -> "Function", 
    "GenerateNotebookArgs" -> {"Function" -> Daniel`ARC`ARCTry}, 
    "ReturnNotebook" -> True}},
InputAutoReplacements->{},
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"765e92b6-3af6-41c9-879d-1c6b1e22394f"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 78, 0, 96, "Title",ExpressionUUID->"3332f9af-18d2-4f85-b3a0-7d4dd4648a70"],
Cell[661, 24, 216, 5, 53, "Code",ExpressionUUID->"ba516aed-6901-4c15-8119-2a7205b12d1f",
 InitializationCell->False],
Cell[CellGroupData[{
Cell[902, 33, 79, 0, 67, "Section",ExpressionUUID->"ff94ac4a-0260-4685-94a3-18505133d913"],
Cell[CellGroupData[{
Cell[1006, 37, 489, 11, 53, "Code",ExpressionUUID->"171cbeab-c5a8-4232-be39-6a148c514189",
 InitializationCell->False],
Cell[1498, 50, 769, 15, 23, "Message",ExpressionUUID->"307cf52a-9ef2-41b6-bb2f-31f580908aef"],
Cell[2270, 67, 6920, 134, 452, "Output",ExpressionUUID->"a239dd15-3bf8-49e5-ae97-f225b908c396"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

