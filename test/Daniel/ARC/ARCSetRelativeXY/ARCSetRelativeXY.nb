(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     12271,        315]
NotebookOptionsPosition[      6048,        164]
NotebookOutlinePosition[     11572,        301]
CellTagsIndexPosition[     11529,        298]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ARCSetRelativeXY", "Title",ExpressionUUID->"e1fb1408-2aec-441c-a4db-da49971d5f70"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"RunUnitTests", "[", "ARCSetRelativeXY", "]"}]}], "Code",
 InitializationCell->False,
 CellLabel->
  "In[544]:=",ExpressionUUID->"767af759-599b-4d46-a3cb-422e4990909a"],

Cell[CellGroupData[{

Cell["Tests", "Section",ExpressionUUID->"8499095a-3612-42e1-b270-eed442878a44"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCSetRelativeXY-20220817-7PCR2M", Daniel`ARC`ARCSetRelativeXY, 
              
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202281720523255223], 92377772]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> "ARCSetRelativeXY-20220817-7PCR2M"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCSetRelativeXY-20220817-7PCR2M", Daniel`ARC`ARCSetRelativeXY, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202281720523255223], "CellID" -> 92377772, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCSetRelativeXY-20220817-7PCR2M", Daniel`ARC`ARCSetRelativeXY, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202281720523255223], None], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCSetRelativeXY-20220817-7PCR2M"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202281720523255223; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202281720523255223], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202281720523255223 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202281720523255223 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202281720523255223, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202281720523255223 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{840., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202281720523255223}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.8697727525518703`*^9},ExpressionUUID->"2c503a20-6993-4426-a063-\
bf61ef439349"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"ARCSetRelativeXY", "[", "\n", "\t", 
  RowBox[{
   RowBox[{"<|", "\n", "\t\t", 
    RowBox[{
     RowBox[{"\"\<Y\>\"", " ", "->", " ", "9"}], ",", "\n", "\t\t", 
     RowBox[{"\"\<X\>\"", " ", "->", " ", "4"}]}], "\n", "\t", "|>"}], ",", 
   "\n", "\t", 
   RowBox[{"<|", "\n", "\t\t", 
    RowBox[{
     RowBox[{"\"\<Y\>\"", " ", "->", " ", "2"}], ",", "\n", "\t\t", 
     RowBox[{"\"\<X\>\"", " ", "->", " ", "3"}]}], "\n", "\t", "|>"}]}], "\n",
   "]"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.869772647000351*^9, 3.8697726954915752`*^9}, 
   3.86977275255295*^9},
 CellLabel->"In[557]:=",
 CellID->92377772,
 "TestId" -> 
 "ARCSetRelativeXY-20220817-7PCR2M",ExpressionUUID->"9e2fceda-5d23-41d6-9609-\
172ca57ae1b3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Y\"\>", "\[Rule]", "9"}], ",", 
   RowBox[{"\<\"X\"\>", "\[Rule]", "4"}], ",", 
   RowBox[{"\<\"YRelative\"\>", "\[Rule]", "7"}], ",", 
   RowBox[{"\<\"XRelative\"\>", "\[Rule]", "1"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8697726957446356`*^9, 3.8697727341646585`*^9, 
  3.8697727945531025`*^9, 3.869773167109788*^9, 3.8698620483410497`*^9},
 CellLabel->
  "Out[558]=",ExpressionUUID->"182ef947-0da3-4763-9c00-dc9394273d29"]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Local",
WindowSize->{958, 980},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
Visible->True,
DockedCells->{
  Cell[
   BoxData[
    DynamicBox[
     ToBoxes[
      Column[{
        Row[{
          Button["New Test", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`NewFunctionCell[
            Daniel`ARC`ARCSetRelativeXY], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202281720504055210]], ImageSize -> {95., 40}, 
           Method -> "Queued"], " ", 
          Button["Add Tests to File", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`CreateUnitTests[
            Daniel`ARC`ARCSetRelativeXY, "SubTest" -> None], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202281720504055210]], ImageSize -> {162.5, 40}, 
           Method -> "Queued"], " ", 
          Button[
          "Run Tests", 
           DevTools`TestingTools`RunUnitTestsInNotebook[
            Daniel`ARC`ARCSetRelativeXY]; Null, ImageSize -> {102.5, 40}, 
           Method -> "Queued"], " ", 
          Button["Edit Tests", 
           DevTools`TestingTools`EditUnitTests[Daniel`ARC`ARCSetRelativeXY], 
           ImageSize -> {110., 40}, Method -> "Queued"], " ", 
          Button["Edit Function", 
           DevTools`SourceTools`EditFunction[Daniel`ARC`ARCSetRelativeXY], 
           ImageSize -> {132.5, 40}, Method -> "Queued"], " ", 
          Row[{
            
            DynamicModule[{
             DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
              "Capture"}, 
             Button[
              Dynamic[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel], 
              If[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel === 
               "Capture", 
               DevTools`TestingTools`FunctionCapture`EnableFunctionCapture[
                Daniel`ARC`ARCSetRelativeXY]; 
               DevTools`TestingTools`FunctionCapture`\
RegisterFunctionCaptureNotebook[Daniel`ARC`ARCSetRelativeXY, 
                 InputNotebook[]]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Release"; Null, 
               DevTools`TestingTools`FunctionCapture`DisableFunctionCapture[
                Daniel`ARC`ARCSetRelativeXY]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Capture"; Null], ImageSize -> {100, 40}, Method -> "Queued"],
              DynamicModuleValues :> {}], 
            Button["?", 
             DevTools`TestingTools`FunctionCapture`CaptureFunctionHelp[], 
             ImageSize -> {30, 40}, Method -> "Queued"]}], " ", 
          Row[{
            Button["<", 
             DevTools`NotebookTools`MoveNotebook["Left"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"], 
            Button[">", 
             DevTools`NotebookTools`MoveNotebook["Right"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"]}]}], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202281720504055210; If[
          And[
           ValueQ[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202281720504055210], 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202281720504055210 =!= "", 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202281720504055210 =!= Null], 
          (If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {"MaxHeight" -> 300},
              "NakedSection"]], 
           Framed[#, FrameStyle -> None, FrameMargins -> 2], 
           
           Framed[#, FrameStyle -> LightGray, Background -> White, 
            FrameMargins -> 15]]& )[
           Grid[{{
              Pane[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202281720504055210, "ImageSize" -> {Full, {0, 
                  OptionValue[
                  DevTools`NotebookTools`DynamicOutputSection, {
                   "MaxHeight" -> 300}, "MaxHeight"]}}, Scrollbars -> 
               Automatic, FrameMargins -> 0]}, 
             If[
              TrueQ[
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {
                "MaxHeight" -> 300}, "NakedSection"]], 
              Apply[Sequence, {}], {
               Button[
               "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202281720504055210 = "", 
                ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
            Alignment -> {Left, Top}]], 
          Apply[Sequence, {}]]}], StandardForm], 
     TrackedSymbols :> {
      DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202281720504055210}]], "DockedCell"]},
TaggingRules->{
 "CreateNamedNotebook2Args" -> {
   "ARCSetRelativeXY", "Type" -> "Function", 
    "GenerateNotebookArgs" -> {"Function" -> Daniel`ARC`ARCSetRelativeXY}, 
    "ReturnNotebook" -> True}},
InputAutoReplacements->{},
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"583943a5-cec8-4b99-8b28-4c347a1ec235"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 88, 0, 98, "Title",ExpressionUUID->"e1fb1408-2aec-441c-a4db-da49971d5f70"],
Cell[671, 24, 251, 6, 54, "Code",ExpressionUUID->"767af759-599b-4d46-a3cb-422e4990909a",
 InitializationCell->False],
Cell[CellGroupData[{
Cell[947, 34, 79, 0, 67, "Section",ExpressionUUID->"8499095a-3612-42e1-b270-eed442878a44"],
Cell[CellGroupData[{
Cell[1051, 38, 3549, 83, 52, "TestUI",ExpressionUUID->"2c503a20-6993-4426-a063-bf61ef439349",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[4603, 123, 879, 23, 216, "Code",ExpressionUUID->"9e2fceda-5d23-41d6-9609-172ca57ae1b3",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->92377772]
}, Open  ]],
Cell[5497, 149, 523, 11, 33, "Output",ExpressionUUID->"182ef947-0da3-4763-9c00-dc9394273d29"]
}, Open  ]]
}, Open  ]]
}
]
*)

