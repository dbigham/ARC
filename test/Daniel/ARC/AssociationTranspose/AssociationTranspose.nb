(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     18556,        471]
NotebookOptionsPosition[     11610,        305]
NotebookOutlinePosition[     17248,        445]
CellTagsIndexPosition[     17205,        442]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["AssociationTranspose", "Title",ExpressionUUID->"9b8f4f1a-3923-4b14-9a17-91afcc3c3572"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"RunUnitTests", "[", "AssociationTranspose", "]"}]}], "Code",
 InitializationCell->False,
 CellLabel->
  "In[482]:=",ExpressionUUID->"df2a3f80-560e-44ea-b744-51c9435aea66"],

Cell[CellGroupData[{

Cell["Tests", "Section",ExpressionUUID->"3fde71fd-2881-4af3-a699-53988030b672"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "AssociationTranspose-20220724-29T66F", 
              Daniel`ARC`AssociationTranspose, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227241834117921], 31921255]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> 
            "AssociationTranspose-20220724-29T66F"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "AssociationTranspose-20220724-29T66F", 
            Daniel`ARC`AssociationTranspose, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227241834117921], "CellID" -> 31921255, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "AssociationTranspose-20220724-29T66F", 
           Daniel`ARC`AssociationTranspose, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227241834117921], None], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"AssociationTranspose-20220724-29T66F"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227241834117921; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227241834117921], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227241834117921 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227241834117921 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227241834117921, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227241834117921 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{840., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227241834117921}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.8676908514966908`*^9},ExpressionUUID->"2d5f6fc0-1ccf-4e0e-ad2d-\
1d339648a924"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"AssociationTranspose", "[", "\n", "\t", 
   RowBox[{"{", "\n", "\t\t", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<a\>\"", " ", "\[Rule]", " ", "1"}], ",", " ", 
       RowBox[{"\"\<b\>\"", " ", "\[Rule]", " ", "4"}]}], "|>"}], ",", "\n", 
     "\t\t", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<a\>\"", " ", "\[Rule]", " ", "2"}], ",", " ", 
       RowBox[{"\"\<b\>\"", " ", "\[Rule]", " ", "5"}]}], "|>"}], ",", "\n", 
     "\t\t", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<a\>\"", " ", "\[Rule]", " ", "3"}], ",", " ", 
       RowBox[{"\"\<b\>\"", " ", "\[Rule]", " ", "6"}]}], "|>"}]}], "\n", 
    "\t", "}"}], "\n", "]"}], " ", "//", " ", "Indent2"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.8676907804480762`*^9, 3.867690804608093*^9}, 
   3.867690851497697*^9},
 CellLabel->"In[76]:=",
 CellID->31921255,
 "TestId" -> 
 "AssociationTranspose-20220724-29T66F",ExpressionUUID->"6361d9ff-8141-4e0c-\
a022-60ed85402c42"]
}, Open  ]],

Cell[BoxData["\<\"<|\\\"a\\\" -> {1, 2, 3}, \\\"b\\\" -> {4, 5, 6}|>\"\>"], \
"Output",
 CellChangeTimes->{{3.867690805786792*^9, 3.8676908501932898`*^9}},
 CellLabel->"Out[77]=",ExpressionUUID->"c6072902-df77-47fc-af60-497424241c7d"],

Cell[CellGroupData[{

Cell["Missing Values", "Subsection",
 CellChangeTimes->{{3.871917348244919*^9, 
  3.871917349459347*^9}},ExpressionUUID->"4db65548-b0bb-418a-9512-\
3e6a72014f84"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "AssociationTranspose-20220911-PJVJ0R", 
              Daniel`ARC`AssociationTranspose, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291116382043052], 72269195, "SubTest" -> 
              None]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> 
            "AssociationTranspose-20220911-PJVJ0R"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "AssociationTranspose-20220911-PJVJ0R", 
            Daniel`ARC`AssociationTranspose, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291116382043052], "CellID" -> 72269195, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "AssociationTranspose-20220911-PJVJ0R", 
           Daniel`ARC`AssociationTranspose, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291116382043052], 
           Utility`FilterOptions[
           "SubTest" -> None, 
            DevTools`TestingTools`Private`openInEditorClicked]], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"AssociationTranspose-20220911-PJVJ0R"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291116382043052; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291116382043052], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291116382043052 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291116382043052 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291116382043052, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291116382043052 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{833., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291116382043052}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.871917500137671*^9},ExpressionUUID->"5c3c9f7b-b4b6-48ae-b42c-\
53d7ba112588"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"AssociationTranspose", "[", "\n", "\t", 
   RowBox[{"{", "\n", "\t\t", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<a\>\"", " ", "\[Rule]", " ", "1"}], ",", " ", 
       RowBox[{"\"\<b\>\"", " ", "\[Rule]", " ", "4"}]}], "|>"}], ",", "\n", 
     "\t\t", 
     RowBox[{"<|", 
      RowBox[{"\"\<b\>\"", " ", "\[Rule]", " ", "5"}], "|>"}], ",", "\n", 
     "\t\t", 
     RowBox[{"<|", 
      RowBox[{"\"\<c\>\"", " ", "\[Rule]", " ", "3"}], "|>"}]}], "\n", "\t", 
    "}"}], "\n", "]"}], " ", "//", " ", "Indent2"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.8676907804480762`*^9, 3.867690804608093*^9}, 
   3.867690851497697*^9, {3.871917335055925*^9, 3.8719173441849675`*^9}},
 CellLabel->"In[480]:=",
 CellID->72269195,
 "TestId" -> 
 "AssociationTranspose-20220911-PJVJ0R",ExpressionUUID->"678d83ce-72f8-44fe-\
9a17-b21bc549b4ee"]
}, Open  ]],

Cell[BoxData["\<\"<|\\n    \\\"a\\\" -> {1, Missing[\\\"KeyAbsent\\\", \
\\\"a\\\"], Missing[\\\"KeyAbsent\\\", \\\"a\\\"]},\\n    \\\"b\\\" -> {4, 5, \
Missing[\\\"KeyAbsent\\\", \\\"b\\\"]},\\n    \\\"c\\\" -> \
{Missing[\\\"KeyAbsent\\\", \\\"c\\\"], Missing[\\\"KeyAbsent\\\", \
\\\"c\\\"], 3}\\n|>\"\>"], "Output",
 CellChangeTimes->{{3.8719173389737263`*^9, 3.871917344463683*^9}, 
   3.8719174860837135`*^9},
 CellLabel->
  "Out[481]=",ExpressionUUID->"2d4634fc-57a7-45fd-945b-ec064c0a6ee0"]
}, Closed]]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Local",
WindowSize->{958, 980},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
Visible->True,
DockedCells->{
  Cell[
   BoxData[
    DynamicBox[
     ToBoxes[
      Column[{
        Row[{
          Button["New Test", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`NewFunctionCell[
            Daniel`ARC`AssociationTranspose], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227241832377884]], ImageSize -> {95., 40}, 
           Method -> "Queued"], " ", 
          Button["Add Tests to File", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`CreateUnitTests[
            Daniel`ARC`AssociationTranspose, "SubTest" -> None], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227241832377884]], ImageSize -> {162.5, 40}, 
           Method -> "Queued"], " ", 
          Button[
          "Run Tests", 
           DevTools`TestingTools`RunUnitTestsInNotebook[
            Daniel`ARC`AssociationTranspose]; Null, ImageSize -> {102.5, 40}, 
           Method -> "Queued"], " ", 
          Button["Edit Tests", 
           DevTools`TestingTools`EditUnitTests[
           Daniel`ARC`AssociationTranspose], ImageSize -> {110., 40}, Method -> 
           "Queued"], " ", 
          Button["Edit Function", 
           DevTools`SourceTools`EditFunction[Daniel`ARC`AssociationTranspose],
            ImageSize -> {132.5, 40}, Method -> "Queued"], " ", 
          Row[{
            
            DynamicModule[{
             DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
              "Capture"}, 
             Button[
              Dynamic[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel], 
              If[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel === 
               "Capture", 
               DevTools`TestingTools`FunctionCapture`EnableFunctionCapture[
                Daniel`ARC`AssociationTranspose]; 
               
               DevTools`TestingTools`FunctionCapture`\
RegisterFunctionCaptureNotebook[Daniel`ARC`AssociationTranspose, 
                 InputNotebook[]]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Release"; Null, 
               DevTools`TestingTools`FunctionCapture`DisableFunctionCapture[
                Daniel`ARC`AssociationTranspose]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Capture"; Null], ImageSize -> {100, 40}, Method -> "Queued"],
              DynamicModuleValues :> {}], 
            Button["?", 
             DevTools`TestingTools`FunctionCapture`CaptureFunctionHelp[], 
             ImageSize -> {30, 40}, Method -> "Queued"]}], " ", 
          Row[{
            Button["<", 
             DevTools`NotebookTools`MoveNotebook["Left"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"], 
            Button[">", 
             DevTools`NotebookTools`MoveNotebook["Right"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"]}]}], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227241832377884; If[
          And[
           ValueQ[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227241832377884], 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227241832377884 =!= "", 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227241832377884 =!= Null], 
          (If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {"MaxHeight" -> 300},
              "NakedSection"]], 
           Framed[#, FrameStyle -> None, FrameMargins -> 2], 
           
           Framed[#, FrameStyle -> LightGray, Background -> White, 
            FrameMargins -> 15]]& )[
           Grid[{{
              Pane[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227241832377884, "ImageSize" -> {Full, {0, 
                  OptionValue[
                  DevTools`NotebookTools`DynamicOutputSection, {
                   "MaxHeight" -> 300}, "MaxHeight"]}}, Scrollbars -> 
               Automatic, FrameMargins -> 0]}, 
             If[
              TrueQ[
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {
                "MaxHeight" -> 300}, "NakedSection"]], 
              Apply[Sequence, {}], {
               Button[
               "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227241832377884 = "", 
                ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
            Alignment -> {Left, Top}]], 
          Apply[Sequence, {}]]}], StandardForm], 
     TrackedSymbols :> {
      DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227241832377884}]], "DockedCell"]},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, 
  "CreateNamedNotebook2Args" -> {
   "AssociationTranspose", "Type" -> "Function", 
    "GenerateNotebookArgs" -> {"Function" -> Daniel`ARC`AssociationTranspose},
     "ReturnNotebook" -> True}},
InputAutoReplacements->{},
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"eef3b767-fe67-445c-90bf-50af79440d0b"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 92, 0, 98, "Title",ExpressionUUID->"9b8f4f1a-3923-4b14-9a17-91afcc3c3572"],
Cell[675, 24, 255, 6, 54, "Code",ExpressionUUID->"df2a3f80-560e-44ea-b744-51c9435aea66",
 InitializationCell->False],
Cell[CellGroupData[{
Cell[955, 34, 79, 0, 67, "Section",ExpressionUUID->"3fde71fd-2881-4af3-a699-53988030b672"],
Cell[CellGroupData[{
Cell[1059, 38, 3598, 85, 52, "TestUI",ExpressionUUID->"2d5f6fc0-1ccf-4e0e-ad2d-1d339648a924",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[4660, 125, 1145, 30, 162, "Code",ExpressionUUID->"6361d9ff-8141-4e0c-a022-60ed85402c42",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->31921255]
}, Open  ]],
Cell[5820, 158, 234, 3, 33, "Output",ExpressionUUID->"c6072902-df77-47fc-af60-497424241c7d"],
Cell[CellGroupData[{
Cell[6079, 165, 162, 3, 54, "Subsection",ExpressionUUID->"4db65548-b0bb-418a-9512-3e6a72014f84"],
Cell[CellGroupData[{
Cell[6266, 172, 3764, 89, 52, "TestUI",ExpressionUUID->"5c3c9f7b-b4b6-48ae-b42c-53d7ba112588",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[10033, 263, 1024, 26, 162, "Code",ExpressionUUID->"678d83ce-72f8-44fe-9a17-b21bc549b4ee",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->72269195]
}, Open  ]],
Cell[11072, 292, 498, 8, 114, "Output",ExpressionUUID->"2d4634fc-57a7-45fd-945b-ec064c0a6ee0"]
}, Closed]]
}, Open  ]]
}, Open  ]]
}
]
*)

