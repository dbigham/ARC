(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     44355,       1046]
NotebookOptionsPosition[     35329,        840]
NotebookOutlinePosition[     40841,        977]
CellTagsIndexPosition[     40798,        974]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ARCFollowLine", "Title",ExpressionUUID->"39e098e1-ff10-440d-b756-5653f1e77b5e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"RunUnitTests", "[", "ARCFollowLine", "]"}]}], "Code",
 InitializationCell->False,
 CellLabel->"In[7]:=",ExpressionUUID->"9a8986ca-5755-418d-8865-d725879f8b31"],

Cell[CellGroupData[{

Cell["Tests", "Section",ExpressionUUID->"acb7a014-d5c5-46b7-80dc-4167eed643f4"],

Cell[CellGroupData[{

Cell["Example 1", "Subsection",
 CellChangeTimes->{{3.8731105772637663`*^9, 
  3.873110578134834*^9}},ExpressionUUID->"14e07598-6b83-4da6-b232-\
7bb2bce2253a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ARCParseScene", "[", 
   RowBox[{
    RowBox[{"ARCParseFile", "[", "\"\<28e73c20\>\"", "]"}], "[", 
    RowBox[{"\"\<Train\>\"", ",", " ", "1", ",", " ", "\"\<Output\>\""}], 
    "]"}], "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"\"\<Objects\>\"", ",", " ", "1", ",", " ", "\"\<Image\>\""}], 
   "]"}], "]"}]], "Code",
 InitializationCell->False,
 CellChangeTimes->{{3.8721502748117933`*^9, 3.8721502908083677`*^9}, {
  3.872150395368367*^9, 3.8721504279124093`*^9}, {3.872191026705445*^9, 
  3.872191040735191*^9}},
 CellLabel->
  "In[422]:=",ExpressionUUID->"df3aa4d1-1bf3-41cb-9074-d5b3213e12a4"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"}
   },
   AutoDelete->False,
   FrameStyle->{
     AbsoluteThickness[1], 
     GrayLevel[0.5]},
   GridBoxBackground->{
    "Columns" -> {{None}}, "Rows" -> {{None}}, 
     "ItemsIndexed" -> {{1, 1} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {1, 2} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {1, 3} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {1, 4} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {1, 5} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {1, 6} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {2, 1} -> 
       GrayLevel[0.2], {2, 2} -> GrayLevel[0.2], {2, 3} -> 
       GrayLevel[0.2], {2, 4} -> GrayLevel[0.2], {2, 5} -> 
       GrayLevel[0.2], {2, 6} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {3, 1} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {3, 2} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {3, 3} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {3, 4} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {3, 5} -> 
       GrayLevel[0.2], {3, 6} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {4, 1} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {4, 2} -> 
       GrayLevel[0.2], {4, 3} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {4, 4} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {4, 5} -> 
       GrayLevel[0.2], {4, 6} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {5, 1} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {5, 2} -> 
       GrayLevel[0.2], {5, 3} -> GrayLevel[0.2], {5, 4} -> 
       GrayLevel[0.2], {5, 5} -> GrayLevel[0.2], {5, 6} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {6, 1} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {6, 2} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {6, 3} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {6, 4} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {6, 5} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {6, 6} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`]}},
   GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
   GridBoxItemSize->{"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.8721910368305483`*^9, 3.872191040992373*^9}},
 CellLabel->
  "Out[422]=",ExpressionUUID->"ace67890-fe6b-4639-9c5d-a68fb5bc9398"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCFollowLine-20220921-NIA4DI", Daniel`ARC`ARCFollowLine, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229212195444911], 53627344, "SubTest" -> None]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> "ARCFollowLine-20220921-NIA4DI"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCFollowLine-20220921-NIA4DI", Daniel`ARC`ARCFollowLine, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229212195444911], "CellID" -> 53627344, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCFollowLine-20220921-NIA4DI", Daniel`ARC`ARCFollowLine, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229212195444911], 
           Utility`FilterOptions[
           "SubTest" -> None, 
            DevTools`TestingTools`Private`openInEditorClicked]], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCFollowLine-20220921-NIA4DI"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229212195444911; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229212195444911], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229212195444911 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229212195444911 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229212195444911, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229212195444911 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{833., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229212195444911}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.8727977943988233`*^9},ExpressionUUID->"dadf3b23-4078-4d50-a729-\
2fea657cd812"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ARCFollowLine", "[", "\n", "\t", 
   RowBox[{
    RowBox[{
     RowBox[{"ARCParseScene", "[", 
      RowBox[{
       RowBox[{"ARCParseFile", "[", "\"\<28e73c20\>\"", "]"}], "[", 
       RowBox[{"\"\<Train\>\"", ",", " ", "1", ",", " ", "\"\<Output\>\""}], 
       "]"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{
      "\"\<Objects\>\"", ",", " ", "1", ",", " ", "\"\<Image\>\"", ",", " ", 
       "1"}], "]"}], "]"}], ",", "\n", "\t", "3", ",", "\n", "\t", 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "1"}], "}"}]}], "\n", "]"}], " ", "//", " ", 
  "Indent3"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.8721502954069147`*^9, 3.872150296638047*^9}, 
   3.8721504173566465`*^9, {3.872191046864692*^9, 3.872191096873559*^9}, {
   3.8721920077121353`*^9, 3.8721920089816265`*^9}, {3.8727977943988233`*^9, 
   3.8727978028749247`*^9}},
 CellLabel->"In[166]:=",
 CellID->53627344,
 "TestId" -> 
 "ARCFollowLine-20220921-NIA4DI",ExpressionUUID->"86bd50fc-4f8a-4074-8592-\
d28ab240fb6b"]
}, Open  ]],

Cell[BoxData["\<\"{\\n    {1, 1},\\n    {1, 2},\\n    {1, 3},\\n    {1, \
4},\\n    {1, 5},\\n    {1, 6},\\n    {2, 6},\\n    {3, 6},\\n    {4, 6},\\n  \
  {5, 6},\\n    {6, 6},\\n    {6, 5},\\n    {6, 4},\\n    {6, 3},\\n    {6, \
2},\\n    {6, 1},\\n    {5, 1},\\n    {4, 1},\\n    {3, 1},\\n    {3, 2},\\n  \
  {3, 3},\\n    {3, 4},\\n    {4, 4},\\n    {4, 3}\\n}\"\>"], "Output",
 CellChangeTimes->{{3.872191073726571*^9, 3.8721911390452633`*^9}, 
   3.872191579585538*^9, 3.8721916763354177`*^9, {3.872191722749058*^9, 
   3.872191826037219*^9}, {3.872192002346759*^9, 3.8721920095052915`*^9}, 
   3.87219247214083*^9, {3.8721926367149515`*^9, 3.872192685806426*^9}, {
   3.8721927171430902`*^9, 3.872192761932643*^9}, 3.872192875262224*^9, {
   3.8721929264193397`*^9, 3.872192962376197*^9}, {3.872193030527497*^9, 
   3.8721930454908667`*^9}, 3.872797803388034*^9},
 CellLabel->
  "Out[167]=",ExpressionUUID->"49cbd54e-19c6-44ff-9feb-5799267faf66"]
}, Closed]],

Cell[CellGroupData[{

Cell["Starting in the Middle of the Line", "Subsection",
 CellChangeTimes->{{3.872801899314558*^9, 
  3.8728019053938766`*^9}},ExpressionUUID->"a3fc751b-dd1a-4591-a911-\
780f80a9a7d1"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCFollowLine-20220921-BOM9XD", Daniel`ARC`ARCFollowLine, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229212218144549], 26195237, "SubTest" -> None]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> "ARCFollowLine-20220921-BOM9XD"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCFollowLine-20220921-BOM9XD", Daniel`ARC`ARCFollowLine, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229212218144549], "CellID" -> 26195237, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCFollowLine-20220921-BOM9XD", Daniel`ARC`ARCFollowLine, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229212218144549], 
           Utility`FilterOptions[
           "SubTest" -> None, 
            DevTools`TestingTools`Private`openInEditorClicked]], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCFollowLine-20220921-BOM9XD"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229212218144549; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229212218144549], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229212218144549 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229212218144549 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229212218144549, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229212218144549 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{833., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229212218144549}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.8728018940538783`*^9},ExpressionUUID->"fe7bbbd0-06ac-4a5c-8cb9-\
df3eb26323a9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ARCFollowLine", "[", "\n", "\t", 
   RowBox[{
    RowBox[{
     RowBox[{"ARCParseScene", "[", 
      RowBox[{
       RowBox[{"ARCParseFile", "[", "\"\<28e73c20\>\"", "]"}], "[", 
       RowBox[{"\"\<Train\>\"", ",", " ", "1", ",", " ", "\"\<Output\>\""}], 
       "]"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{
      "\"\<Objects\>\"", ",", " ", "1", ",", " ", "\"\<Image\>\"", ",", " ", 
       "1"}], "]"}], "]"}], ",", "\n", "\t", "3", ",", "\n", "\t", 
    RowBox[{"{", 
     RowBox[{"3", ",", " ", "1"}], "}"}]}], "\n", "]"}], " ", "//", " ", 
  "Indent3"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.8721502954069147`*^9, 3.872150296638047*^9}, 
   3.8721504173566465`*^9, {3.872191046864692*^9, 3.872191096873559*^9}, {
   3.8721920077121353`*^9, 3.8721920089816265`*^9}, {3.8727977943988233`*^9, 
   3.8727978028749247`*^9}, {3.872801843608447*^9, 3.872801844664062*^9}},
 CellLabel->"In[5]:=",
 CellID->26195237,
 "TestId" -> 
 "ARCFollowLine-20220921-BOM9XD",ExpressionUUID->"e370f5f0-fa9d-4cc3-a927-\
85b41ba555ce"]
}, Open  ]],

Cell[BoxData["\<\"{\\n    {1, 1},\\n    {1, 2},\\n    {1, 3},\\n    {1, \
4},\\n    {1, 5},\\n    {1, 6},\\n    {2, 6},\\n    {3, 6},\\n    {4, 6},\\n  \
  {5, 6},\\n    {6, 6},\\n    {6, 5},\\n    {6, 4},\\n    {6, 3},\\n    {6, \
2},\\n    {6, 1},\\n    {5, 1},\\n    {4, 1},\\n    {3, 1},\\n    {3, 2},\\n  \
  {3, 3},\\n    {3, 4},\\n    {4, 4},\\n    {4, 3}\\n}\"\>"], "Output",
 CellChangeTimes->{3.8728018795124617`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"b9da1c2f-90a8-4f24-ae67-df78e78b74a9"]
}, Closed]],

Cell[CellGroupData[{

Cell["Line Doesn\[CloseCurlyQuote]t Start at Top", "Subsection",
 CellChangeTimes->{{3.8728019148498945`*^9, 
  3.8728019229143844`*^9}},ExpressionUUID->"6830a1d2-7a41-4df3-954b-\
fb14f48e2607"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ARCParseScene", "[", 
   RowBox[{
    RowBox[{"ARCParseFile", "[", "\"\<e5790162\>\"", "]"}], "[", 
    RowBox[{"\"\<Train\>\"", ",", " ", "5", ",", " ", "\"\<Output\>\""}], 
    "]"}], "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"\"\<Objects\>\"", ",", " ", "1", ",", " ", "\"\<Image\>\""}], 
   "]"}], "]"}]], "Code",
 InitializationCell->False,
 CellChangeTimes->{{3.8721502748117933`*^9, 3.8721502908083677`*^9}, {
  3.872150395368367*^9, 3.8721504279124093`*^9}, {3.872191026705445*^9, 
  3.872191040735191*^9}, {3.872797678487791*^9, 3.8727976799889197`*^9}},
 CellLabel->
  "In[157]:=",ExpressionUUID->"cea29f27-2264-4c57-93a0-59c866b26e37"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>"}
   },
   AutoDelete->False,
   FrameStyle->{
     AbsoluteThickness[1], 
     GrayLevel[0.5]},
   GridBoxBackground->{
    "Columns" -> {{None}}, "Rows" -> {{None}}, 
     "ItemsIndexed" -> {{1, 1} -> GrayLevel[0.2], {1, 2} -> 
       GrayLevel[0.2], {1, 3} -> 
       RGBColor[
        0.9411764705882353, 0.07058823529411765, 0.7450980392156863], {1, 4} -> 
       GrayLevel[0.2], {1, 5} -> GrayLevel[0.2], {1, 6} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {1, 7} -> 
       GrayLevel[0.2], {2, 1} -> GrayLevel[0.2], {2, 2} -> 
       GrayLevel[0.2], {2, 3} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {2, 4} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {2, 5} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {2, 6} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {2, 7} -> 
       RGBColor[0.4980392156862745, 0.8588235294117647, 1.], {3, 1} -> 
       GrayLevel[0.2], {3, 2} -> GrayLevel[0.2], {3, 3} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {3, 4} -> 
       GrayLevel[0.2], {3, 5} -> GrayLevel[0.2], {3, 6} -> 
       GrayLevel[0.2], {3, 7} -> GrayLevel[0.2], {4, 1} -> 
       GrayLevel[0.2], {4, 2} -> GrayLevel[0.2], {4, 3} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {4, 4} -> 
       GrayLevel[0.2], {4, 5} -> GrayLevel[0.2], {4, 6} -> 
       GrayLevel[0.2], {4, 7} -> GrayLevel[0.2], {5, 1} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {5, 2} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {5, 3} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {5, 4} -> 
       RGBColor[0.4980392156862745, 0.8588235294117647, 1.], {5, 5} -> 
       GrayLevel[0.2], {5, 6} -> GrayLevel[0.2], {5, 7} -> GrayLevel[0.2]}},
   GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
   GridBoxItemSize->{"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.8721910368305483`*^9, 3.872191040992373*^9}, 
   3.8727976805844984`*^9},
 CellLabel->
  "Out[157]=",ExpressionUUID->"156bdbfd-c5ee-4377-b434-910682e9e924"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCFollowLine-20220921-JUT4OK", Daniel`ARC`ARCFollowLine, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229212195544914], 60197918, "SubTest" -> None]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> "ARCFollowLine-20220921-JUT4OK"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCFollowLine-20220921-JUT4OK", Daniel`ARC`ARCFollowLine, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229212195544914], "CellID" -> 60197918, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCFollowLine-20220921-JUT4OK", Daniel`ARC`ARCFollowLine, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229212195544914], 
           Utility`FilterOptions[
           "SubTest" -> None, 
            DevTools`TestingTools`Private`openInEditorClicked]], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCFollowLine-20220921-JUT4OK"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229212195544914; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229212195544914], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229212195544914 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229212195544914 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229212195544914, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229212195544914 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{833., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229212195544914}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.872797794714177*^9},ExpressionUUID->"a05ac6ef-b504-43f5-8068-\
db27a2ca2eee"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ARCFollowLine", "[", "\n", "\t", 
   RowBox[{
    RowBox[{
     RowBox[{"ARCParseScene", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"ARCParseFile", "[", "\"\<e5790162\>\"", "]"}], "[", 
        RowBox[{"\"\<Train\>\"", ",", " ", "5", ",", " ", "\"\<Output\>\""}], 
        "]"}], ",", "\n", "\t\t", 
       RowBox[{
       "\"\<FormMultiColorCompositeObjects\>\"", " ", "->", " ", "False"}]}], 
      "\n", "\t", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{
      "\"\<Objects\>\"", ",", " ", "1", ",", " ", "\"\<Image\>\"", ",", " ", 
       "1"}], "]"}], "]"}], ",", "\n", "\t", "3", ",", "\n", "\t", 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "6"}], "}"}]}], "\n", "]"}], " ", "//", " ", 
  "Indent3"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.8721502954069147`*^9, 3.872150296638047*^9}, 
   3.8721504173566465`*^9, {3.872191046864692*^9, 3.872191096873559*^9}, {
   3.8721920077121353`*^9, 3.8721920089816265`*^9}, {3.872797683339772*^9, 
   3.8727977263563795`*^9}, {3.8727977716154785`*^9, 3.872797794714177*^9}, {
   3.8727978720935855`*^9, 3.8727978774933853`*^9}, {3.872797920985376*^9, 
   3.8727979357547493`*^9}, {3.8727982058740964`*^9, 3.8727982076917305`*^9}},
 CellLabel->"In[244]:=",
 CellID->60197918,
 "TestId" -> 
 "ARCFollowLine-20220921-JUT4OK",ExpressionUUID->"1b274ae5-ef49-4e73-ac7d-\
5d11e7808be6"]
}, Open  ]],

Cell[BoxData["\<\"{{1, 6}, {2, 6}, {2, 5}, {2, 4}, {2, 3}, {3, 3}, {4, 3}, \
{5, 3}, {5, 2}, {5, 1}}\"\>"], "Output",
 CellChangeTimes->{
  3.8727976877684803`*^9, 3.872797726745793*^9, 3.872797773770571*^9, {
   3.8727979265850525`*^9, 3.8727979394740906`*^9}, 3.87279799672279*^9, {
   3.8727982085447073`*^9, 3.872798219488761*^9}, 3.8727983618922787`*^9, {
   3.872798473375871*^9, 3.872798509462041*^9}, 3.8727986937161036`*^9, {
   3.872798847524416*^9, 3.8727988675860767`*^9}, 3.8727993657386036`*^9},
 CellLabel->
  "Out[245]=",ExpressionUUID->"c6b6ca88-9152-4c20-8b49-77ed244ad962"]
}, Closed]],

Cell[CellGroupData[{

Cell["Starting Point has 3 Adjacent Pixels", "Subsection",
 CellChangeTimes->{{3.8731035789197187`*^9, 3.8731035796017923`*^9}, {
  3.8731088501013284`*^9, 
  3.873108856131649*^9}},ExpressionUUID->"f79cedd0-2ffe-476f-bdea-\
c81706a46436"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ARCParseScene", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ARCParseFile", "[", "\"\<d9f24cd1\>\"", "]"}], "[", 
     RowBox[{"\"\<Train\>\"", ",", " ", "2", ",", " ", "\"\<Output\>\""}], 
     "]"}], ",", " ", 
    RowBox[{
    "\"\<FormMultiColorCompositeObjects\>\"", " ", "->", " ", "False"}], ",", 
    " ", 
    RowBox[{"\"\<CheckForGridsAndDividers\>\"", " ", "->", " ", "False"}]}], 
   "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"\"\<Objects\>\"", ",", " ", "1", ",", " ", "\"\<Image\>\""}], 
   "]"}], "]"}]], "Code",
 InitializationCell->False,
 CellChangeTimes->{{3.8721502748117933`*^9, 3.8721502908083677`*^9}, {
  3.872150395368367*^9, 3.8721504279124093`*^9}, {3.872191026705445*^9, 
  3.872191040735191*^9}, {3.872797678487791*^9, 3.8727976799889197`*^9}, {
  3.8731035847617264`*^9, 3.8731036091388345`*^9}},
 CellLabel->
  "In[565]:=",ExpressionUUID->"600e0020-3214-4ad4-ac74-5c5e0e1c36b3"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>"}
   },
   AutoDelete->False,
   FrameStyle->{
     AbsoluteThickness[1], 
     GrayLevel[0.5]},
   GridBoxBackground->{
    "Columns" -> {{None}}, "Rows" -> {{None}}, 
     "ItemsIndexed" -> {{1, 1} -> GrayLevel[0.2], {1, 2} -> 
       RGBColor[1., 0.2549019607843137, 0.21176470588235294`], {2, 1} -> 
       GrayLevel[0.2], {2, 2} -> 
       RGBColor[1., 0.2549019607843137, 0.21176470588235294`], {3, 1} -> 
       GrayLevel[0.2], {3, 2} -> 
       RGBColor[1., 0.2549019607843137, 0.21176470588235294`], {4, 1} -> 
       GrayLevel[0.2], {4, 2} -> 
       RGBColor[1., 0.2549019607843137, 0.21176470588235294`], {5, 1} -> 
       GrayLevel[0.2], {5, 2} -> 
       RGBColor[1., 0.2549019607843137, 0.21176470588235294`], {6, 1} -> 
       GrayLevel[0.2], {6, 2} -> 
       RGBColor[1., 0.2549019607843137, 0.21176470588235294`], {7, 1} -> 
       RGBColor[1., 0.2549019607843137, 0.21176470588235294`], {7, 2} -> 
       RGBColor[1., 0.2549019607843137, 0.21176470588235294`], {8, 1} -> 
       RGBColor[1., 0.2549019607843137, 0.21176470588235294`], {8, 2} -> 
       GrayLevel[0.2], {9, 1} -> 
       RGBColor[1., 0.2549019607843137, 0.21176470588235294`], {9, 2} -> 
       GrayLevel[0.2], {10, 1} -> 
       RGBColor[1., 0.2549019607843137, 0.21176470588235294`], {10, 2} -> 
       GrayLevel[0.2]}},
   GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
   GridBoxItemSize->{"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.8721910368305483`*^9, 3.872191040992373*^9}, 
   3.8727976805844984`*^9, {3.873103588901593*^9, 3.873103609652566*^9}, 
   3.8731088229272614`*^9},
 CellLabel->
  "Out[565]=",ExpressionUUID->"6aecd4dc-945c-48e1-b4ad-6d2318711593"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCFollowLine-20220921-JUT4OK", Daniel`ARC`ARCFollowLine, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229212195544914], 60197918, "SubTest" -> None]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> "ARCFollowLine-20220921-JUT4OK"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCFollowLine-20220921-JUT4OK", Daniel`ARC`ARCFollowLine, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229212195544914], "CellID" -> 60197918, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCFollowLine-20220921-JUT4OK", Daniel`ARC`ARCFollowLine, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229212195544914], 
           Utility`FilterOptions[
           "SubTest" -> None, 
            DevTools`TestingTools`Private`openInEditorClicked]], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCFollowLine-20220921-JUT4OK"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229212195544914; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229212195544914], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229212195544914 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229212195544914 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229212195544914, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229212195544914 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{833., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229212195544914}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.872797794714177*^9},ExpressionUUID->"4578546b-e51b-41d7-92fd-\
68126d938e59"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ARCFollowLine", "[", "\n", "\t", 
   RowBox[{
    RowBox[{
     RowBox[{"ARCParseScene", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"ARCParseFile", "[", "\"\<d9f24cd1\>\"", "]"}], "[", 
        RowBox[{"\"\<Train\>\"", ",", " ", "2", ",", " ", "\"\<Output\>\""}], 
        "]"}], ",", "\n", "\t\t", 
       RowBox[{
       "\"\<FormMultiColorCompositeObjects\>\"", " ", "->", " ", "False"}], 
       ",", "\n", "\t\t", 
       RowBox[{
       "\"\<CheckForGridsAndDividers\>\"", " ", "->", " ", "False"}]}], "\n", 
      "\t", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{
      "\"\<Objects\>\"", ",", " ", "1", ",", " ", "\"\<Image\>\"", ",", " ", 
       "1"}], "]"}], "]"}], ",", "\n", "\t", "2", ",", "\n", "\t", 
    RowBox[{"{", 
     RowBox[{"7", ",", " ", "1"}], "}"}]}], "\n", "]"}], " ", "//", " ", 
  "Indent3"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.8721502954069147`*^9, 3.872150296638047*^9}, 
   3.8721504173566465`*^9, {3.872191046864692*^9, 3.872191096873559*^9}, {
   3.8721920077121353`*^9, 3.8721920089816265`*^9}, {3.872797683339772*^9, 
   3.8727977263563795`*^9}, {3.8727977716154785`*^9, 3.872797794714177*^9}, {
   3.8727978720935855`*^9, 3.8727978774933853`*^9}, {3.872797920985376*^9, 
   3.8727979357547493`*^9}, {3.8727982058740964`*^9, 
   3.8727982076917305`*^9}, {3.873103614122329*^9, 3.873103640691959*^9}, {
   3.8731037549185734`*^9, 3.873103756651349*^9}},
 CellLabel->"In[566]:=",
 CellID->61422431,
 "TestId" -> 
 "ARCFollowLine-20220921-JUT4OK",ExpressionUUID->"9e819b71-7120-41ba-bde0-\
673355aa2c2d"]
}, Open  ]],

Cell[BoxData["\<\"{{10, 1}, {9, 1}, {8, 1}, {7, 1}, {7, 2}, {6, 2}, {5, 2}, \
{4, 2}, {3, 2}, {2, 2}, {1, 2}}\"\>"], "Output",
 CellChangeTimes->{{3.873103641439878*^9, 3.8731036833143454`*^9}, {
   3.873103765956664*^9, 3.873103770657121*^9}, 3.8731088167365065`*^9, 
   3.873108859090536*^9},
 CellLabel->
  "Out[567]=",ExpressionUUID->"ca2e06c7-c592-424e-ae89-eb08053940ed"]
}, Closed]]
}, Open  ]],

Cell["Working", "Section",
 CellChangeTimes->{{3.8727979886957808`*^9, 
  3.8727979894024453`*^9}},ExpressionUUID->"a7ee0fe5-e8c4-4b04-83a4-\
861da4dcbe90"]
}, Open  ]]
},
Evaluator->"Local",
WindowSize->{958, 980},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
Visible->True,
DockedCells->{
  Cell[
   BoxData[
    DynamicBox[
     ToBoxes[
      Column[{
        Row[{
          Button["New Test", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`NewFunctionCell[Daniel`ARC`ARCFollowLine], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291420335528840]], ImageSize -> {95., 40}, 
           Method -> "Queued"], " ", 
          Button["Add Tests to File", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`CreateUnitTests[
            Daniel`ARC`ARCFollowLine, "SubTest" -> None], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291420335528840]], ImageSize -> {162.5, 40}, 
           Method -> "Queued"], " ", 
          Button[
          "Run Tests", 
           DevTools`TestingTools`RunUnitTestsInNotebook[
            Daniel`ARC`ARCFollowLine]; Null, ImageSize -> {102.5, 40}, Method -> 
           "Queued"], " ", 
          Button["Edit Tests", 
           DevTools`TestingTools`EditUnitTests[
           Daniel`ARC`ARCFollowLine, "SubTest" -> None], 
           ImageSize -> {110., 40}, Method -> "Queued"], " ", 
          Button["Edit Function", 
           DevTools`SourceTools`EditFunction[Daniel`ARC`ARCFollowLine], 
           ImageSize -> {132.5, 40}, Method -> "Queued"], " ", 
          Row[{
            
            DynamicModule[{
             DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
              "Capture"}, 
             Button[
              Dynamic[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel], 
              If[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel === 
               "Capture", 
               DevTools`TestingTools`FunctionCapture`EnableFunctionCapture[
                Daniel`ARC`ARCFollowLine]; 
               DevTools`TestingTools`FunctionCapture`\
RegisterFunctionCaptureNotebook[Daniel`ARC`ARCFollowLine, 
                 InputNotebook[]]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Release"; Null, 
               DevTools`TestingTools`FunctionCapture`DisableFunctionCapture[
                Daniel`ARC`ARCFollowLine]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Capture"; Null], ImageSize -> {100, 40}, Method -> "Queued"],
              DynamicModuleValues :> {}], 
            Button["?", 
             DevTools`TestingTools`FunctionCapture`CaptureFunctionHelp[], 
             ImageSize -> {30, 40}, Method -> "Queued"]}], " ", 
          Row[{
            Button["<", 
             DevTools`NotebookTools`MoveNotebook["Left"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"], 
            Button[">", 
             DevTools`NotebookTools`MoveNotebook["Right"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"]}]}], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291420335528840; If[
          And[
           ValueQ[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291420335528840], 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291420335528840 =!= "", 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291420335528840 =!= Null], 
          (If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {"MaxHeight" -> 300},
              "NakedSection"]], 
           Framed[#, FrameStyle -> None, FrameMargins -> 2], 
           
           Framed[#, FrameStyle -> LightGray, Background -> White, 
            FrameMargins -> 15]]& )[
           Grid[{{
              Pane[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291420335528840, "ImageSize" -> {Full, {0, 
                  OptionValue[
                  DevTools`NotebookTools`DynamicOutputSection, {
                   "MaxHeight" -> 300}, "MaxHeight"]}}, Scrollbars -> 
               Automatic, FrameMargins -> 0]}, 
             If[
              TrueQ[
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {
                "MaxHeight" -> 300}, "NakedSection"]], 
              Apply[Sequence, {}], {
               Button[
               "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291420335528840 = "", 
                ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
            Alignment -> {Left, Top}]], 
          Apply[Sequence, {}]]}], StandardForm], 
     TrackedSymbols :> {
      DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291420335528840}]], "DockedCell"]},
TaggingRules->{
 "CreateNamedNotebook2Args" -> {
   "ARCFollowLine", "Type" -> "Function", 
    "GenerateNotebookArgs" -> {"Function" -> Daniel`ARC`ARCFollowLine}, 
    "ReturnNotebook" -> True}},
InputAutoReplacements->{},
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"40f2a41b-707f-47a0-b5ab-cd280e5dc573"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 85, 0, 98, "Title",ExpressionUUID->"39e098e1-ff10-440d-b756-5653f1e77b5e"],
Cell[668, 24, 243, 5, 54, "Code",ExpressionUUID->"9a8986ca-5755-418d-8865-d725879f8b31",
 InitializationCell->False],
Cell[CellGroupData[{
Cell[936, 33, 79, 0, 67, "Section",ExpressionUUID->"acb7a014-d5c5-46b7-80dc-4167eed643f4"],
Cell[CellGroupData[{
Cell[1040, 37, 159, 3, 54, "Subsection",ExpressionUUID->"14e07598-6b83-4da6-b232-7bb2bce2253a"],
Cell[CellGroupData[{
Cell[1224, 44, 631, 15, 35, "Code",ExpressionUUID->"df3aa4d1-1bf3-41cb-9074-d5b3213e12a4",
 InitializationCell->False],
Cell[1858, 61, 3238, 54, 167, "Output",ExpressionUUID->"ace67890-fe6b-4639-9c5d-a68fb5bc9398"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5133, 120, 3632, 84, 52, "TestUI",ExpressionUUID->"dadf3b23-4078-4d50-a729-2fea657cd812",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[8768, 206, 1157, 29, 126, "Code",ExpressionUUID->"86bd50fc-4f8a-4074-8592-d28ab240fb6b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->53627344]
}, Open  ]],
Cell[9940, 238, 955, 13, 534, "Output",ExpressionUUID->"49cbd54e-19c6-44ff-9feb-5799267faf66"]
}, Closed]],
Cell[CellGroupData[{
Cell[10932, 256, 184, 3, 38, "Subsection",ExpressionUUID->"a3fc751b-dd1a-4591-a911-780f80a9a7d1"],
Cell[CellGroupData[{
Cell[11141, 263, 3632, 84, 52, "TestUI",ExpressionUUID->"fe7bbbd0-06ac-4a5c-8cb9-df3eb26323a9",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[14776, 349, 1201, 29, 126, "Code",ExpressionUUID->"e370f5f0-fa9d-4cc3-a927-85b41ba555ce",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->26195237]
}, Open  ]],
Cell[15992, 381, 505, 6, 534, "Output",ExpressionUUID->"b9da1c2f-90a8-4f24-ae67-df78e78b74a9"]
}, Closed]],
Cell[CellGroupData[{
Cell[16534, 392, 194, 3, 38, "Subsection",ExpressionUUID->"6830a1d2-7a41-4df3-954b-fb14f48e2607"],
Cell[CellGroupData[{
Cell[16753, 399, 679, 15, 35, "Code",ExpressionUUID->"cea29f27-2264-4c57-93a0-59c866b26e37",
 InitializationCell->False],
Cell[17435, 416, 2734, 52, 143, "Output",ExpressionUUID->"156bdbfd-c5ee-4377-b434-910682e9e924"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20206, 473, 3630, 84, 52, "TestUI",ExpressionUUID->"a05ac6ef-b504-43f5-8068-db27a2ca2eee",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[23839, 559, 1525, 35, 180, "Code",ExpressionUUID->"1b274ae5-ef49-4e73-ac7d-5d11e7808be6",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->60197918]
}, Open  ]],
Cell[25379, 597, 592, 9, 33, "Output",ExpressionUUID->"c6b6ca88-9152-4c20-8b49-77ed244ad962"]
}, Closed]],
Cell[CellGroupData[{
Cell[26008, 611, 239, 4, 38, "Subsection",ExpressionUUID->"f79cedd0-2ffe-476f-bdea-c81706a46436"],
Cell[CellGroupData[{
Cell[26272, 619, 942, 22, 35, "Code",ExpressionUUID->"600e0020-3214-4ad4-ac74-5c5e0e1c36b3",
 InitializationCell->False],
Cell[27217, 643, 2110, 47, 263, "Output",ExpressionUUID->"6aecd4dc-945c-48e1-b4ad-6d2318711593"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29364, 695, 3630, 84, 52, "TestUI",ExpressionUUID->"4578546b-e51b-41d7-92fd-68126d938e59",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[32997, 781, 1741, 40, 198, "Code",ExpressionUUID->"9e819b71-7120-41ba-bde0-673355aa2c2d",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->61422431]
}, Open  ]],
Cell[34753, 824, 377, 6, 33, "Output",ExpressionUUID->"ca2e06c7-c592-424e-ae89-eb08053940ed"]
}, Closed]]
}, Open  ]],
Cell[35157, 834, 156, 3, 67, "Section",ExpressionUUID->"a7ee0fe5-e8c4-4b04-83a4-861da4dcbe90"]
}, Open  ]]
}
]
*)

