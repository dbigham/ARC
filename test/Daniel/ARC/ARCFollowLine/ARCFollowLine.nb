(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     13190,        311]
NotebookOptionsPosition[      6951,        159]
NotebookOutlinePosition[     12464,        296]
CellTagsIndexPosition[     12421,        293]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ARCFollowLine", "Title",ExpressionUUID->"39e098e1-ff10-440d-b756-5653f1e77b5e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"RunUnitTests", "[", "ARCFollowLine", "]"}]}], "Code",
 InitializationCell->
  False,ExpressionUUID->"9a8986ca-5755-418d-8865-d725879f8b31"],

Cell[CellGroupData[{

Cell["Tests", "Section",ExpressionUUID->"acb7a014-d5c5-46b7-80dc-4167eed643f4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ARCParseScene", "[", 
   RowBox[{
    RowBox[{"ARCParseFile", "[", "\"\<28e73c20\>\"", "]"}], "[", 
    RowBox[{"\"\<Train\>\"", ",", " ", "1", ",", " ", "\"\<Output\>\""}], 
    "]"}], "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"\"\<Objects\>\"", ",", " ", "1", ",", " ", "\"\<Image\>\""}], 
   "]"}], "]"}]], "Code",
 InitializationCell->False,
 CellChangeTimes->{{3.8721502748117933`*^9, 3.8721502908083677`*^9}, {
  3.872150395368367*^9, 3.8721504279124093`*^9}, {3.872191026705445*^9, 
  3.872191040735191*^9}},
 CellLabel->
  "In[422]:=",ExpressionUUID->"df3aa4d1-1bf3-41cb-9074-d5b3213e12a4"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"}
   },
   AutoDelete->False,
   FrameStyle->{
     AbsoluteThickness[1], 
     GrayLevel[0.5]},
   GridBoxBackground->{
    "Columns" -> {{None}}, "Rows" -> {{None}}, 
     "ItemsIndexed" -> {{1, 1} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {1, 2} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {1, 3} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {1, 4} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {1, 5} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {1, 6} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {2, 1} -> 
       GrayLevel[0.2], {2, 2} -> GrayLevel[0.2], {2, 3} -> 
       GrayLevel[0.2], {2, 4} -> GrayLevel[0.2], {2, 5} -> 
       GrayLevel[0.2], {2, 6} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {3, 1} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {3, 2} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {3, 3} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {3, 4} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {3, 5} -> 
       GrayLevel[0.2], {3, 6} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {4, 1} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {4, 2} -> 
       GrayLevel[0.2], {4, 3} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {4, 4} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {4, 5} -> 
       GrayLevel[0.2], {4, 6} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {5, 1} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {5, 2} -> 
       GrayLevel[0.2], {5, 3} -> GrayLevel[0.2], {5, 4} -> 
       GrayLevel[0.2], {5, 5} -> GrayLevel[0.2], {5, 6} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {6, 1} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {6, 2} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {6, 3} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {6, 4} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {6, 5} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`], {6, 6} -> 
       RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`]}},
   GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
   GridBoxItemSize->{"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.8721910368305483`*^9, 3.872191040992373*^9}},
 CellLabel->
  "Out[422]=",ExpressionUUID->"ace67890-fe6b-4639-9c5d-a68fb5bc9398"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ARCFollowLine", "[", "\n", "\t", 
   RowBox[{
    RowBox[{
     RowBox[{"ARCParseScene", "[", 
      RowBox[{
       RowBox[{"ARCParseFile", "[", "\"\<28e73c20\>\"", "]"}], "[", 
       RowBox[{"\"\<Train\>\"", ",", " ", "1", ",", " ", "\"\<Output\>\""}], 
       "]"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{
      "\"\<Objects\>\"", ",", " ", "1", ",", " ", "\"\<Image\>\"", ",", " ", 
       "1"}], "]"}], "]"}], ",", "\n", "\t", "3", ",", "\n", "\t", 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "2"}], "}"}], ",", "\n", "\t", 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "1"}], "}"}]}], "\n", "]"}], " ", "//", " ", 
  "Indent3"}]}], "Code",
 InitializationCell->False,
 CellChangeTimes->{{3.8721502954069147`*^9, 3.872150296638047*^9}, 
   3.8721504173566465`*^9, {3.872191046864692*^9, 3.872191096873559*^9}, {
   3.8721920077121353`*^9, 3.8721920089816265`*^9}},
 CellLabel->
  "In[489]:=",ExpressionUUID->"1a3c5e25-cc9b-4c37-b9fd-b4a281c09b4b"],

Cell[BoxData["\<\"{\\n    {1, 2},\\n    {1, 3},\\n    {1, 4},\\n    {1, \
5},\\n    {1, 6},\\n    {2, 6},\\n    {3, 6},\\n    {4, 6},\\n    {5, 6},\\n  \
  {6, 6},\\n    {6, 5},\\n    {6, 4},\\n    {6, 3},\\n    {6, 2},\\n    {6, \
1},\\n    {5, 1},\\n    {4, 1},\\n    {3, 1},\\n    {3, 2},\\n    {3, 3},\\n  \
  {3, 4},\\n    {4, 4},\\n    {4, 3}\\n}\"\>"], "Output",
 CellChangeTimes->{{3.872191073726571*^9, 3.8721911390452633`*^9}, 
   3.872191579585538*^9, 3.8721916763354177`*^9, {3.872191722749058*^9, 
   3.872191826037219*^9}, {3.872192002346759*^9, 3.8721920095052915`*^9}, 
   3.87219247214083*^9, {3.8721926367149515`*^9, 3.872192685806426*^9}, {
   3.8721927171430902`*^9, 3.872192761932643*^9}, 3.872192875262224*^9, {
   3.8721929264193397`*^9, 3.872192962376197*^9}, {3.872193030527497*^9, 
   3.8721930454908667`*^9}},
 CellLabel->
  "Out[490]=",ExpressionUUID->"41c60069-ad8e-40a2-8668-0602dc4aec86"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Local",
WindowSize->{958, 980},
WindowMargins->{{-7., Automatic}, {Automatic, 0}},
Visible->True,
DockedCells->{
  Cell[
   BoxData[
    DynamicBox[
     ToBoxes[
      Column[{
        Row[{
          Button["New Test", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`NewFunctionCell[Daniel`ARC`ARCFollowLine], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291420335528840]], ImageSize -> {95., 40}, 
           Method -> "Queued"], " ", 
          Button["Add Tests to File", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`CreateUnitTests[
            Daniel`ARC`ARCFollowLine, "SubTest" -> None], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291420335528840]], ImageSize -> {162.5, 40}, 
           Method -> "Queued"], " ", 
          Button[
          "Run Tests", 
           DevTools`TestingTools`RunUnitTestsInNotebook[
            Daniel`ARC`ARCFollowLine]; Null, ImageSize -> {102.5, 40}, Method -> 
           "Queued"], " ", 
          Button["Edit Tests", 
           DevTools`TestingTools`EditUnitTests[
           Daniel`ARC`ARCFollowLine, "SubTest" -> None], 
           ImageSize -> {110., 40}, Method -> "Queued"], " ", 
          Button["Edit Function", 
           DevTools`SourceTools`EditFunction[Daniel`ARC`ARCFollowLine], 
           ImageSize -> {132.5, 40}, Method -> "Queued"], " ", 
          Row[{
            
            DynamicModule[{
             DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
              "Capture"}, 
             Button[
              Dynamic[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel], 
              If[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel === 
               "Capture", 
               DevTools`TestingTools`FunctionCapture`EnableFunctionCapture[
                Daniel`ARC`ARCFollowLine]; 
               DevTools`TestingTools`FunctionCapture`\
RegisterFunctionCaptureNotebook[Daniel`ARC`ARCFollowLine, 
                 InputNotebook[]]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Release"; Null, 
               DevTools`TestingTools`FunctionCapture`DisableFunctionCapture[
                Daniel`ARC`ARCFollowLine]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Capture"; Null], ImageSize -> {100, 40}, Method -> "Queued"],
              DynamicModuleValues :> {}], 
            Button["?", 
             DevTools`TestingTools`FunctionCapture`CaptureFunctionHelp[], 
             ImageSize -> {30, 40}, Method -> "Queued"]}], " ", 
          Row[{
            Button["<", 
             DevTools`NotebookTools`MoveNotebook["Left"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"], 
            Button[">", 
             DevTools`NotebookTools`MoveNotebook["Right"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"]}]}], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291420335528840; If[
          And[
           ValueQ[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291420335528840], 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291420335528840 =!= "", 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291420335528840 =!= Null], 
          (If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {"MaxHeight" -> 300},
              "NakedSection"]], 
           Framed[#, FrameStyle -> None, FrameMargins -> 2], 
           
           Framed[#, FrameStyle -> LightGray, Background -> White, 
            FrameMargins -> 15]]& )[
           Grid[{{
              Pane[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291420335528840, "ImageSize" -> {Full, {0, 
                  OptionValue[
                  DevTools`NotebookTools`DynamicOutputSection, {
                   "MaxHeight" -> 300}, "MaxHeight"]}}, Scrollbars -> 
               Automatic, FrameMargins -> 0]}, 
             If[
              TrueQ[
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {
                "MaxHeight" -> 300}, "NakedSection"]], 
              Apply[Sequence, {}], {
               Button[
               "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291420335528840 = "", 
                ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
            Alignment -> {Left, Top}]], 
          Apply[Sequence, {}]]}], StandardForm], 
     TrackedSymbols :> {
      DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291420335528840}]], "DockedCell"]},
TaggingRules->{
 "CreateNamedNotebook2Args" -> {
   "ARCFollowLine", "Type" -> "Function", 
    "GenerateNotebookArgs" -> {"Function" -> Daniel`ARC`ARCFollowLine}, 
    "ReturnNotebook" -> True}},
InputAutoReplacements->{},
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"40f2a41b-707f-47a0-b5ab-cd280e5dc573"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 85, 0, 98, "Title",ExpressionUUID->"39e098e1-ff10-440d-b756-5653f1e77b5e"],
Cell[668, 24, 223, 5, 54, "Code",ExpressionUUID->"9a8986ca-5755-418d-8865-d725879f8b31",
 InitializationCell->False],
Cell[CellGroupData[{
Cell[916, 33, 79, 0, 67, "Section",ExpressionUUID->"acb7a014-d5c5-46b7-80dc-4167eed643f4"],
Cell[CellGroupData[{
Cell[1020, 37, 631, 15, 35, "Code",ExpressionUUID->"df3aa4d1-1bf3-41cb-9074-d5b3213e12a4",
 InitializationCell->False],
Cell[1654, 54, 3238, 54, 167, "Output",ExpressionUUID->"ace67890-fe6b-4639-9c5d-a68fb5bc9398"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4929, 113, 1060, 26, 144, "Code",ExpressionUUID->"1a3c5e25-cc9b-4c37-b9fd-b4a281c09b4b",
 InitializationCell->False],
Cell[5992, 141, 919, 13, 514, "Output",ExpressionUUID->"41c60069-ad8e-40a2-8668-0602dc4aec86"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

