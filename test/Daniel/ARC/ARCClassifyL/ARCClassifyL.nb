(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     16757,        423]
NotebookOptionsPosition[     10103,        265]
NotebookOutlinePosition[     15585,        400]
CellTagsIndexPosition[     15542,        397]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ARCClassifyL", "Title",ExpressionUUID->"18a50f97-3cfe-4f2c-95e4-b1a46a9fd22e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"RunUnitTests", "[", "ARCClassifyL", "]"}]}], "Code",
 InitializationCell->False,
 CellLabel->
  "In[524]:=",ExpressionUUID->"f909eadb-126d-47a9-9f4a-b8b3f7487706"],

Cell[CellGroupData[{

Cell["Tests", "Section",ExpressionUUID->"80bde79a-cda5-4112-8e82-2683b4d5815c"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCClassifyL-20220717-C0CDCJ", Daniel`ARC`ARCClassifyL, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227171457482217], 11758913]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> "ARCClassifyL-20220717-C0CDCJ"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCClassifyL-20220717-C0CDCJ", Daniel`ARC`ARCClassifyL, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227171457482217], "CellID" -> 11758913, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCClassifyL-20220717-C0CDCJ", Daniel`ARC`ARCClassifyL, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227171457482217], None], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCClassifyL-20220717-C0CDCJ"}, ImageSize -> {Full, Automatic},
           Alignment -> {Right, Center}]}}], ImageSize -> {Full, Automatic}, 
      FrameStyle -> GrayLevel[0.8], FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227171457482217; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227171457482217], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227171457482217 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227171457482217 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227171457482217, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227171457482217 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{840., {21., 27.}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227171457482217}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.867073067686704*^9},ExpressionUUID->"276f87d1-f02f-4678-aa3f-\
007e6a3b46ff"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"ARCClassifyL", "[", "\n", "\t", 
  RowBox[{"{", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}], ",", "\n", "\t\t", 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}], ",", "\n", "\t\t", 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}]}], "\n", "\t", "}"}], 
  "\n", "]"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.867071267871745*^9, 3.8670712744798656`*^9}, 
   3.867071821523348*^9, {3.8670729322160516`*^9, 3.8670729444656453`*^9}},
 CellLabel->"In[514]:=",
 CellID->11758913,
 "TestId" -> 
 "ARCClassifyL-20220717-C0CDCJ",ExpressionUUID->"2c7fdb33-ed5e-450a-909f-\
fbcb99aaaf7c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"Name\"\>", "\[Rule]", "\<\"L\"\>"}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.8670729458145447`*^9, {3.867073027690815*^9, 3.8670730653681145`*^9}, 
   3.8670731025240526`*^9},
 CellLabel->
  "Out[515]=",ExpressionUUID->"9d5779f4-d799-4008-a955-87dcffc6a5c3"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCClassifyL-20220717-8O7XSJ", Daniel`ARC`ARCClassifyL, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227171458292227], 67744828]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> "ARCClassifyL-20220717-8O7XSJ"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCClassifyL-20220717-8O7XSJ", Daniel`ARC`ARCClassifyL, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227171458292227], "CellID" -> 67744828, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCClassifyL-20220717-8O7XSJ", Daniel`ARC`ARCClassifyL, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227171458292227], None], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCClassifyL-20220717-8O7XSJ"}, ImageSize -> {Full, Automatic},
           Alignment -> {Right, Center}]}}], ImageSize -> {Full, Automatic}, 
      FrameStyle -> GrayLevel[0.8], FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227171458292227; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227171458292227], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227171458292227 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227171458292227 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227171458292227, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227171458292227 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{840., {21., 27.}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227171458292227}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.8670731086972322`*^9},ExpressionUUID->"7cbe6154-5b0d-40db-abb5-\
8a68c361a500"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ARCClassifyL", "[", "\n", "\t", 
   RowBox[{"{", "\n", "\t\t", 
    RowBox[{"{", "1", "}"}], "\n", "\t", "}"}], "\n", "]"}], " ", "//", " ", 
  "ToString"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.867071267871745*^9, 3.8670712744798656`*^9}, 
   3.867071821523348*^9, {3.8670729322160516`*^9, 3.8670729444656453`*^9}, {
   3.867073106851281*^9, 3.867073113119974*^9}},
 CellLabel->"In[520]:=",
 CellID->67744828,
 "TestId" -> 
 "ARCClassifyL-20220717-8O7XSJ",ExpressionUUID->"dd6e6499-0ec8-4d2f-97a3-\
6fedbd1fdcea"]
}, Open  ]],

Cell[BoxData["\<\"Nothing\"\>"], "Output",
 CellChangeTimes->{{3.867073107225623*^9, 3.867073113376975*^9}},
 CellLabel->
  "Out[521]=",ExpressionUUID->"5471496e-c146-45b3-aaee-067245f28e29"]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Local",
WindowSize->{958, 980},
WindowMargins->{{-7., Automatic}, {Automatic, 0}},
DockedCells->{
  Cell[
   BoxData[
    DynamicBox[
     ToBoxes[
      Column[{
        Row[{
          Button["New Test", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`NewFunctionCell[Daniel`ARC`ARCClassifyL], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022717145502204]], ImageSize -> {95., 40}, 
           Method -> "Queued"], " ", 
          Button["Add Tests to File", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`CreateUnitTests[
            Daniel`ARC`ARCClassifyL, "SubTest" -> None], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022717145502204]], ImageSize -> {162.5, 40}, 
           Method -> "Queued"], " ", 
          Button[
          "Run Tests", 
           DevTools`TestingTools`RunUnitTestsInNotebook[
            Daniel`ARC`ARCClassifyL]; Null, ImageSize -> {102.5, 40}, Method -> 
           "Queued"], " ", 
          Button["Edit Tests", 
           DevTools`TestingTools`EditUnitTests[Daniel`ARC`ARCClassifyL], 
           ImageSize -> {110., 40}, Method -> "Queued"], " ", 
          Button["Edit Function", 
           DevTools`SourceTools`EditFunction[Daniel`ARC`ARCClassifyL], 
           ImageSize -> {132.5, 40}, Method -> "Queued"], " ", 
          Row[{
            
            DynamicModule[{
             DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
              "Capture"}, 
             Button[
              Dynamic[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel], 
              If[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel === 
               "Capture", 
               DevTools`TestingTools`FunctionCapture`EnableFunctionCapture[
                Daniel`ARC`ARCClassifyL]; 
               DevTools`TestingTools`FunctionCapture`\
RegisterFunctionCaptureNotebook[Daniel`ARC`ARCClassifyL, 
                 InputNotebook[]]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Release"; Null, 
               DevTools`TestingTools`FunctionCapture`DisableFunctionCapture[
                Daniel`ARC`ARCClassifyL]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Capture"; Null], ImageSize -> {100, 40}, Method -> "Queued"],
              DynamicModuleValues :> {}], 
            Button["?", 
             DevTools`TestingTools`FunctionCapture`CaptureFunctionHelp[], 
             ImageSize -> {30, 40}, Method -> "Queued"]}], " ", 
          Row[{
            Button["<", 
             DevTools`NotebookTools`MoveNotebook["Left"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"], 
            Button[">", 
             DevTools`NotebookTools`MoveNotebook["Right"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"]}]}], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022717145502204; If[
          And[
           ValueQ[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022717145502204], 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022717145502204 =!= "", 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022717145502204 =!= Null], 
          (If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {"MaxHeight" -> 300},
              "NakedSection"]], 
           Framed[#, FrameStyle -> None, FrameMargins -> 2], 
           
           Framed[#, FrameStyle -> LightGray, Background -> White, 
            FrameMargins -> 15]]& )[
           Grid[{{
              Pane[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022717145502204, "ImageSize" -> {Full, {0, 
                  OptionValue[
                  DevTools`NotebookTools`DynamicOutputSection, {
                   "MaxHeight" -> 300}, "MaxHeight"]}}, Scrollbars -> 
               Automatic, FrameMargins -> 0]}, 
             If[
              TrueQ[
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {
                "MaxHeight" -> 300}, "NakedSection"]], 
              Apply[Sequence, {}], {
               Button[
               "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022717145502204 = "", ImageSize -> {100, 33}]}]},
             Spacings -> {0, 1}, Alignment -> {Left, Top}]], 
          Apply[Sequence, {}]]}], StandardForm], 
     TrackedSymbols :> {
      DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022717145502204}]], "DockedCell"]},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, 
  "CreateNamedNotebook2Args" -> {
   "ARCClassifyL", "Type" -> "Function", 
    "GenerateNotebookArgs" -> {"Function" -> Daniel`ARC`ARCClassifyL}, 
    "ReturnNotebook" -> True}},
InputAutoReplacements->{},
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"0f4b8dd9-b627-4b9b-a457-df075b19dbf2"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 84, 0, 96, "Title",ExpressionUUID->"18a50f97-3cfe-4f2c-95e4-b1a46a9fd22e"],
Cell[667, 24, 247, 6, 53, "Code",ExpressionUUID->"f909eadb-126d-47a9-9f4a-b8b3f7487706",
 InitializationCell->False],
Cell[CellGroupData[{
Cell[939, 34, 79, 0, 67, "Section",ExpressionUUID->"80bde79a-cda5-4112-8e82-2683b4d5815c"],
Cell[CellGroupData[{
Cell[1043, 38, 3452, 80, 50, "TestUI",ExpressionUUID->"276f87d1-f02f-4678-aa3f-007e6a3b46ff",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[4498, 120, 845, 21, 161, "Code",ExpressionUUID->"2c7fdb33-ed5e-450a-909f-fbcb99aaaf7c",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->11758913]
}, Open  ]],
Cell[5358, 144, 342, 8, 32, "Output",ExpressionUUID->"9d5779f4-d799-4008-a955-87dcffc6a5c3"],
Cell[CellGroupData[{
Cell[5725, 156, 3454, 80, 50, "TestUI",ExpressionUUID->"7cbe6154-5b0d-40db-abb5-8a68c361a500",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[9182, 238, 687, 17, 125, "Code",ExpressionUUID->"dd6e6499-0ec8-4d2f-97a3-6fedbd1fdcea",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->67744828]
}, Open  ]],
Cell[9884, 258, 191, 3, 32, "Output",ExpressionUUID->"5471496e-c146-45b3-aaee-067245f28e29"]
}, Open  ]]
}, Open  ]]
}
]
*)

