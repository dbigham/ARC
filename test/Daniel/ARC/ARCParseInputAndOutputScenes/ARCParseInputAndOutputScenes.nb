(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     51303,       1151]
NotebookOptionsPosition[     43823,        976]
NotebookOutlinePosition[     49548,       1117]
CellTagsIndexPosition[     49505,       1114]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ARCParseInputAndOutputScenes", "Title",ExpressionUUID->"ec34be9a-8a25-4293-9092-96a582d2098c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"RunUnitTests", "[", "ARCParseInputAndOutputScenes", "]"}]}], "Code",
 InitializationCell->False,
 CellLabel->
  "In[498]:=",ExpressionUUID->"38230fcb-7890-4e9a-92ab-0a54efd43ac5"],

Cell[CellGroupData[{

Cell["Related", "Section",
 CellChangeTimes->{{3.8676599811876307`*^9, 
  3.8676599818992634`*^9}},ExpressionUUID->"6d18cc76-ba3f-4eff-b8c1-\
e818db7731d1"],

Cell[BoxData[
 RowBox[{"FunctionNotebook", "[", "ARCParseScene", "]"}]], "Input",
 CellChangeTimes->{{3.8676599825813556`*^9, 3.8676599863725395`*^9}},
 CellLabel->
  "In[645]:=",ExpressionUUID->"49e8054a-77be-4559-ae5b-5f8483706e82"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tests", "Section",ExpressionUUID->"0bf7bbb1-ad76-4399-8859-47470191f27a"],

Cell[CellGroupData[{

Cell["Avoid Forming Composite Objects", "Subsection",
 CellChangeTimes->{{3.867675264912462*^9, 
  3.867675268343158*^9}},ExpressionUUID->"0be1cfd9-4ffa-4b0d-a1a7-\
e8941118170c"],

Cell["\<\
Although the three contiguous rectangles in the output would normally form a \
composite object, because those rectangles are present as discrete objects in \
the input, we avoid forming the composite object.\
\>", "Text",
 CellChangeTimes->{{3.8676752767826505`*^9, 
  3.8676753135687113`*^9}},ExpressionUUID->"e02058b5-226a-493a-9668-\
909f8b523d84"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCParseInputAndOutputScenes-20220724-BK2FLS", 
              Daniel`ARC`ARCParseInputAndOutputScenes, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272414141657729], 69909409]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> 
            "ARCParseInputAndOutputScenes-20220724-BK2FLS"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCParseInputAndOutputScenes-20220724-BK2FLS", 
            Daniel`ARC`ARCParseInputAndOutputScenes, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272414141657729], "CellID" -> 69909409, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCParseInputAndOutputScenes-20220724-BK2FLS", 
           Daniel`ARC`ARCParseInputAndOutputScenes, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272414141657729], None], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCParseInputAndOutputScenes-20220724-BK2FLS"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272414141657729; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272414141657729], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272414141657729 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272414141657729 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272414141657729, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272414141657729 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{833., {21., 27.}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272414141657729}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.867675256450431*^9},ExpressionUUID->"9615601b-e0ce-4ef8-bd75-\
35570dca0927"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"NormalizeOutput", "@", "\n", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"parsedFile", " ", "=", " ", 
        RowBox[{"ARCParseFile", "[", "\"\<1caeab9d\>\"", "]"}]}], "}"}], ",", 
      "\n", "\t", 
      RowBox[{"ARCParseInputAndOutputScenes", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"parsedFile", "[", 
         RowBox[{"\"\<Train\>\"", ",", " ", "2", ",", " ", "\"\<Input\>\""}], 
         "]"}], ",", "\n", "\t\t", 
        RowBox[{"parsedFile", "[", 
         RowBox[{"\"\<Train\>\"", ",", " ", "2", ",", " ", "\"\<Output\>\""}],
          "]"}]}], "\n", "\t", "]"}]}], "\n", "]"}], "[", "\"\<Output\>\"", 
    "]"}]}], " ", "//", " ", "ARCIndent"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.8676599968580103`*^9, 3.8676600038775225`*^9}, {
   3.8676603319044876`*^9, 3.8676603334424877`*^9}, {3.8676603969312525`*^9, 
   3.8676604060286517`*^9}, {3.8676715782599463`*^9, 3.8676716009197626`*^9}, 
   3.8676748550232105`*^9, {3.8676749735566044`*^9, 3.867674980496083*^9}, {
   3.8676750577884054`*^9, 3.867675058906502*^9}, {3.867675241485143*^9, 
   3.867675256450431*^9}},
 CellLabel->"In[496]:=",
 CellID->69909409,
 "TestId" -> 
 "ARCParseInputAndOutputScenes-20220724-BK2FLS",ExpressionUUID->"abddee79-\
3c70-4d43-aa8e-164f6b26b530"]
}, Open  ]],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"<|\"\>"},
    {"\<\"    \\\"Background\\\" -> \\\"Black\\\",\"\>"},
    {"\<\"    \\\"Width\\\" -> 10,\"\>"},
    {"\<\"    \\\"Height\\\" -> 10,\"\>"},
    {"\<\"    \\\"Objects\\\" -> {\"\>"},
    {"\<\"        <|\"\>"},
    {"\<\"            \\\"UUID\\\" -> 0,\"\>"},
    {
     TemplateBox[{
       TemplateBox[{"\"            \"", 
         TemplateBox[{"\"\\\"Image\\\" -> \"", 
           TagBox[
            
            GridBox[{{"\"\"", "\"\"", "\"\""}, {"\"\"", "\"\"", "\"\""}}, 
             AutoDelete -> False, 
             GridBoxBackground -> {
              "Columns" -> {{None}}, "Rows" -> {{None}}, 
               "ItemsIndexed" -> {{1, 1} -> RGBColor[1, 0, 0], {1, 2} -> 
                 RGBColor[1, 0, 0], {1, 3} -> RGBColor[1, 0, 0], {2, 1} -> 
                 RGBColor[1, 0, 0], {2, 2} -> RGBColor[1, 0, 0], {2, 3} -> 
                 RGBColor[1, 0, 0]}}, 
             GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
             GridBoxFrame -> {
              "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}}, 
             GridBoxItemSize -> {"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}, 
             FrameStyle -> {
               AbsoluteThickness[1], 
               GrayLevel[0.5]}], "Grid"]}, "RowDefault"]}, "RowDefault"], 
       "\",\""},
      "RowDefault"]},
    {"\<\"            \\\"PixelPositions\\\" -> {{6, 2}, {6, 3}, {6, 4}, {7, \
2}, {7, 3}, {7, 4}},\"\>"},
    {"\<\"            \\\"Shapes\\\" -> {\"\>"},
    {
     TemplateBox[{
       TemplateBox[{"\"                \"", 
         TemplateBox[{"\"<|\\\"Image\\\" -> \"", 
           TagBox[
            
            GridBox[{{"\"\"", "\"\"", "\"\""}, {"\"\"", "\"\"", "\"\""}}, 
             AutoDelete -> False, 
             GridBoxBackground -> {
              "Columns" -> {{None}}, "Rows" -> {{None}}, 
               "ItemsIndexed" -> {{1, 1} -> RGBColor[1, 0, 0], {1, 2} -> 
                 RGBColor[1, 0, 0], {1, 3} -> RGBColor[1, 0, 0], {2, 1} -> 
                 RGBColor[1, 0, 0], {2, 2} -> RGBColor[1, 0, 0], {2, 3} -> 
                 RGBColor[1, 0, 0]}}, 
             GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
             GridBoxFrame -> {
              "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}}, 
             GridBoxItemSize -> {"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}, 
             FrameStyle -> {
               AbsoluteThickness[1], 
               GrayLevel[0.5]}], "Grid"], "\"|>\""}, "RowDefault"]}, 
        "RowDefault"], "\",\""},
      "RowDefault"]},
    {"\<\"                <|\"\>"},
    {
     TemplateBox[{
       TemplateBox[{"\"                    \"", 
         TemplateBox[{"\"\\\"Image\\\" -> \"", 
           TagBox[
            
            GridBox[{{"\"\"", "\"\""}, {"\"\"", "\"\""}, {"\"\"", "\"\""}}, 
             AutoDelete -> False, 
             GridBoxBackground -> {
              "Columns" -> {{None}}, "Rows" -> {{None}}, 
               "ItemsIndexed" -> {{1, 1} -> RGBColor[1, 0, 0], {1, 2} -> 
                 RGBColor[1, 0, 0], {2, 1} -> RGBColor[1, 0, 0], {2, 2} -> 
                 RGBColor[1, 0, 0], {3, 1} -> RGBColor[1, 0, 0], {3, 2} -> 
                 RGBColor[1, 0, 0]}}, 
             GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
             GridBoxFrame -> {
              "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}}, 
             GridBoxItemSize -> {"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}, 
             FrameStyle -> {
               AbsoluteThickness[1], 
               GrayLevel[0.5]}], "Grid"]}, "RowDefault"]}, "RowDefault"], 
       "\",\""},
      "RowDefault"]},
    {"\<\"                    \\\"Transform\\\" -> <|\\\"Type\\\" -> \
\\\"Rotation\\\", \\\"Angle\\\" -> 270|>\"\>"},
    {"\<\"                |>,\"\>"},
    {"\<\"                <|\"\>"},
    {
     TemplateBox[{
       TemplateBox[{"\"                    \"", 
         TemplateBox[{"\"\\\"Image\\\" -> \"", 
           TagBox[
            
            GridBox[{{"\"\"", "\"\""}, {"\"\"", "\"\""}, {"\"\"", "\"\""}}, 
             AutoDelete -> False, 
             GridBoxBackground -> {
              "Columns" -> {{None}}, "Rows" -> {{None}}, 
               "ItemsIndexed" -> {{1, 1} -> RGBColor[1, 0, 0], {1, 2} -> 
                 RGBColor[1, 0, 0], {2, 1} -> RGBColor[1, 0, 0], {2, 2} -> 
                 RGBColor[1, 0, 0], {3, 1} -> RGBColor[1, 0, 0], {3, 2} -> 
                 RGBColor[1, 0, 0]}}, 
             GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
             GridBoxFrame -> {
              "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}}, 
             GridBoxItemSize -> {"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}, 
             FrameStyle -> {
               AbsoluteThickness[1], 
               GrayLevel[0.5]}], "Grid"]}, "RowDefault"]}, "RowDefault"], 
       "\",\""},
      "RowDefault"]},
    {"\<\"                    \\\"Transform\\\" -> <|\\\"Type\\\" -> \
\\\"Rotation\\\", \\\"Angle\\\" -> 90|>\"\>"},
    {"\<\"                |>,\"\>"},
    {
     TemplateBox[{"\"                \"", 
       TagBox[
        TooltipBox[
         FrameBox["\"Rectangle\"", FrameStyle -> Directive[
            RGBColor[1, 0.5, 0.], "Thickness" -> 1], RoundingRadius -> 4, 
          Background -> RGBColor[1., 0.9803921568627451, 0.9215686274509803], 
          BaseStyle -> {
            RGBColor[0.4, 0.21, 0.06], "FontFamily" -> "Arial"}, 
          BaselinePosition -> Baseline, ContentPadding -> True, 
          FrameMargins -> {{5, 5}, {3, 3}}, StripOnInput -> False], 
         "\"<|\\\"Name\\\" -> \\\"Rectangle\\\"|>\"", TooltipDelay -> 0.4, 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "<|\"Name\" -> \"Rectangle\"|>", "Tooltip"]& ]},
      "RowDefault"]},
    {"\<\"            },\"\>"},
    {
     TemplateBox[{
       TemplateBox[{"\"            \"", 
         TemplateBox[{"\"\\\"Colors\\\" -> {\"", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{{
                 GrayLevel[0], 
                 RectangleBox[{0, 0}]}, {
                 GrayLevel[0], 
                 RectangleBox[{1, -1}]}, {
                 RGBColor[1, 0, 0], 
                 RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
               "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
               FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], FrameTicks -> 
               None, PlotRangePadding -> None, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
               False]], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
             Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
             With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 0, 0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
             Automatic, Method -> "Preemptive"], 
            RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
           "\"}\""}, "RowDefault"]}, "RowDefault"], "\",\""},
      "RowDefault"]},
    {"\<\"            \\\"Position\\\" -> {6, 2},\"\>"},
    {"\<\"            \\\"Width\\\" -> 3,\"\>"},
    {"\<\"            \\\"Height\\\" -> 2,\"\>"},
    {"\<\"            \\\"Y\\\" -> 6,\"\>"},
    {"\<\"            \\\"X\\\" -> 2,\"\>"},
    {"\<\"            \\\"AspectRatio\\\" -> 3/2,\"\>"},
    {"\<\"            \\\"Area\\\" -> 6,\"\>"},
    {"\<\"            \\\"FilledArea\\\" -> 6\"\>"},
    {"\<\"        |>,\"\>"},
    {"\<\"        <|\"\>"},
    {"\<\"            \\\"UUID\\\" -> 0,\"\>"},
    {
     TemplateBox[{
       TemplateBox[{"\"            \"", 
         TemplateBox[{"\"\\\"Image\\\" -> \"", 
           TagBox[
            
            GridBox[{{"\"\"", "\"\"", "\"\""}, {"\"\"", "\"\"", "\"\""}}, 
             AutoDelete -> False, 
             GridBoxBackground -> {
              "Columns" -> {{None}}, "Rows" -> {{None}}, 
               "ItemsIndexed" -> {{1, 1} -> RGBColor[0, 0, 1], {1, 2} -> 
                 RGBColor[0, 0, 1], {1, 3} -> RGBColor[0, 0, 1], {2, 1} -> 
                 RGBColor[0, 0, 1], {2, 2} -> RGBColor[0, 0, 1], {2, 3} -> 
                 RGBColor[0, 0, 1]}}, 
             GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
             GridBoxFrame -> {
              "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}}, 
             GridBoxItemSize -> {"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}, 
             FrameStyle -> {
               AbsoluteThickness[1], 
               GrayLevel[0.5]}], "Grid"]}, "RowDefault"]}, "RowDefault"], 
       "\",\""},
      "RowDefault"]},
    {"\<\"            \\\"PixelPositions\\\" -> {{6, 5}, {6, 6}, {6, 7}, {7, \
5}, {7, 6}, {7, 7}},\"\>"},
    {"\<\"            \\\"Shapes\\\" -> {\"\>"},
    {
     TemplateBox[{
       TemplateBox[{"\"                \"", 
         TemplateBox[{"\"<|\\\"Image\\\" -> \"", 
           TagBox[
            
            GridBox[{{"\"\"", "\"\"", "\"\""}, {"\"\"", "\"\"", "\"\""}}, 
             AutoDelete -> False, 
             GridBoxBackground -> {
              "Columns" -> {{None}}, "Rows" -> {{None}}, 
               "ItemsIndexed" -> {{1, 1} -> RGBColor[0, 0, 1], {1, 2} -> 
                 RGBColor[0, 0, 1], {1, 3} -> RGBColor[0, 0, 1], {2, 1} -> 
                 RGBColor[0, 0, 1], {2, 2} -> RGBColor[0, 0, 1], {2, 3} -> 
                 RGBColor[0, 0, 1]}}, 
             GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
             GridBoxFrame -> {
              "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}}, 
             GridBoxItemSize -> {"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}, 
             FrameStyle -> {
               AbsoluteThickness[1], 
               GrayLevel[0.5]}], "Grid"], "\"|>\""}, "RowDefault"]}, 
        "RowDefault"], "\",\""},
      "RowDefault"]},
    {"\<\"                <|\"\>"},
    {
     TemplateBox[{
       TemplateBox[{"\"                    \"", 
         TemplateBox[{"\"\\\"Image\\\" -> \"", 
           TagBox[
            
            GridBox[{{"\"\"", "\"\""}, {"\"\"", "\"\""}, {"\"\"", "\"\""}}, 
             AutoDelete -> False, 
             GridBoxBackground -> {
              "Columns" -> {{None}}, "Rows" -> {{None}}, 
               "ItemsIndexed" -> {{1, 1} -> RGBColor[0, 0, 1], {1, 2} -> 
                 RGBColor[0, 0, 1], {2, 1} -> RGBColor[0, 0, 1], {2, 2} -> 
                 RGBColor[0, 0, 1], {3, 1} -> RGBColor[0, 0, 1], {3, 2} -> 
                 RGBColor[0, 0, 1]}}, 
             GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
             GridBoxFrame -> {
              "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}}, 
             GridBoxItemSize -> {"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}, 
             FrameStyle -> {
               AbsoluteThickness[1], 
               GrayLevel[0.5]}], "Grid"]}, "RowDefault"]}, "RowDefault"], 
       "\",\""},
      "RowDefault"]},
    {"\<\"                    \\\"Transform\\\" -> <|\\\"Type\\\" -> \
\\\"Rotation\\\", \\\"Angle\\\" -> 270|>\"\>"},
    {"\<\"                |>,\"\>"},
    {"\<\"                <|\"\>"},
    {
     TemplateBox[{
       TemplateBox[{"\"                    \"", 
         TemplateBox[{"\"\\\"Image\\\" -> \"", 
           TagBox[
            
            GridBox[{{"\"\"", "\"\""}, {"\"\"", "\"\""}, {"\"\"", "\"\""}}, 
             AutoDelete -> False, 
             GridBoxBackground -> {
              "Columns" -> {{None}}, "Rows" -> {{None}}, 
               "ItemsIndexed" -> {{1, 1} -> RGBColor[0, 0, 1], {1, 2} -> 
                 RGBColor[0, 0, 1], {2, 1} -> RGBColor[0, 0, 1], {2, 2} -> 
                 RGBColor[0, 0, 1], {3, 1} -> RGBColor[0, 0, 1], {3, 2} -> 
                 RGBColor[0, 0, 1]}}, 
             GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
             GridBoxFrame -> {
              "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}}, 
             GridBoxItemSize -> {"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}, 
             FrameStyle -> {
               AbsoluteThickness[1], 
               GrayLevel[0.5]}], "Grid"]}, "RowDefault"]}, "RowDefault"], 
       "\",\""},
      "RowDefault"]},
    {"\<\"                    \\\"Transform\\\" -> <|\\\"Type\\\" -> \
\\\"Rotation\\\", \\\"Angle\\\" -> 90|>\"\>"},
    {"\<\"                |>,\"\>"},
    {
     TemplateBox[{"\"                \"", 
       TagBox[
        TooltipBox[
         FrameBox["\"Rectangle\"", FrameStyle -> Directive[
            RGBColor[1, 0.5, 0.], "Thickness" -> 1], RoundingRadius -> 4, 
          Background -> RGBColor[1., 0.9803921568627451, 0.9215686274509803], 
          BaseStyle -> {
            RGBColor[0.4, 0.21, 0.06], "FontFamily" -> "Arial"}, 
          BaselinePosition -> Baseline, ContentPadding -> True, 
          FrameMargins -> {{5, 5}, {3, 3}}, StripOnInput -> False], 
         "\"<|\\\"Name\\\" -> \\\"Rectangle\\\"|>\"", TooltipDelay -> 0.4, 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "<|\"Name\" -> \"Rectangle\"|>", "Tooltip"]& ]},
      "RowDefault"]},
    {"\<\"            },\"\>"},
    {
     TemplateBox[{
       TemplateBox[{"\"            \"", 
         TemplateBox[{"\"\\\"Colors\\\" -> {\"", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{{
                 GrayLevel[0], 
                 RectangleBox[{0, 0}]}, {
                 GrayLevel[0], 
                 RectangleBox[{1, -1}]}, {
                 RGBColor[0, 0, 1], 
                 RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
               "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
               FrameStyle -> RGBColor[0., 0., 0.6666666666666666], FrameTicks -> 
               None, PlotRangePadding -> None, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
               False]], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
             Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
             With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0, 0, 1]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
             Automatic, Method -> "Preemptive"], 
            RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
           "\"}\""}, "RowDefault"]}, "RowDefault"], "\",\""},
      "RowDefault"]},
    {"\<\"            \\\"Position\\\" -> {6, 5},\"\>"},
    {"\<\"            \\\"Width\\\" -> 3,\"\>"},
    {"\<\"            \\\"Height\\\" -> 2,\"\>"},
    {"\<\"            \\\"Y\\\" -> 6,\"\>"},
    {"\<\"            \\\"X\\\" -> 5,\"\>"},
    {"\<\"            \\\"AspectRatio\\\" -> 3/2,\"\>"},
    {"\<\"            \\\"Area\\\" -> 6,\"\>"},
    {"\<\"            \\\"FilledArea\\\" -> 6\"\>"},
    {"\<\"        |>,\"\>"},
    {"\<\"        <|\"\>"},
    {"\<\"            \\\"UUID\\\" -> 0,\"\>"},
    {
     TemplateBox[{
       TemplateBox[{"\"            \"", 
         TemplateBox[{"\"\\\"Image\\\" -> \"", 
           TagBox[
            
            GridBox[{{"\"\"", "\"\"", "\"\""}, {"\"\"", "\"\"", "\"\""}}, 
             AutoDelete -> False, 
             GridBoxBackground -> {
              "Columns" -> {{None}}, "Rows" -> {{None}}, 
               "ItemsIndexed" -> {{1, 1} -> RGBColor[1, 1, 0], {1, 2} -> 
                 RGBColor[1, 1, 0], {1, 3} -> RGBColor[1, 1, 0], {2, 1} -> 
                 RGBColor[1, 1, 0], {2, 2} -> RGBColor[1, 1, 0], {2, 3} -> 
                 RGBColor[1, 1, 0]}}, 
             GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
             GridBoxFrame -> {
              "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}}, 
             GridBoxItemSize -> {"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}, 
             FrameStyle -> {
               AbsoluteThickness[1], 
               GrayLevel[0.5]}], "Grid"]}, "RowDefault"]}, "RowDefault"], 
       "\",\""},
      "RowDefault"]},
    {"\<\"            \\\"PixelPositions\\\" -> {{6, 8}, {6, 9}, {6, 10}, {7, \
8}, {7, 9}, {7, 10}},\"\>"},
    {"\<\"            \\\"Shapes\\\" -> {\"\>"},
    {
     TemplateBox[{
       TemplateBox[{"\"                \"", 
         TemplateBox[{"\"<|\\\"Image\\\" -> \"", 
           TagBox[
            
            GridBox[{{"\"\"", "\"\"", "\"\""}, {"\"\"", "\"\"", "\"\""}}, 
             AutoDelete -> False, 
             GridBoxBackground -> {
              "Columns" -> {{None}}, "Rows" -> {{None}}, 
               "ItemsIndexed" -> {{1, 1} -> RGBColor[1, 1, 0], {1, 2} -> 
                 RGBColor[1, 1, 0], {1, 3} -> RGBColor[1, 1, 0], {2, 1} -> 
                 RGBColor[1, 1, 0], {2, 2} -> RGBColor[1, 1, 0], {2, 3} -> 
                 RGBColor[1, 1, 0]}}, 
             GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
             GridBoxFrame -> {
              "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}}, 
             GridBoxItemSize -> {"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}, 
             FrameStyle -> {
               AbsoluteThickness[1], 
               GrayLevel[0.5]}], "Grid"], "\"|>\""}, "RowDefault"]}, 
        "RowDefault"], "\",\""},
      "RowDefault"]},
    {"\<\"                <|\"\>"},
    {
     TemplateBox[{
       TemplateBox[{"\"                    \"", 
         TemplateBox[{"\"\\\"Image\\\" -> \"", 
           TagBox[
            
            GridBox[{{"\"\"", "\"\""}, {"\"\"", "\"\""}, {"\"\"", "\"\""}}, 
             AutoDelete -> False, 
             GridBoxBackground -> {
              "Columns" -> {{None}}, "Rows" -> {{None}}, 
               "ItemsIndexed" -> {{1, 1} -> RGBColor[1, 1, 0], {1, 2} -> 
                 RGBColor[1, 1, 0], {2, 1} -> RGBColor[1, 1, 0], {2, 2} -> 
                 RGBColor[1, 1, 0], {3, 1} -> RGBColor[1, 1, 0], {3, 2} -> 
                 RGBColor[1, 1, 0]}}, 
             GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
             GridBoxFrame -> {
              "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}}, 
             GridBoxItemSize -> {"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}, 
             FrameStyle -> {
               AbsoluteThickness[1], 
               GrayLevel[0.5]}], "Grid"]}, "RowDefault"]}, "RowDefault"], 
       "\",\""},
      "RowDefault"]},
    {"\<\"                    \\\"Transform\\\" -> <|\\\"Type\\\" -> \
\\\"Rotation\\\", \\\"Angle\\\" -> 270|>\"\>"},
    {"\<\"                |>,\"\>"},
    {"\<\"                <|\"\>"},
    {
     TemplateBox[{
       TemplateBox[{"\"                    \"", 
         TemplateBox[{"\"\\\"Image\\\" -> \"", 
           TagBox[
            
            GridBox[{{"\"\"", "\"\""}, {"\"\"", "\"\""}, {"\"\"", "\"\""}}, 
             AutoDelete -> False, 
             GridBoxBackground -> {
              "Columns" -> {{None}}, "Rows" -> {{None}}, 
               "ItemsIndexed" -> {{1, 1} -> RGBColor[1, 1, 0], {1, 2} -> 
                 RGBColor[1, 1, 0], {2, 1} -> RGBColor[1, 1, 0], {2, 2} -> 
                 RGBColor[1, 1, 0], {3, 1} -> RGBColor[1, 1, 0], {3, 2} -> 
                 RGBColor[1, 1, 0]}}, 
             GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
             GridBoxFrame -> {
              "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}}, 
             GridBoxItemSize -> {"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}, 
             FrameStyle -> {
               AbsoluteThickness[1], 
               GrayLevel[0.5]}], "Grid"]}, "RowDefault"]}, "RowDefault"], 
       "\",\""},
      "RowDefault"]},
    {"\<\"                    \\\"Transform\\\" -> <|\\\"Type\\\" -> \
\\\"Rotation\\\", \\\"Angle\\\" -> 90|>\"\>"},
    {"\<\"                |>,\"\>"},
    {
     TemplateBox[{"\"                \"", 
       TagBox[
        TooltipBox[
         FrameBox["\"Rectangle\"", FrameStyle -> Directive[
            RGBColor[1, 0.5, 0.], "Thickness" -> 1], RoundingRadius -> 4, 
          Background -> RGBColor[1., 0.9803921568627451, 0.9215686274509803], 
          BaseStyle -> {
            RGBColor[0.4, 0.21, 0.06], "FontFamily" -> "Arial"}, 
          BaselinePosition -> Baseline, ContentPadding -> True, 
          FrameMargins -> {{5, 5}, {3, 3}}, StripOnInput -> False], 
         "\"<|\\\"Name\\\" -> \\\"Rectangle\\\"|>\"", TooltipDelay -> 0.4, 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "<|\"Name\" -> \"Rectangle\"|>", "Tooltip"]& ]},
      "RowDefault"]},
    {"\<\"            },\"\>"},
    {
     TemplateBox[{
       TemplateBox[{"\"            \"", 
         TemplateBox[{"\"\\\"Colors\\\" -> {\"", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{{
                 GrayLevel[0], 
                 RectangleBox[{0, 0}]}, {
                 GrayLevel[0], 
                 RectangleBox[{1, -1}]}, {
                 RGBColor[1, 1, 0], 
                 RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
               "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
               FrameStyle -> 
               RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
               FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 RowBox[{"1", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
               False]], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
             Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
             With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 1, 0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
             Automatic, Method -> "Preemptive"], 
            RGBColor[1, 1, 0], Editable -> False, Selectable -> False], 
           "\"}\""}, "RowDefault"]}, "RowDefault"], "\",\""},
      "RowDefault"]},
    {"\<\"            \\\"Position\\\" -> {6, 8},\"\>"},
    {"\<\"            \\\"Width\\\" -> 3,\"\>"},
    {"\<\"            \\\"Height\\\" -> 2,\"\>"},
    {"\<\"            \\\"Y\\\" -> 6,\"\>"},
    {"\<\"            \\\"X\\\" -> 8,\"\>"},
    {"\<\"            \\\"AspectRatio\\\" -> 3/2,\"\>"},
    {"\<\"            \\\"Area\\\" -> 6,\"\>"},
    {"\<\"            \\\"FilledArea\\\" -> 6\"\>"},
    {"\<\"        |>\"\>"},
    {"\<\"    },\"\>"},
    {
     TemplateBox[{"\"    \\\"Scene\\\" -> \"", 
       TagBox[
        GridBox[{{
          "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", 
           "\"\"", "\"\""}, {
          "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", 
           "\"\"", "\"\""}, {
          "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", 
           "\"\"", "\"\""}, {
          "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", 
           "\"\"", "\"\""}, {
          "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", 
           "\"\"", "\"\""}, {
          "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", 
           "\"\"", "\"\""}, {
          "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", 
           "\"\"", "\"\""}, {
          "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", 
           "\"\"", "\"\""}, {
          "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", 
           "\"\"", "\"\""}, {
          "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", 
           "\"\"", "\"\""}}, AutoDelete -> False, 
         GridBoxBackground -> {
          "Columns" -> {{None}}, "Rows" -> {{None}}, 
           "ItemsIndexed" -> {{1, 1} -> GrayLevel[0], {1, 2} -> 
             GrayLevel[0], {1, 3} -> GrayLevel[0], {1, 4} -> 
             GrayLevel[0], {1, 5} -> GrayLevel[0], {1, 6} -> 
             GrayLevel[0], {1, 7} -> GrayLevel[0], {1, 8} -> 
             GrayLevel[0], {1, 9} -> GrayLevel[0], {1, 10} -> 
             GrayLevel[0], {2, 1} -> GrayLevel[0], {2, 2} -> 
             GrayLevel[0], {2, 3} -> GrayLevel[0], {2, 4} -> 
             GrayLevel[0], {2, 5} -> GrayLevel[0], {2, 6} -> 
             GrayLevel[0], {2, 7} -> GrayLevel[0], {2, 8} -> 
             GrayLevel[0], {2, 9} -> GrayLevel[0], {2, 10} -> 
             GrayLevel[0], {3, 1} -> GrayLevel[0], {3, 2} -> 
             GrayLevel[0], {3, 3} -> GrayLevel[0], {3, 4} -> 
             GrayLevel[0], {3, 5} -> GrayLevel[0], {3, 6} -> 
             GrayLevel[0], {3, 7} -> GrayLevel[0], {3, 8} -> 
             GrayLevel[0], {3, 9} -> GrayLevel[0], {3, 10} -> 
             GrayLevel[0], {4, 1} -> GrayLevel[0], {4, 2} -> 
             GrayLevel[0], {4, 3} -> GrayLevel[0], {4, 4} -> 
             GrayLevel[0], {4, 5} -> GrayLevel[0], {4, 6} -> 
             GrayLevel[0], {4, 7} -> GrayLevel[0], {4, 8} -> 
             GrayLevel[0], {4, 9} -> GrayLevel[0], {4, 10} -> 
             GrayLevel[0], {5, 1} -> GrayLevel[0], {5, 2} -> 
             GrayLevel[0], {5, 3} -> GrayLevel[0], {5, 4} -> 
             GrayLevel[0], {5, 5} -> GrayLevel[0], {5, 6} -> 
             GrayLevel[0], {5, 7} -> GrayLevel[0], {5, 8} -> 
             GrayLevel[0], {5, 9} -> GrayLevel[0], {5, 10} -> 
             GrayLevel[0], {6, 1} -> GrayLevel[0], {6, 2} -> 
             RGBColor[1, 0, 0], {6, 3} -> RGBColor[1, 0, 0], {6, 4} -> 
             RGBColor[1, 0, 0], {6, 5} -> RGBColor[0, 0, 1], {6, 6} -> 
             RGBColor[0, 0, 1], {6, 7} -> RGBColor[0, 0, 1], {6, 8} -> 
             RGBColor[1, 1, 0], {6, 9} -> RGBColor[1, 1, 0], {6, 10} -> 
             RGBColor[1, 1, 0], {7, 1} -> GrayLevel[0], {7, 2} -> 
             RGBColor[1, 0, 0], {7, 3} -> RGBColor[1, 0, 0], {7, 4} -> 
             RGBColor[1, 0, 0], {7, 5} -> RGBColor[0, 0, 1], {7, 6} -> 
             RGBColor[0, 0, 1], {7, 7} -> RGBColor[0, 0, 1], {7, 8} -> 
             RGBColor[1, 1, 0], {7, 9} -> RGBColor[1, 1, 0], {7, 10} -> 
             RGBColor[1, 1, 0], {8, 1} -> GrayLevel[0], {8, 2} -> 
             GrayLevel[0], {8, 3} -> GrayLevel[0], {8, 4} -> 
             GrayLevel[0], {8, 5} -> GrayLevel[0], {8, 6} -> 
             GrayLevel[0], {8, 7} -> GrayLevel[0], {8, 8} -> 
             GrayLevel[0], {8, 9} -> GrayLevel[0], {8, 10} -> 
             GrayLevel[0], {9, 1} -> GrayLevel[0], {9, 2} -> 
             GrayLevel[0], {9, 3} -> GrayLevel[0], {9, 4} -> 
             GrayLevel[0], {9, 5} -> GrayLevel[0], {9, 6} -> 
             GrayLevel[0], {9, 7} -> GrayLevel[0], {9, 8} -> 
             GrayLevel[0], {9, 9} -> GrayLevel[0], {9, 10} -> 
             GrayLevel[0], {10, 1} -> GrayLevel[0], {10, 2} -> 
             GrayLevel[0], {10, 3} -> GrayLevel[0], {10, 4} -> 
             GrayLevel[0], {10, 5} -> GrayLevel[0], {10, 6} -> 
             GrayLevel[0], {10, 7} -> GrayLevel[0], {10, 8} -> 
             GrayLevel[0], {10, 9} -> GrayLevel[0], {10, 10} -> 
             GrayLevel[0]}}, 
         GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
         GridBoxFrame -> {"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}}, 
         GridBoxItemSize -> {"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}, 
         FrameStyle -> {
           AbsoluteThickness[1], 
           GrayLevel[0.5]}], "Grid"]},
      "RowDefault"]},
    {"\<\"|>\"\>"}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.867660330255331*^9, 3.8676603347409153`*^9}, 
   3.8676603749898453`*^9, 3.8676604067905097`*^9, {3.8676604752349625`*^9, 
   3.8676604977825975`*^9}, 3.867660542214919*^9, 3.8676606204480257`*^9, {
   3.867660759960071*^9, 3.867660774315366*^9}, {3.867661070208366*^9, 
   3.8676610829624796`*^9}, 3.8676611244796977`*^9, 3.8676612241648626`*^9, {
   3.867674770358487*^9, 3.8676748053412995`*^9}, {3.86767484920018*^9, 
   3.867674855601761*^9}, {3.8676749709058867`*^9, 3.8676750112125864`*^9}, {
   3.867675056100377*^9, 3.867675171900955*^9}, {3.867675239762702*^9, 
   3.867675254737341*^9}, 3.867739461877839*^9},
 CellLabel->
  "Out[497]=",ExpressionUUID->"73982709-fe40-4661-9cb4-21a348d92062"]
}, Closed]],

Cell[CellGroupData[{

Cell["Do Form Composite Objects", "Subsection",
 CellChangeTimes->{{3.8676756403132706`*^9, 
  3.8676756432889395`*^9}},ExpressionUUID->"770f2705-951a-4dd7-bf3a-\
d2f0edf01af7"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCParseInputAndOutputScenes-20220724-1VOP6G", 
              Daniel`ARC`ARCParseInputAndOutputScenes, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272414254263942], 7949202]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> 
            "ARCParseInputAndOutputScenes-20220724-1VOP6G"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCParseInputAndOutputScenes-20220724-1VOP6G", 
            Daniel`ARC`ARCParseInputAndOutputScenes, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272414254263942], "CellID" -> 7949202, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCParseInputAndOutputScenes-20220724-1VOP6G", 
           Daniel`ARC`ARCParseInputAndOutputScenes, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272414254263942], None], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCParseInputAndOutputScenes-20220724-1VOP6G"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272414254263942; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272414254263942], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272414254263942 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272414254263942 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272414254263942, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272414254263942 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{833., {21., 27.}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272414254263942}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.8676759425258236`*^9},ExpressionUUID->"a1534335-4e0e-42f6-9b5f-\
81725c3dd9eb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"NormalizeOutput", "@", "\n", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"parsedFile", " ", "=", " ", 
        RowBox[{"ARCParseFile", "[", "\"\<0ca9ddb6\>\"", "]"}]}], "}"}], ",", 
      "\n", "\t", 
      RowBox[{"ARCParseInputAndOutputScenes", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"parsedFile", "[", 
         RowBox[{"\"\<Train\>\"", ",", " ", "1", ",", " ", "\"\<Input\>\""}], 
         "]"}], ",", "\n", "\t\t", 
        RowBox[{"parsedFile", "[", 
         RowBox[{"\"\<Train\>\"", ",", " ", "1", ",", " ", "\"\<Output\>\""}],
          "]"}]}], "\n", "\t", "]"}]}], "\n", "]"}], "[", 
    RowBox[{"\"\<Output\>\"", ",", " ", "\"\<Objects\>\""}], "]"}]}], " ", "//",
   " ", "Length"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.8676599968580103`*^9, 3.8676600038775225`*^9}, {
   3.8676603319044876`*^9, 3.8676603334424877`*^9}, {3.8676603969312525`*^9, 
   3.8676604060286517`*^9}, {3.8676715782599463`*^9, 3.8676716009197626`*^9}, 
   3.8676748550232105`*^9, {3.8676749735566044`*^9, 3.867674980496083*^9}, {
   3.8676750577884054`*^9, 3.867675058906502*^9}, {3.867675241485143*^9, 
   3.867675256450431*^9}, {3.867675651765293*^9, 3.8676756571530724`*^9}, {
   3.867675824477395*^9, 3.867675853632058*^9}, {3.8676759199848394`*^9, 
   3.8676759390036736`*^9}},
 CellLabel->"In[790]:=",
 CellID->7949202,
 "TestId" -> 
 "ARCParseInputAndOutputScenes-20220724-1VOP6G",ExpressionUUID->"4b61f4d9-\
d99e-4f93-acee-883ac3d65b62"]
}, Open  ]],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{
  3.8676756580733123`*^9, {3.8676758161653767`*^9, 3.867675855122063*^9}, {
   3.867675909112696*^9, 3.867675939459463*^9}},
 CellLabel->
  "Out[791]=",ExpressionUUID->"f735837e-575c-4105-b360-8e3aaf26f705"]
}, Closed]]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Local",
WindowSize->{958, 980},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
Visible->True,
DockedCells->{
  Cell[
   BoxData[
    DynamicBox[
     ToBoxes[
      Column[{
        Row[{
          Button["New Test", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`NewFunctionCell[
            Daniel`ARC`ARCParseInputAndOutputScenes], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227249585237853]], ImageSize -> {95., 40}, 
           Method -> "Queued"], " ", 
          Button["Add Tests to File", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`CreateUnitTests[
            Daniel`ARC`ARCParseInputAndOutputScenes, "SubTest" -> None], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227249585237853]], ImageSize -> {162.5, 40}, 
           Method -> "Queued"], " ", 
          Button[
          "Run Tests", 
           DevTools`TestingTools`RunUnitTestsInNotebook[
            Daniel`ARC`ARCParseInputAndOutputScenes]; Null, 
           ImageSize -> {102.5, 40}, Method -> "Queued"], " ", 
          Button["Edit Tests", 
           DevTools`TestingTools`EditUnitTests[
           Daniel`ARC`ARCParseInputAndOutputScenes], ImageSize -> {110., 40}, 
           Method -> "Queued"], " ", 
          Button["Edit Function", 
           DevTools`SourceTools`EditFunction[
           Daniel`ARC`ARCParseInputAndOutputScenes], ImageSize -> {132.5, 40},
            Method -> "Queued"], " ", 
          Row[{
            
            DynamicModule[{
             DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
              "Capture"}, 
             Button[
              Dynamic[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel], 
              If[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel === 
               "Capture", 
               DevTools`TestingTools`FunctionCapture`EnableFunctionCapture[
                Daniel`ARC`ARCParseInputAndOutputScenes]; 
               DevTools`TestingTools`FunctionCapture`\
RegisterFunctionCaptureNotebook[Daniel`ARC`ARCParseInputAndOutputScenes, 
                 InputNotebook[]]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Release"; Null, 
               DevTools`TestingTools`FunctionCapture`DisableFunctionCapture[
                Daniel`ARC`ARCParseInputAndOutputScenes]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Capture"; Null], ImageSize -> {100, 40}, Method -> "Queued"],
              DynamicModuleValues :> {}], 
            Button["?", 
             DevTools`TestingTools`FunctionCapture`CaptureFunctionHelp[], 
             ImageSize -> {30, 40}, Method -> "Queued"]}], " ", 
          Row[{
            Button["<", 
             DevTools`NotebookTools`MoveNotebook["Left"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"], 
            Button[">", 
             DevTools`NotebookTools`MoveNotebook["Right"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"]}]}], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227249585237853; If[
          And[
           ValueQ[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227249585237853], 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227249585237853 =!= "", 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227249585237853 =!= Null], 
          (If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {"MaxHeight" -> 300},
              "NakedSection"]], 
           Framed[#, FrameStyle -> None, FrameMargins -> 2], 
           
           Framed[#, FrameStyle -> LightGray, Background -> White, 
            FrameMargins -> 15]]& )[
           Grid[{{
              Pane[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227249585237853, "ImageSize" -> {Full, {0, 
                  OptionValue[
                  DevTools`NotebookTools`DynamicOutputSection, {
                   "MaxHeight" -> 300}, "MaxHeight"]}}, Scrollbars -> 
               Automatic, FrameMargins -> 0]}, 
             If[
              TrueQ[
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {
                "MaxHeight" -> 300}, "NakedSection"]], 
              Apply[Sequence, {}], {
               Button[
               "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227249585237853 = "", 
                ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
            Alignment -> {Left, Top}]], 
          Apply[Sequence, {}]]}], StandardForm], 
     TrackedSymbols :> {
      DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227249585237853}]], "DockedCell"]},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, 
  "CreateNamedNotebook2Args" -> {
   "ARCParseInputAndOutputScenes", "Type" -> "Function", 
    "GenerateNotebookArgs" -> {
     "Function" -> Daniel`ARC`ARCParseInputAndOutputScenes}, "ReturnNotebook" -> 
    True}},
InputAutoReplacements->{},
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"f763e9b6-0771-4501-b16b-e53bc0891264"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 100, 0, 96, "Title",ExpressionUUID->"ec34be9a-8a25-4293-9092-96a582d2098c"],
Cell[683, 24, 263, 6, 53, "Code",ExpressionUUID->"38230fcb-7890-4e9a-92ab-0a54efd43ac5",
 InitializationCell->False],
Cell[CellGroupData[{
Cell[971, 34, 156, 3, 67, "Section",ExpressionUUID->"6d18cc76-ba3f-4eff-b8c1-e818db7731d1"],
Cell[1130, 39, 234, 4, 28, "Input",ExpressionUUID->"49e8054a-77be-4559-ae5b-5f8483706e82"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1401, 48, 79, 0, 67, "Section",ExpressionUUID->"0bf7bbb1-ad76-4399-8859-47470191f27a"],
Cell[CellGroupData[{
Cell[1505, 52, 179, 3, 53, "Subsection",ExpressionUUID->"0be1cfd9-4ffa-4b0d-a1a7-e8941118170c"],
Cell[1687, 57, 362, 7, 56, "Text",ExpressionUUID->"e02058b5-226a-493a-9668-909f8b523d84"],
Cell[CellGroupData[{
Cell[2074, 68, 3650, 85, 50, "TestUI",ExpressionUUID->"9615601b-e0ce-4ef8-bd75-35570dca0927",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[5727, 155, 1471, 33, 161, "Code",ExpressionUUID->"abddee79-3c70-4d43-aa8e-164f6b26b530",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->69909409]
}, Open  ]],
Cell[7213, 191, 30746, 637, 2368, "Output",ExpressionUUID->"73982709-fe40-4661-9cb4-21a348d92062"]
}, Closed]],
Cell[CellGroupData[{
Cell[37996, 833, 177, 3, 37, "Subsection",ExpressionUUID->"770f2705-951a-4dd7-bf3a-d2f0edf01af7"],
Cell[CellGroupData[{
Cell[38198, 840, 3650, 85, 50, "TestUI",ExpressionUUID->"a1534335-4e0e-42f6-9b5f-81725c3dd9eb",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[41851, 927, 1661, 36, 161, "Code",ExpressionUUID->"4b61f4d9-d99e-4f93-acee-883ac3d65b62",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->7949202]
}, Open  ]],
Cell[43527, 966, 256, 5, 32, "Output",ExpressionUUID->"f735837e-575c-4105-b360-8e3aaf26f705"]
}, Closed]]
}, Open  ]]
}, Open  ]]
}
]
*)

