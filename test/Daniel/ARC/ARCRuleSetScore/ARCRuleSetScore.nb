(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     62427,       1523]
NotebookOptionsPosition[     52029,       1293]
NotebookOutlinePosition[     57530,       1429]
CellTagsIndexPosition[     57487,       1426]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ARCRuleSetScore", "Title",ExpressionUUID->"be670639-f448-4724-bea1-9c592abb1cbd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"RunUnitTests", "[", "ARCRuleSetScore", "]"}]}], "Code",
 InitializationCell->False,
 CellLabel->
  "In[182]:=",ExpressionUUID->"bd0f3d8a-0559-42ef-ba5d-86ed43a5436f"],

Cell[CellGroupData[{

Cell["Tests", "Section",ExpressionUUID->"41e1f2ed-1a30-404e-8420-1feb250aadc0"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCRuleSetScore-20220825-YKR23C", Daniel`ARC`ARCRuleSetScore, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022825214920419702], 32115454]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> "ARCRuleSetScore-20220825-YKR23C"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCRuleSetScore-20220825-YKR23C", Daniel`ARC`ARCRuleSetScore, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022825214920419702], "CellID" -> 32115454, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCRuleSetScore-20220825-YKR23C", Daniel`ARC`ARCRuleSetScore, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022825214920419702], None], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCRuleSetScore-20220825-YKR23C"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022825214920419702; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022825214920419702], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022825214920419702 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022825214920419702 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022825214920419702, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022825214920419702 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{840., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022825214920419702}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.870467359916805*^9},ExpressionUUID->"ec331b8b-6eb9-4558-b60a-\
cee3108beeb8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"ARCRuleSetScore", "[", "\n", "\t", 
  RowBox[{"{", "\n", "\t\t", 
   RowBox[{
    RowBox[{
     RowBox[{"<|", 
      RowBox[{"\"\<Color\>\"", " ", "->", " ", "1"}], "|>"}], " ", "->", " ", 
     
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<X\>\"", " ", "->", " ", "1"}], ",", " ", 
       RowBox[{"\"\<Examples\>\"", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{"1", ",", " ", "2", ",", " ", "3"}], "}"}]}]}], "|>"}]}], 
    ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{"\"\<Color\>\"", " ", "->", " ", "2"}], "|>"}], " ", "->", " ", 
     
     RowBox[{"<|", 
      RowBox[{"\"\<X\>\"", " ", "->", " ", "2"}], "|>"}]}]}], "\n", "\t", 
   "}"}], "\n", "]"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.870467319505377*^9, 3.8704673599178047`*^9}, {
  3.8712094051427865`*^9, 3.8712094102768984`*^9}},
 CellLabel->"In[178]:=",
 CellID->32115454,
 "TestId" -> 
 "ARCRuleSetScore-20220825-YKR23C",ExpressionUUID->"5018e903-4b59-4cf6-a625-\
90028acd09e0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"-", "0.3786104442449456`"}]], "Output",
 CellChangeTimes->{{3.8704673390656195`*^9, 3.8704673534558024`*^9}, 
   3.8705088307617083`*^9, {3.8705102559856777`*^9, 3.8705102723796206`*^9}, 
   3.8705103828327007`*^9, {3.870510419962258*^9, 3.8705104258947678`*^9}, 
   3.8705177109149165`*^9, 3.8706361161496267`*^9, 3.871208181643108*^9, 
   3.871209411933025*^9, 3.871209556148205*^9, 3.8752922230055494`*^9},
 CellLabel->
  "Out[179]=",ExpressionUUID->"33e56ca3-b225-4192-91ec-1bbb15bcec6c"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCRuleSetScore-20220826-6EL1X5", Daniel`ARC`ARCRuleSetScore, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202282692052448535], 20161153]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> "ARCRuleSetScore-20220826-6EL1X5"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCRuleSetScore-20220826-6EL1X5", Daniel`ARC`ARCRuleSetScore, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202282692052448535], "CellID" -> 20161153, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCRuleSetScore-20220826-6EL1X5", Daniel`ARC`ARCRuleSetScore, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202282692052448535], None], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCRuleSetScore-20220826-6EL1X5"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202282692052448535; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202282692052448535], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202282692052448535 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202282692052448535 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202282692052448535, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202282692052448535 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{840., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202282692052448535}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.8705088517724404`*^9},ExpressionUUID->"475da004-3b39-46ad-a3bf-\
28fb5c844916"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"ARCRuleSetScore", "[", "\n", "\t", 
  RowBox[{"{", "\n", "\t\t", 
   RowBox[{
    RowBox[{
     RowBox[{"<|", 
      RowBox[{"\"\<X\>\"", " ", "->", " ", "1"}], "|>"}], " ", "->", " ", 
     RowBox[{"<|", 
      RowBox[{"\"\<Color\>\"", " ", "->", " ", "1"}], "|>"}]}], ",", "\n", 
    "\t\t", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{"\"\<X\>\"", " ", "->", " ", "2"}], "|>"}], " ", "->", " ", 
     RowBox[{"<|", 
      RowBox[{"\"\<Color\>\"", " ", "->", " ", "2"}], "|>"}]}]}], "\n", "\t", 
   "}"}], "\n", "]"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.870467319505377*^9, 3.8704673599178047`*^9}, {
  3.8705088411873155`*^9, 3.8705088492706766`*^9}},
 CellLabel->"In[244]:=",
 CellID->20161153,
 "TestId" -> 
 "ARCRuleSetScore-20220826-6EL1X5",ExpressionUUID->"54aa359b-053b-4a5c-a1e0-\
85582a094130"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"-", "1.0268398122394748`"}]], "Output",
 CellChangeTimes->{
  3.8705088497013826`*^9, {3.870510258981043*^9, 3.870510262582797*^9}, 
   3.8705104278380575`*^9, 3.870517711891751*^9, 3.8706361185463963`*^9, 
   3.871208183072242*^9, 3.871209556942175*^9},
 CellLabel->
  "Out[245]=",ExpressionUUID->"79bda823-963c-4de6-af1c-93f9d5c21228"],

Cell[CellGroupData[{

Cell["Regression Test", "Subsection",
 CellChangeTimes->{{3.8739675085346437`*^9, 
  3.87396750987175*^9}},ExpressionUUID->"d1f57bba-f29a-4ac0-8c9c-\
629259c5206e"],

Cell[BoxData[
 RowBox[{"Lui", "[", "\"\<6e02f1e3\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.873968336026647*^9, 
  3.8739683372440414`*^9}},ExpressionUUID->"7c59e372-b92b-4cdf-9640-\
995f36649f3b"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCRuleSetScore-20221005-WC2JWK", Daniel`ARC`ARCRuleSetScore, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221051051178110], 41129270, "SubTest" -> None]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> "ARCRuleSetScore-20221005-WC2JWK"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCRuleSetScore-20221005-WC2JWK", Daniel`ARC`ARCRuleSetScore, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221051051178110], "CellID" -> 41129270, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCRuleSetScore-20221005-WC2JWK", Daniel`ARC`ARCRuleSetScore, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221051051178110], 
           Utility`FilterOptions[
           "SubTest" -> None, 
            DevTools`TestingTools`Private`openInEditorClicked]], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCRuleSetScore-20221005-WC2JWK"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221051051178110; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221051051178110], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221051051178110 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221051051178110 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221051051178110, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221051051178110 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{833., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221051051178110}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.8739675115024877`*^9},ExpressionUUID->"5de60c1a-48ff-4ce8-8ffa-\
8bf0c99a39cf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"ARCRuleSetScore", "[", "\n", "\t", 
  RowBox[{"{", "\n", "\t\t", 
   RowBox[{
    RowBox[{
     RowBox[{"<|", 
      RowBox[{"\"\<Shape\>\"", " ", "->", " ", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Name\>\"", " ", "->", " ", "\"\<Square\>\""}], ",", " ", 
         RowBox[{"\"\<Filled\>\"", " ", "->", " ", "True"}]}], "|>"}]}], 
      "|>"}], " ", "->", " ", 
     RowBox[{"<|", 
      RowBox[{"\"\<Image\>\"", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"5", ",", " ", "5", ",", " ", "5"}], "}"}], "}"}]}], 
      "|>"}]}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{"\"\<Shape\>\"", " ", "->", " ", 
       RowBox[{"Except", "[", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<Name\>\"", " ", "->", " ", "\"\<Square\>\""}], ",", 
          " ", 
          RowBox[{"\"\<Filled\>\"", " ", "->", " ", "True"}]}], "|>"}], 
        "]"}]}], "|>"}], " ", "->", " ", 
     RowBox[{"<|", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"\"\<Shape\>\"", " ", "->", " ", 
        RowBox[{"<|", "\n", "\t\t\t\t", 
         RowBox[{
          RowBox[{"\"\<Name\>\"", " ", "->", " ", "\"\<Line\>\""}], ",", "\n",
           "\t\t\t\t", 
          RowBox[{"\"\<Angle\>\"", " ", "->", " ", 
           RowBox[{
            RowBox[{"Inactive", "[", "Times", "]"}], "[", 
            RowBox[{
             RowBox[{"ObjectValue", "[", 
              RowBox[{
               RowBox[{"<|", 
                RowBox[{
                 RowBox[{"\"\<Colors\>\"", " ", "->", " ", 
                  RowBox[{"{", "}"}]}], ",", " ", 
                 RowBox[{
                 "\"\<Context\>\"", " ", "->", " ", "\"\<Component\>\""}]}], 
                "|>"}], ",", " ", "\"\<Y2\>\""}], "]"}], ",", " ", "45"}], 
            "]"}]}]}], "\n", "\t\t\t", "|>"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"\"\<Color\>\"", " ", "->", " ", "5"}]}], "\n", "\t\t", 
      "|>"}]}]}], "\n", "\t", "}"}], "\n", "]"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.870467319505377*^9, 3.8704673599178047`*^9}, {
  3.8705088411873155`*^9, 3.8705088492706766`*^9}, {3.8739670782341785`*^9, 
  3.8739671231165123`*^9}},
 CellLabel->"In[174]:=",
 CellID->41129270,
 "TestId" -> 
 "ARCRuleSetScore-20221005-WC2JWK",ExpressionUUID->"8e26f220-caa6-4c05-907f-\
67f5c93ef153"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"-", "3.424366120997786`"}]], "Output",
 CellChangeTimes->{{3.8739671025754256`*^9, 3.8739671497572384`*^9}, 
   3.8739675046246643`*^9, 3.8739676544645348`*^9, 3.8739680008864775`*^9, {
   3.875292178332508*^9, 3.8752922164193616`*^9}},
 CellLabel->
  "Out[175]=",ExpressionUUID->"92e68145-113d-49c8-96dc-dbf208c7054f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["ExampleCount of 1", "Subsection",
 CellChangeTimes->{{3.8739989966604695`*^9, 3.87399899899957*^9}, {
  3.8740004139726505`*^9, 
  3.874000415388768*^9}},ExpressionUUID->"6ab3bbf4-1fea-4375-9e1b-\
d37cdd2d7016"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCRuleSetScore-20221005-0TF1Z0", Daniel`ARC`ARCRuleSetScore, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202210518511917351], 20714170, "SubTest" -> 
              None]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> "ARCRuleSetScore-20221005-0TF1Z0"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCRuleSetScore-20221005-0TF1Z0", Daniel`ARC`ARCRuleSetScore, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202210518511917351], "CellID" -> 20714170, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCRuleSetScore-20221005-0TF1Z0", Daniel`ARC`ARCRuleSetScore, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202210518511917351], 
           Utility`FilterOptions[
           "SubTest" -> None, 
            DevTools`TestingTools`Private`openInEditorClicked]], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCRuleSetScore-20221005-0TF1Z0"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202210518511917351; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202210518511917351], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202210518511917351 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202210518511917351 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202210518511917351, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202210518511917351 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{833., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202210518511917351}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.873999079249137*^9},ExpressionUUID->"66010884-9e05-482f-92e2-\
9b179bf7cdfb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"ARCRuleSetScore", "[", "\n", "\t", 
  RowBox[{"{", "\n", "\t\t", 
   RowBox[{
    RowBox[{
     RowBox[{"<|", 
      RowBox[{"\"\<X\>\"", " ", "->", " ", "1"}], "|>"}], " ", "->", " ", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Color\>\"", " ", "->", " ", "1"}], ",", " ", 
       RowBox[{"\"\<ExampleCount\>\"", " ", "->", " ", "1"}]}], "|>"}]}], ",",
     "\n", "\t\t", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{"\"\<X\>\"", " ", "->", " ", "2"}], "|>"}], " ", "->", " ", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Color\>\"", " ", "->", " ", "2"}], ",", " ", 
       RowBox[{"\"\<ExampleCount\>\"", " ", "->", " ", "2"}]}], "|>"}]}]}], 
   "\n", "\t", "}"}], "\n", "]"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.870467319505377*^9, 3.8704673599178047`*^9}, {
  3.8705088411873155`*^9, 3.8705088492706766`*^9}, {3.8739990033595724`*^9, 
  3.8739990089299183`*^9}, {3.874000183613513*^9, 3.874000191045904*^9}, {
  3.8740004286298857`*^9, 3.8740004316776915`*^9}},
 CellLabel->"In[251]:=",
 CellID->20714170,
 "TestId" -> 
 "ARCRuleSetScore-20221005-0TF1Z0",ExpressionUUID->"447eb5f4-048b-450c-8b4b-\
334c0ec64a63"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"-", "1.6340447318308224`"}]], "Output",
 CellChangeTimes->{{3.8739990006664114`*^9, 3.873999077550459*^9}, {
   3.8740001640751677`*^9, 3.8740001916687765`*^9}, {3.8740004263171797`*^9, 
   3.8740004374973526`*^9}, 3.8740004919149475`*^9},
 CellLabel->
  "Out[252]=",ExpressionUUID->"4b6c4952-e24c-4e6b-94f7-136029eed077"],

Cell[CellGroupData[{

Cell["All Rules are ExampleCount 1", "Subsubsection",
 CellChangeTimes->{{3.874000177468417*^9, 3.874000180925703*^9}, {
  3.8740004510765877`*^9, 
  3.874000452348548*^9}},ExpressionUUID->"c98a7bd6-0570-4e36-a625-\
d077d38f5dc6"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCRuleSetScore-20221005-23M5PG", Daniel`ARC`ARCRuleSetScore, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221051995639965], 58937716, "SubTest" -> None]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> "ARCRuleSetScore-20221005-23M5PG"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCRuleSetScore-20221005-23M5PG", Daniel`ARC`ARCRuleSetScore, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221051995639965], "CellID" -> 58937716, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCRuleSetScore-20221005-23M5PG", Daniel`ARC`ARCRuleSetScore, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221051995639965], 
           Utility`FilterOptions[
           "SubTest" -> None, 
            DevTools`TestingTools`Private`openInEditorClicked]], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCRuleSetScore-20221005-23M5PG"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221051995639965; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221051995639965], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221051995639965 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221051995639965 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221051995639965, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221051995639965 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{826., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221051995639965}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.8740001956412544`*^9},ExpressionUUID->"dd83de49-8b05-4d59-a37e-\
178fe7e6ef77"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"ARCRuleSetScore", "[", "\n", "\t", 
  RowBox[{"{", "\n", "\t\t", 
   RowBox[{
    RowBox[{"<|", 
     RowBox[{"\"\<X\>\"", " ", "->", " ", "1"}], "|>"}], " ", "->", " ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<Color\>\"", " ", "->", " ", "1"}], ",", " ", 
      RowBox[{"\"\<ExampleCount\>\"", " ", "->", " ", "1"}], ",", " ", 
      RowBox[{"\"\<UseCount\>\"", " ", "->", " ", "1"}]}], "|>"}]}], "\n", 
   "\t", "}"}], "\n", "]"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.870467319505377*^9, 3.8704673599178047`*^9}, {
  3.8705088411873155`*^9, 3.8705088492706766`*^9}, {3.8739990033595724`*^9, 
  3.8739990089299183`*^9}, {3.8740004327986555`*^9, 3.874000444893739*^9}},
 CellLabel->"In[315]:=",
 CellID->58937716,
 "TestId" -> 
 "ARCRuleSetScore-20221005-23M5PG",ExpressionUUID->"49efb367-3775-41de-b60c-\
f815aed8643d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"-", "11.582971888569093`"}]], "Output",
 CellChangeTimes->{
  3.8740001935061016`*^9, {3.874000427563587*^9, 3.874000454487913*^9}, 
   3.874000490107905*^9, 3.874002110347235*^9},
 CellLabel->
  "Out[316]=",ExpressionUUID->"09492f57-f547-474b-b166-edbd7de6bda1"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCRuleSetScore-20221005-DWLP64", Daniel`ARC`ARCRuleSetScore, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202210519142242817], 85454362, "SubTest" -> 
              None]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> "ARCRuleSetScore-20221005-DWLP64"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCRuleSetScore-20221005-DWLP64", Daniel`ARC`ARCRuleSetScore, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202210519142242817], "CellID" -> 85454362, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCRuleSetScore-20221005-DWLP64", Daniel`ARC`ARCRuleSetScore, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202210519142242817], 
           Utility`FilterOptions[
           "SubTest" -> None, 
            DevTools`TestingTools`Private`openInEditorClicked]], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCRuleSetScore-20221005-DWLP64"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202210519142242817; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202210519142242817], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202210519142242817 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202210519142242817 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202210519142242817, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202210519142242817 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{826., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202210519142242817}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.8740004621790724`*^9},ExpressionUUID->"941fcb9a-f431-488c-a63e-\
8767ce6dbd51"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"ARCRuleSetScore", "[", "\n", "\t", 
  RowBox[{"{", "\n", "\t\t", 
   RowBox[{
    RowBox[{"<|", 
     RowBox[{"\"\<X\>\"", " ", "->", " ", "1"}], "|>"}], " ", "->", " ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<Color\>\"", " ", "->", " ", "1"}], ",", " ", 
      RowBox[{"\"\<ExampleCount\>\"", " ", "->", " ", "1"}], ",", " ", 
      RowBox[{"\"\<UseCount\>\"", " ", "->", " ", "2"}]}], "|>"}]}], "\n", 
   "\t", "}"}], "\n", "]"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.870467319505377*^9, 3.8704673599178047`*^9}, {
  3.8705088411873155`*^9, 3.8705088492706766`*^9}, {3.8739990033595724`*^9, 
  3.8739990089299183`*^9}, {3.8740004327986555`*^9, 3.8740004490765333`*^9}},
 CellLabel->"In[247]:=",
 CellID->85454362,
 "TestId" -> 
 "ARCRuleSetScore-20221005-DWLP64",ExpressionUUID->"5099af8a-d610-4dac-9545-\
0b91eaedd1fa"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"-", "9.120624825711085`"}]], "Output",
 CellChangeTimes->{{3.8740004496417084`*^9, 3.8740004551718025`*^9}, 
   3.874000488300629*^9},
 CellLabel->
  "Out[248]=",ExpressionUUID->"e4c8a4ee-223a-4185-bda3-e2cb32c22bc5"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Grid Subdivision", "Subsection",
 CellChangeTimes->{{3.874001577240827*^9, 3.8740015778311777`*^9}, {
  3.87400209456509*^9, 
  3.874002100773967*^9}},ExpressionUUID->"2db51d9e-9929-4bf9-a9dd-\
185ac0dbe965"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCRuleSetScore-20221005-UT0GIB", Daniel`ARC`ARCRuleSetScore, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202210519414447195], 37779196, "SubTest" -> 
              None]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> "ARCRuleSetScore-20221005-UT0GIB"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCRuleSetScore-20221005-UT0GIB", Daniel`ARC`ARCRuleSetScore, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202210519414447195], "CellID" -> 37779196, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCRuleSetScore-20221005-UT0GIB", Daniel`ARC`ARCRuleSetScore, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202210519414447195], 
           Utility`FilterOptions[
           "SubTest" -> None, 
            DevTools`TestingTools`Private`openInEditorClicked]], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCRuleSetScore-20221005-UT0GIB"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202210519414447195; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202210519414447195], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202210519414447195 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202210519414447195 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202210519414447195, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202210519414447195 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{833., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202210519414447195}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.8740021038161106`*^9},ExpressionUUID->"42c62925-4b71-4382-919e-\
b565ff71dfbd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"ARCRuleSetScore", "[", "\n", "\t", 
  RowBox[{"{", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"<|", "\n", "\t\t\t\t", 
       RowBox[{
        RowBox[{"\"\<SceneAsSingleObject\>\"", " ", "->", " ", "True"}], ",", 
        "\n", "\t\t\t\t", 
        RowBox[{"\"\<Rules\>\"", " ", "->", " ", 
         RowBox[{"{", "\n", "\t\t\t\t\t", 
          RowBox[{
           RowBox[{"<|", "|>"}], " ", "->", " ", 
           RowBox[{"<|", "\n", "\t\t\t\t\t\t", 
            RowBox[{
             RowBox[{"\"\<Same\>\"", " ", "->", " ", "True"}], ",", "\n", 
             "\t\t\t\t\t\t", 
             RowBox[{"\"\<Examples\>\"", " ", "->", " ", 
              RowBox[{"{", 
               RowBox[{"1", ",", " ", "2", ",", " ", "3"}], "}"}]}], ",", 
             "\n", "\t\t\t\t\t\t", 
             RowBox[{"\"\<ExampleCount\>\"", " ", "->", " ", "3"}], ",", "\n",
              "\t\t\t\t\t\t", 
             RowBox[{"\"\<UseCount\>\"", " ", "->", " ", "3"}], ",", "\n", 
             "\t\t\t\t\t\t", 
             RowBox[{"\"\<InputObjects\>\"", " ", "->", " ", 
              RowBox[{"{", "\n", "\t\t\t\t\t\t\t", 
               RowBox[{
               "\"\<49b747d8-4bc2-4ba7-bc28-f48b31c8fff8\>\"", ",", "\n", 
                "\t\t\t\t\t\t\t", 
                "\"\<c52e5327-9c44-444f-90bc-cbf75ced50f5\>\"", ",", "\n", 
                "\t\t\t\t\t\t\t", 
                "\"\<98f7c073-bde5-4a08-ab9a-e235ef4d3756\>\""}], "\n", 
               "\t\t\t\t\t\t", "}"}]}]}], "\n", "\t\t\t\t\t", "|>"}]}], "\n", 
          "\t\t\t\t", "}"}]}]}], "\n", "\t\t\t", "|>"}], ",", "\n", "\t\t\t", 
      RowBox[{"<|", "\n", "\t\t\t\t", 
       RowBox[{
        RowBox[{"\"\<SceneAsSingleObject\>\"", " ", "->", " ", "True"}], ",", 
        "\n", "\t\t\t\t", 
        RowBox[{"\"\<Rules\>\"", " ", "->", " ", 
         RowBox[{"{", "\n", "\t\t\t\t\t", 
          RowBox[{
           RowBox[{"<|", "|>"}], " ", "->", " ", 
           RowBox[{"<|", "\n", "\t\t\t\t\t\t", 
            RowBox[{
             RowBox[{"\"\<Transform\>\"", " ", "->", " ", 
              RowBox[{"<|", 
               RowBox[{
                RowBox[{"\"\<Type\>\"", " ", "->", " ", "\"\<Flip\>\""}], ",",
                 " ", 
                RowBox[{
                "\"\<Direction\>\"", " ", "->", " ", "\"\<Horizontal\>\""}]}],
                "|>"}]}], ",", "\n", "\t\t\t\t\t\t", 
             RowBox[{"\"\<Examples\>\"", " ", "->", " ", 
              RowBox[{"{", 
               RowBox[{"1", ",", " ", "2", ",", " ", "3"}], "}"}]}], ",", 
             "\n", "\t\t\t\t\t\t", 
             RowBox[{"\"\<ExampleCount\>\"", " ", "->", " ", "3"}], ",", "\n",
              "\t\t\t\t\t\t", 
             RowBox[{"\"\<UseCount\>\"", " ", "->", " ", "3"}], ",", "\n", 
             "\t\t\t\t\t\t", 
             RowBox[{"\"\<InputObjects\>\"", " ", "->", " ", 
              RowBox[{"{", "\n", "\t\t\t\t\t\t\t", 
               RowBox[{
               "\"\<49b747d8-4bc2-4ba7-bc28-f48b31c8fff8\>\"", ",", "\n", 
                "\t\t\t\t\t\t\t", 
                "\"\<c52e5327-9c44-444f-90bc-cbf75ced50f5\>\"", ",", "\n", 
                "\t\t\t\t\t\t\t", 
                "\"\<98f7c073-bde5-4a08-ab9a-e235ef4d3756\>\""}], "\n", 
               "\t\t\t\t\t\t", "}"}]}]}], "\n", "\t\t\t\t\t", "|>"}]}], "\n", 
          "\t\t\t\t", "}"}]}]}], "\n", "\t\t\t", "|>"}]}], "\n", "\t\t", 
     "}"}], ",", "\n", "\t\t", 
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"<|", "\n", "\t\t\t\t", 
       RowBox[{
        RowBox[{"\"\<SceneAsSingleObject\>\"", " ", "->", " ", "True"}], ",", 
        "\n", "\t\t\t\t", 
        RowBox[{"\"\<Rules\>\"", " ", "->", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"<|", "|>"}], " ", "->", " ", 
           RowBox[{"<|", 
            RowBox[{"\"\<Transform\>\"", " ", "->", " ", 
             RowBox[{"<|", 
              RowBox[{
               RowBox[{"\"\<Type\>\"", " ", "->", " ", "\"\<Flip\>\""}], ",", 
               " ", 
               RowBox[{
               "\"\<Direction\>\"", " ", "->", " ", "\"\<Vertical\>\""}]}], 
              "|>"}]}], "|>"}]}], "}"}]}]}], "\n", "\t\t\t", "|>"}], ",", 
      "\n", "\t\t\t", 
      RowBox[{"<|", "\n", "\t\t\t\t", 
       RowBox[{
        RowBox[{"\"\<SceneAsSingleObject\>\"", " ", "->", " ", "True"}], ",", 
        "\n", "\t\t\t\t", 
        RowBox[{"\"\<Rules\>\"", " ", "->", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"<|", "|>"}], " ", "->", " ", 
           RowBox[{"<|", 
            RowBox[{"\"\<Transform\>\"", " ", "->", " ", 
             RowBox[{"<|", 
              RowBox[{
               RowBox[{"\"\<Type\>\"", " ", "->", " ", "\"\<Rotation\>\""}], 
               ",", " ", 
               RowBox[{"\"\<Angle\>\"", " ", "->", " ", "180"}]}], "|>"}]}], 
            "|>"}]}], "}"}]}]}], "\n", "\t\t\t", "|>"}]}], "\n", "\t\t", 
     "}"}]}], "\n", "\t", "}"}], "\n", "]"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.870467319505377*^9, 3.8704673599178047`*^9}, {
  3.8705088411873155`*^9, 3.8705088492706766`*^9}, {3.8740016013482995`*^9, 
  3.8740016048073053`*^9}},
 CellLabel->"In[311]:=",
 CellID->37779196,
 "TestId" -> 
 "ARCRuleSetScore-20221005-UT0GIB",ExpressionUUID->"d5e0df18-75e8-4669-be3a-\
10811fffe496"]
}, Open  ]],

Cell[BoxData["5.3280708480932555`"], "Output",
 CellChangeTimes->{{3.8740016058830953`*^9, 3.8740016086026397`*^9}, {
  3.8740016649865217`*^9, 3.8740016710496087`*^9}, {3.8740017408975058`*^9, 
  3.874001792205288*^9}, {3.8740018540639486`*^9, 3.8740018916515136`*^9}, {
  3.8740019248522215`*^9, 3.8740019544758344`*^9}, {3.8740019967519755`*^9, 
  3.874002090316168*^9}},
 CellLabel->
  "Out[312]=",ExpressionUUID->"6d06953e-27ff-45c4-92a4-67f224396880"]
}, Closed]],

Cell[CellGroupData[{

Cell["ColorMapping", "Subsection",
 CellChangeTimes->{{3.8752915529267197`*^9, 
  3.875291554478034*^9}},ExpressionUUID->"da6882e2-4a00-4aa2-b503-\
2722d9d2a7be"],

Cell["\<\
We need to know how to look for ObjectValue expressions within the Mapping \
structure, and use \[OpenCurlyDoubleQuote]Color\[CloseCurlyDoubleQuote] as \
the property being specified.\
\>", "Text",
 CellChangeTimes->{{3.875292146059543*^9, 
  3.875292168296488*^9}},ExpressionUUID->"8be158d5-19e9-40a8-9f2b-\
fab634706e7a"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCRuleSetScore-20221020-UCKXYG", Daniel`ARC`ARCRuleSetScore, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202210201825038507], 12374277, "SubTest" -> 
              None]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> "ARCRuleSetScore-20221020-UCKXYG"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCRuleSetScore-20221020-UCKXYG", Daniel`ARC`ARCRuleSetScore, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202210201825038507], "CellID" -> 12374277, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCRuleSetScore-20221020-UCKXYG", Daniel`ARC`ARCRuleSetScore, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202210201825038507], 
           Utility`FilterOptions[
           "SubTest" -> None, 
            DevTools`TestingTools`Private`openInEditorClicked]], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCRuleSetScore-20221020-UCKXYG"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202210201825038507; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202210201825038507], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202210201825038507 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202210201825038507 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202210201825038507, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202210201825038507 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{833., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202210201825038507}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.8752921701495185`*^9},ExpressionUUID->"dbbf6815-5145-4988-b1fc-\
da8c852bf480"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"ARCRuleSetScore", "[", "\n", "\t", 
  RowBox[{"{", "\n", "\t\t", 
   RowBox[{
    RowBox[{"<|", "|>"}], " ", "->", " ", 
    RowBox[{"<|", "\n", "\t\t\t", 
     RowBox[{"\"\<Transform\>\"", " ", "->", " ", 
      RowBox[{"<|", "\n", "\t\t\t\t", 
       RowBox[{
        RowBox[{"\"\<Type\>\"", " ", "->", " ", "\"\<ColorMapping\>\""}], ",",
         "\n", "\t\t\t\t", 
        RowBox[{"\"\<Mapping\>\"", " ", "->", " ", 
         RowBox[{"{", "\n", "\t\t\t\t\t", 
          RowBox[{
           RowBox[{"{", "\n", "\t\t\t\t\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"Inactive", "[", "Plus", "]"}], "[", "\n", 
              "\t\t\t\t\t\t\t", 
              RowBox[{
               RowBox[{
                RowBox[{"Inactive", "[", "Times", "]"}], "[", 
                RowBox[{
                 RowBox[{"ObjectValue", "[", 
                  RowBox[{"\"\<Object\>\"", ",", " ", "\"\<YInverse\>\""}], 
                  "]"}], ",", " ", "1.5"}], "]"}], ",", "\n", 
               "\t\t\t\t\t\t\t", "0.5"}], "\n", "\t\t\t\t\t\t", "]"}], ",", 
             "\n", "\t\t\t\t\t\t", 
             RowBox[{
              RowBox[{"Inactive", "[", "Plus", "]"}], "[", "\n", 
              "\t\t\t\t\t\t\t", 
              RowBox[{
               RowBox[{
                RowBox[{"Inactive", "[", "Times", "]"}], "[", 
                RowBox[{
                 RowBox[{"ObjectValue", "[", 
                  RowBox[{"\"\<Object\>\"", ",", " ", "\"\<YInverse\>\""}], 
                  "]"}], ",", " ", 
                 RowBox[{"-", "1.5"}]}], "]"}], ",", "\n", "\t\t\t\t\t\t\t", 
               "12.5"}], "\n", "\t\t\t\t\t\t", "]"}]}], "\n", "\t\t\t\t\t", 
            "}"}], ",", "\n", "\t\t\t\t\t", 
           RowBox[{"{", "\n", "\t\t\t\t\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"Inactive", "[", "Plus", "]"}], "[", "\n", 
              "\t\t\t\t\t\t\t", 
              RowBox[{
               RowBox[{
                RowBox[{"Inactive", "[", "Times", "]"}], "[", 
                RowBox[{
                 RowBox[{"ObjectValue", "[", 
                  RowBox[{"\"\<Object\>\"", ",", " ", "\"\<YInverse\>\""}], 
                  "]"}], ",", " ", 
                 RowBox[{"-", "1.5"}]}], "]"}], ",", "\n", "\t\t\t\t\t\t\t", 
               "12.5"}], "\n", "\t\t\t\t\t\t", "]"}], ",", "\n", 
             "\t\t\t\t\t\t", 
             RowBox[{
              RowBox[{"Inactive", "[", "Plus", "]"}], "[", "\n", 
              "\t\t\t\t\t\t\t", 
              RowBox[{
               RowBox[{
                RowBox[{"Inactive", "[", "Times", "]"}], "[", 
                RowBox[{
                 RowBox[{"ObjectValue", "[", 
                  RowBox[{"\"\<Object\>\"", ",", " ", "\"\<YInverse\>\""}], 
                  "]"}], ",", " ", "1.5"}], "]"}], ",", "\n", 
               "\t\t\t\t\t\t\t", "0.5"}], "\n", "\t\t\t\t\t\t", "]"}]}], "\n",
             "\t\t\t\t\t", "}"}]}], "\n", "\t\t\t\t", "}"}]}]}], "\n", 
       "\t\t\t", "|>"}]}], "\n", "\t\t", "|>"}]}], "\n", "\t", "}"}], "\n", 
  "]"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.870467319505377*^9, 3.8704673599178047`*^9}, {
  3.8705088411873155`*^9, 3.8705088492706766`*^9}, {3.875291566865923*^9, 
  3.875291571773224*^9}},
 CellLabel->"In[166]:=",
 CellID->12374277,
 "TestId" -> 
 "ARCRuleSetScore-20221020-UCKXYG",ExpressionUUID->"64229967-01df-4dfc-8908-\
ac5571afd0bf"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"-", "14.693454324970693`"}]], "Output",
 CellChangeTimes->{{3.875291567786148*^9, 3.8752915724036503`*^9}, 
   3.875291783989671*^9, 3.8752918512557774`*^9, {3.875291887273981*^9, 
   3.875291945979739*^9}, {3.875291984614741*^9, 3.8752919975396676`*^9}, {
   3.875292113448293*^9, 3.875292141157218*^9}},
 CellLabel->
  "Out[167]=",ExpressionUUID->"adf63a22-8615-41d9-a1c7-9af506a29321"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Local",
WindowSize->{958, 980},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
Visible->True,
DockedCells->{
  Cell[
   BoxData[
    DynamicBox[
     ToBoxes[
      Column[{
        Row[{
          Button["New Test", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`NewFunctionCell[Daniel`ARC`ARCRuleSetScore], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202282521721419519]], ImageSize -> {95., 40}, 
           Method -> "Queued"], " ", 
          Button["Add Tests to File", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`CreateUnitTests[
            Daniel`ARC`ARCRuleSetScore, "SubTest" -> None], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202282521721419519]], ImageSize -> {162.5, 40}, 
           Method -> "Queued"], " ", 
          Button[
          "Run Tests", 
           DevTools`TestingTools`RunUnitTestsInNotebook[
            Daniel`ARC`ARCRuleSetScore]; Null, ImageSize -> {102.5, 40}, 
           Method -> "Queued"], " ", 
          Button["Edit Tests", 
           DevTools`TestingTools`EditUnitTests[Daniel`ARC`ARCRuleSetScore], 
           ImageSize -> {110., 40}, Method -> "Queued"], " ", 
          Button["Edit Function", 
           DevTools`SourceTools`EditFunction[Daniel`ARC`ARCRuleSetScore], 
           ImageSize -> {132.5, 40}, Method -> "Queued"], " ", 
          Row[{
            
            DynamicModule[{
             DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
              "Capture"}, 
             Button[
              Dynamic[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel], 
              If[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel === 
               "Capture", 
               DevTools`TestingTools`FunctionCapture`EnableFunctionCapture[
                Daniel`ARC`ARCRuleSetScore]; 
               DevTools`TestingTools`FunctionCapture`\
RegisterFunctionCaptureNotebook[Daniel`ARC`ARCRuleSetScore, 
                 InputNotebook[]]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Release"; Null, 
               DevTools`TestingTools`FunctionCapture`DisableFunctionCapture[
                Daniel`ARC`ARCRuleSetScore]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Capture"; Null], ImageSize -> {100, 40}, Method -> "Queued"],
              DynamicModuleValues :> {}], 
            Button["?", 
             DevTools`TestingTools`FunctionCapture`CaptureFunctionHelp[], 
             ImageSize -> {30, 40}, Method -> "Queued"]}], " ", 
          Row[{
            Button["<", 
             DevTools`NotebookTools`MoveNotebook["Left"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"], 
            Button[">", 
             DevTools`NotebookTools`MoveNotebook["Right"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"]}]}], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202282521721419519; If[
          And[
           ValueQ[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202282521721419519], 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202282521721419519 =!= "", 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202282521721419519 =!= Null], 
          (If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {"MaxHeight" -> 300},
              "NakedSection"]], 
           Framed[#, FrameStyle -> None, FrameMargins -> 2], 
           
           Framed[#, FrameStyle -> LightGray, Background -> White, 
            FrameMargins -> 15]]& )[
           Grid[{{
              Pane[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202282521721419519, "ImageSize" -> {Full, {0, 
                  OptionValue[
                  DevTools`NotebookTools`DynamicOutputSection, {
                   "MaxHeight" -> 300}, "MaxHeight"]}}, Scrollbars -> 
               Automatic, FrameMargins -> 0]}, 
             If[
              TrueQ[
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {
                "MaxHeight" -> 300}, "NakedSection"]], 
              Apply[Sequence, {}], {
               Button[
               "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202282521721419519 = "", 
                ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
            Alignment -> {Left, Top}]], 
          Apply[Sequence, {}]]}], StandardForm], 
     TrackedSymbols :> {
      DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202282521721419519}]], "DockedCell"]},
TaggingRules->{
 "CreateNamedNotebook2Args" -> {
   "ARCRuleSetScore", "Type" -> "Function", 
    "GenerateNotebookArgs" -> {"Function" -> Daniel`ARC`ARCRuleSetScore}, 
    "ReturnNotebook" -> True}},
InputAutoReplacements->{},
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"14f97e87-db81-4380-8539-2637a9e5640e"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 87, 0, 98, "Title",ExpressionUUID->"be670639-f448-4724-bea1-9c592abb1cbd"],
Cell[670, 24, 250, 6, 54, "Code",ExpressionUUID->"bd0f3d8a-0559-42ef-ba5d-86ed43a5436f",
 InitializationCell->False],
Cell[CellGroupData[{
Cell[945, 34, 79, 0, 67, "Section",ExpressionUUID->"41e1f2ed-1a30-404e-8420-1feb250aadc0"],
Cell[CellGroupData[{
Cell[1049, 38, 3534, 82, 52, "TestUI",ExpressionUUID->"ec331b8b-6eb9-4558-b60a-cee3108beeb8",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[4586, 122, 1151, 32, 144, "Code",ExpressionUUID->"5018e903-4b59-4cf6-a625-90028acd09e0",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->32115454]
}, Open  ]],
Cell[5752, 157, 516, 8, 33, "Output",ExpressionUUID->"33e56ca3-b225-4192-91ec-1bbb15bcec6c"],
Cell[CellGroupData[{
Cell[6293, 169, 3515, 81, 52, "TestUI",ExpressionUUID->"475da004-3b39-46ad-a3bf-28fb5c844916",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[9811, 252, 973, 26, 144, "Code",ExpressionUUID->"54aa359b-053b-4a5c-a1e0-85582a094130",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->20161153]
}, Open  ]],
Cell[10799, 281, 361, 7, 33, "Output",ExpressionUUID->"79bda823-963c-4de6-af1c-93f9d5c21228"],
Cell[CellGroupData[{
Cell[11185, 292, 164, 3, 54, "Subsection",ExpressionUUID->"d1f57bba-f29a-4ac0-8c9c-629259c5206e"],
Cell[11352, 297, 199, 4, 29, "Input",ExpressionUUID->"7c59e372-b92b-4cdf-9640-995f36649f3b"],
Cell[CellGroupData[{
Cell[11576, 305, 3659, 85, 52, "TestUI",ExpressionUUID->"5de60c1a-48ff-4ce8-8ffa-8bf0c99a39cf",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[15238, 392, 2480, 62, 252, "Code",ExpressionUUID->"8e26f220-caa6-4c05-907f-67f5c93ef153",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->41129270]
}, Open  ]],
Cell[17733, 457, 343, 6, 33, "Output",ExpressionUUID->"92e68145-113d-49c8-96dc-dbf208c7054f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18113, 468, 217, 4, 54, "Subsection",ExpressionUUID->"6ab3bbf4-1fea-4375-9e1b-d37cdd2d7016"],
Cell[CellGroupData[{
Cell[18355, 476, 3671, 85, 52, "TestUI",ExpressionUUID->"66010884-9e05-482f-92e2-9b179bf7cdfb",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[22029, 563, 1307, 32, 144, "Code",ExpressionUUID->"447eb5f4-048b-450c-8b4b-334c0ec64a63",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->20714170]
}, Open  ]],
Cell[23351, 598, 346, 6, 33, "Output",ExpressionUUID->"4b6c4952-e24c-4e6b-94f7-136029eed077"],
Cell[CellGroupData[{
Cell[23722, 608, 230, 4, 45, "Subsubsection",ExpressionUUID->"c98a7bd6-0570-4e36-a625-d077d38f5dc6"],
Cell[CellGroupData[{
Cell[23977, 616, 3648, 84, 52, "TestUI",ExpressionUUID->"dd83de49-8b05-4d59-a37e-178fe7e6ef77",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[27628, 702, 995, 23, 126, "Code",ExpressionUUID->"49efb367-3775-41de-b60c-f815aed8643d",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->58937716]
}, Open  ]],
Cell[28638, 728, 287, 6, 33, "Output",ExpressionUUID->"09492f57-f547-474b-b166-edbd7de6bda1"],
Cell[CellGroupData[{
Cell[28950, 738, 3673, 85, 52, "TestUI",ExpressionUUID->"941fcb9a-f431-488c-a63e-8767ce6dbd51",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[32626, 825, 997, 23, 126, "Code",ExpressionUUID->"5099af8a-d610-4dac-9545-0b91eaedd1fa",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->85454362]
}, Open  ]],
Cell[33638, 851, 241, 5, 33, "Output",ExpressionUUID->"e4c8a4ee-223a-4185-bda3-e2cb32c22bc5"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[33928, 862, 214, 4, 38, "Subsection",ExpressionUUID->"2db51d9e-9929-4bf9-a9dd-185ac0dbe965"],
Cell[CellGroupData[{
Cell[34167, 870, 3673, 85, 52, "TestUI",ExpressionUUID->"42c62925-4b71-4382-919e-b565ff71dfbd",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[37843, 957, 5446, 121, 900, "Code",ExpressionUUID->"d5e0df18-75e8-4669-be3a-10811fffe496",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->37779196]
}, Open  ]],
Cell[43304, 1081, 457, 7, 33, "Output",ExpressionUUID->"6d06953e-27ff-45c4-92a4-67f224396880"]
}, Closed]],
Cell[CellGroupData[{
Cell[43798, 1093, 162, 3, 38, "Subsection",ExpressionUUID->"da6882e2-4a00-4aa2-b503-2722d9d2a7be"],
Cell[43963, 1098, 333, 7, 58, "Text",ExpressionUUID->"8be158d5-19e9-40a8-9f2b-fab634706e7a"],
Cell[CellGroupData[{
Cell[44321, 1109, 3684, 86, 52, "TestUI",ExpressionUUID->"dbbf6815-5145-4988-b1fc-da8c852bf480",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[48008, 1197, 3554, 81, 594, "Code",ExpressionUUID->"64229967-01df-4dfc-8908-ac5571afd0bf",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->12374277]
}, Open  ]],
Cell[51577, 1281, 412, 7, 33, "Output",ExpressionUUID->"adf63a22-8615-41d9-a1c7-9af506a29321"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

