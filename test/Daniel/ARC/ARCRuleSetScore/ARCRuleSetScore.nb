(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     17431,        440]
NotebookOptionsPosition[     10757,        281]
NotebookOutlinePosition[     16258,        417]
CellTagsIndexPosition[     16215,        414]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ARCRuleSetScore", "Title",ExpressionUUID->"be670639-f448-4724-bea1-9c592abb1cbd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"RunUnitTests", "[", "ARCRuleSetScore", "]"}]}], "Code",
 InitializationCell->False,
 CellLabel->
  "In[2183]:=",ExpressionUUID->"bd0f3d8a-0559-42ef-ba5d-86ed43a5436f"],

Cell[CellGroupData[{

Cell["Tests", "Section",ExpressionUUID->"41e1f2ed-1a30-404e-8420-1feb250aadc0"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCRuleSetScore-20220825-YKR23C", Daniel`ARC`ARCRuleSetScore, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022825214920419702], 32115454]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> "ARCRuleSetScore-20220825-YKR23C"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCRuleSetScore-20220825-YKR23C", Daniel`ARC`ARCRuleSetScore, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022825214920419702], "CellID" -> 32115454, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCRuleSetScore-20220825-YKR23C", Daniel`ARC`ARCRuleSetScore, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022825214920419702], None], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCRuleSetScore-20220825-YKR23C"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022825214920419702; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022825214920419702], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022825214920419702 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022825214920419702 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022825214920419702, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022825214920419702 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{840., {21.3544921875, 26.6455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022825214920419702}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.870467359916805*^9},ExpressionUUID->"ec331b8b-6eb9-4558-b60a-\
cee3108beeb8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"ARCRuleSetScore", "[", "\n", "\t", 
  RowBox[{"{", "\n", "\t\t", 
   RowBox[{
    RowBox[{
     RowBox[{"<|", 
      RowBox[{"\"\<Color\>\"", " ", "->", " ", "1"}], "|>"}], " ", "->", " ", 
     RowBox[{"<|", 
      RowBox[{"\"\<X\>\"", " ", "->", " ", "1"}], "|>"}]}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{"\"\<Color\>\"", " ", "->", " ", "2"}], "|>"}], " ", "->", " ", 
     RowBox[{"<|", 
      RowBox[{"\"\<X\>\"", " ", "->", " ", "2"}], "|>"}]}]}], "\n", "\t", 
   "}"}], "\n", "]"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.870467319505377*^9, 3.8704673599178047`*^9}},
 CellLabel->"In[2528]:=",
 CellID->32115454,
 "TestId" -> 
 "ARCRuleSetScore-20220825-YKR23C",ExpressionUUID->"5018e903-4b59-4cf6-a625-\
90028acd09e0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"-", "0.24960215257064838`"}]], "Output",
 CellChangeTimes->{{3.8704673390656195`*^9, 3.8704673534558024`*^9}, 
   3.8705088307617083`*^9, {3.8705102559856777`*^9, 3.8705102723796206`*^9}, 
   3.8705103828327007`*^9, {3.870510419962258*^9, 3.8705104258947678`*^9}, 
   3.8705177109149165`*^9},
 CellLabel->
  "Out[2529]=",ExpressionUUID->"a88e3d4e-8194-4cad-ace4-8f2fd16ca75c"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCRuleSetScore-20220826-6EL1X5", Daniel`ARC`ARCRuleSetScore, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202282692052448535], 20161153]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> "ARCRuleSetScore-20220826-6EL1X5"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCRuleSetScore-20220826-6EL1X5", Daniel`ARC`ARCRuleSetScore, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202282692052448535], "CellID" -> 20161153, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCRuleSetScore-20220826-6EL1X5", Daniel`ARC`ARCRuleSetScore, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202282692052448535], None], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCRuleSetScore-20220826-6EL1X5"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202282692052448535; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202282692052448535], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202282692052448535 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202282692052448535 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202282692052448535, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202282692052448535 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{840., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202282692052448535}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.8705088517724404`*^9},ExpressionUUID->"475da004-3b39-46ad-a3bf-\
28fb5c844916"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"ARCRuleSetScore", "[", "\n", "\t", 
  RowBox[{"{", "\n", "\t\t", 
   RowBox[{
    RowBox[{
     RowBox[{"<|", 
      RowBox[{"\"\<X\>\"", " ", "->", " ", "1"}], "|>"}], " ", "->", " ", 
     RowBox[{"<|", 
      RowBox[{"\"\<Color\>\"", " ", "->", " ", "1"}], "|>"}]}], ",", "\n", 
    "\t\t", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{"\"\<X\>\"", " ", "->", " ", "2"}], "|>"}], " ", "->", " ", 
     RowBox[{"<|", 
      RowBox[{"\"\<Color\>\"", " ", "->", " ", "2"}], "|>"}]}]}], "\n", "\t", 
   "}"}], "\n", "]"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.870467319505377*^9, 3.8704673599178047`*^9}, {
  3.8705088411873155`*^9, 3.8705088492706766`*^9}},
 CellLabel->"In[2530]:=",
 CellID->20161153,
 "TestId" -> 
 "ARCRuleSetScore-20220826-6EL1X5",ExpressionUUID->"54aa359b-053b-4a5c-a1e0-\
85582a094130"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"-", "1.0268398122394748`"}]], "Output",
 CellChangeTimes->{
  3.8705088497013826`*^9, {3.870510258981043*^9, 3.870510262582797*^9}, 
   3.8705104278380575`*^9, 3.870517711891751*^9},
 CellLabel->
  "Out[2531]=",ExpressionUUID->"fe8cda38-75b9-4375-8e4f-b645178b9fa6"]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Local",
WindowSize->{958, 980},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
Visible->True,
DockedCells->{
  Cell[
   BoxData[
    DynamicBox[
     ToBoxes[
      Column[{
        Row[{
          Button["New Test", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`NewFunctionCell[Daniel`ARC`ARCRuleSetScore], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202282521721419519]], ImageSize -> {95., 40}, 
           Method -> "Queued"], " ", 
          Button["Add Tests to File", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`CreateUnitTests[
            Daniel`ARC`ARCRuleSetScore, "SubTest" -> None], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202282521721419519]], ImageSize -> {162.5, 40}, 
           Method -> "Queued"], " ", 
          Button[
          "Run Tests", 
           DevTools`TestingTools`RunUnitTestsInNotebook[
            Daniel`ARC`ARCRuleSetScore]; Null, ImageSize -> {102.5, 40}, 
           Method -> "Queued"], " ", 
          Button["Edit Tests", 
           DevTools`TestingTools`EditUnitTests[Daniel`ARC`ARCRuleSetScore], 
           ImageSize -> {110., 40}, Method -> "Queued"], " ", 
          Button["Edit Function", 
           DevTools`SourceTools`EditFunction[Daniel`ARC`ARCRuleSetScore], 
           ImageSize -> {132.5, 40}, Method -> "Queued"], " ", 
          Row[{
            
            DynamicModule[{
             DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
              "Capture"}, 
             Button[
              Dynamic[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel], 
              If[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel === 
               "Capture", 
               DevTools`TestingTools`FunctionCapture`EnableFunctionCapture[
                Daniel`ARC`ARCRuleSetScore]; 
               DevTools`TestingTools`FunctionCapture`\
RegisterFunctionCaptureNotebook[Daniel`ARC`ARCRuleSetScore, 
                 InputNotebook[]]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Release"; Null, 
               DevTools`TestingTools`FunctionCapture`DisableFunctionCapture[
                Daniel`ARC`ARCRuleSetScore]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Capture"; Null], ImageSize -> {100, 40}, Method -> "Queued"],
              DynamicModuleValues :> {}], 
            Button["?", 
             DevTools`TestingTools`FunctionCapture`CaptureFunctionHelp[], 
             ImageSize -> {30, 40}, Method -> "Queued"]}], " ", 
          Row[{
            Button["<", 
             DevTools`NotebookTools`MoveNotebook["Left"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"], 
            Button[">", 
             DevTools`NotebookTools`MoveNotebook["Right"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"]}]}], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202282521721419519; If[
          And[
           ValueQ[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202282521721419519], 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202282521721419519 =!= "", 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202282521721419519 =!= Null], 
          (If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {"MaxHeight" -> 300},
              "NakedSection"]], 
           Framed[#, FrameStyle -> None, FrameMargins -> 2], 
           
           Framed[#, FrameStyle -> LightGray, Background -> White, 
            FrameMargins -> 15]]& )[
           Grid[{{
              Pane[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202282521721419519, "ImageSize" -> {Full, {0, 
                  OptionValue[
                  DevTools`NotebookTools`DynamicOutputSection, {
                   "MaxHeight" -> 300}, "MaxHeight"]}}, Scrollbars -> 
               Automatic, FrameMargins -> 0]}, 
             If[
              TrueQ[
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {
                "MaxHeight" -> 300}, "NakedSection"]], 
              Apply[Sequence, {}], {
               Button[
               "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202282521721419519 = "", 
                ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
            Alignment -> {Left, Top}]], 
          Apply[Sequence, {}]]}], StandardForm], 
     TrackedSymbols :> {
      DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202282521721419519}]], "DockedCell"]},
TaggingRules->{
 "CreateNamedNotebook2Args" -> {
   "ARCRuleSetScore", "Type" -> "Function", 
    "GenerateNotebookArgs" -> {"Function" -> Daniel`ARC`ARCRuleSetScore}, 
    "ReturnNotebook" -> True}},
InputAutoReplacements->{},
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"14f97e87-db81-4380-8539-2637a9e5640e"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 87, 0, 98, "Title",ExpressionUUID->"be670639-f448-4724-bea1-9c592abb1cbd"],
Cell[670, 24, 251, 6, 54, "Code",ExpressionUUID->"bd0f3d8a-0559-42ef-ba5d-86ed43a5436f",
 InitializationCell->False],
Cell[CellGroupData[{
Cell[946, 34, 79, 0, 67, "Section",ExpressionUUID->"41e1f2ed-1a30-404e-8420-1feb250aadc0"],
Cell[CellGroupData[{
Cell[1050, 38, 3523, 81, 50, "TestUI",ExpressionUUID->"ec331b8b-6eb9-4558-b60a-cee3108beeb8",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[4576, 121, 916, 24, 144, "Code",ExpressionUUID->"5018e903-4b59-4cf6-a625-90028acd09e0",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->32115454]
}, Open  ]],
Cell[5507, 148, 400, 7, 33, "Output",ExpressionUUID->"a88e3d4e-8194-4cad-ace4-8f2fd16ca75c"],
Cell[CellGroupData[{
Cell[5932, 159, 3515, 81, 52, "TestUI",ExpressionUUID->"475da004-3b39-46ad-a3bf-28fb5c844916",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[9450, 242, 974, 26, 144, "Code",ExpressionUUID->"54aa359b-053b-4a5c-a1e0-85582a094130",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->20161153]
}, Open  ]],
Cell[10439, 271, 290, 6, 33, "Output",ExpressionUUID->"fe8cda38-75b9-4375-8e4f-b645178b9fa6"]
}, Open  ]]
}, Open  ]]
}
]
*)

