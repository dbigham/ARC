(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     17068,        412]
NotebookOptionsPosition[     10470,        255]
NotebookOutlinePosition[     16363,        398]
CellTagsIndexPosition[     16320,        395]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ARCMappingToObjectWithOverlappingFilledInPixels", "Title",ExpressionUUID->"c189f878-5ebf-4a33-a801-a7235949c5dd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"RunUnitTests", "[", 
  "ARCMappingToObjectWithOverlappingFilledInPixels", "]"}]}], "Code",
 InitializationCell->False,
 CellLabel->"In[69]:=",ExpressionUUID->"38f5d84a-bf1e-4ba9-a731-d62f2afdc6da"],

Cell[CellGroupData[{

Cell["Tests", "Section",ExpressionUUID->"5e54525e-fa18-4a00-8f79-aaca96f7baee"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCMappingToObjectWithOverlappingFilledInPixels-20220822-\
16LMWW", Daniel`ARC`ARCMappingToObjectWithOverlappingFilledInPixels, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20228221819422282], 25671948]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> 
            "ARCMappingToObjectWithOverlappingFilledInPixels-20220822-16LMWW"}\
; DevTools`TestingTools`Private`updateTestClicked[
           "ARCMappingToObjectWithOverlappingFilledInPixels-20220822-16LMWW", 
            Daniel`ARC`ARCMappingToObjectWithOverlappingFilledInPixels, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20228221819422282], "CellID" -> 25671948, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCMappingToObjectWithOverlappingFilledInPixels-20220822-16LMWW", 
           Daniel`ARC`ARCMappingToObjectWithOverlappingFilledInPixels, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20228221819422282], None], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{
          "ARCMappingToObjectWithOverlappingFilledInPixels-20220822-16LMWW"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20228221819422282; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20228221819422282], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20228221819422282 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20228221819422282 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20228221819422282, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20228221819422282 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{840., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20228221819422282}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.8701955816210876`*^9},ExpressionUUID->"10d00cb7-153d-4d5f-b8e9-\
d60201b69248"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ARCMappingToObjectWithOverlappingFilledInPixels", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"<|", "\n", "\t\t", 
     RowBox[{
      RowBox[{"\"\<PixelPositions\>\"", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"4", ",", " ", "3"}], "}"}], "}"}]}], ",", "\n", "\t\t", 
      RowBox[{"\"\<Position\>\"", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"4", ",", " ", "3"}], "}"}]}]}], "\n", "\t", "|>"}], ",", 
    "\n", "\t", 
    RowBox[{"{", "\n", "\t\t", 
     RowBox[{
      RowBox[{"<|", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"\"\<Image\>\"", " ", "->", " ", 
         RowBox[{"ARCScene", "[", "\n", "                ", 
          RowBox[{"{", "\n", "                    ", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"2", ",", " ", 
              RowBox[{"-", "1"}], ",", " ", 
              RowBox[{"-", "1"}], ",", " ", 
              RowBox[{"-", "1"}], ",", " ", "2"}], "}"}], ",", "\n", 
            "                    ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", " ", "2", ",", " ", 
              RowBox[{"-", "1"}], ",", " ", "2", ",", " ", 
              RowBox[{"-", "1"}]}], "}"}], ",", "\n", "                    ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", " ", 
              RowBox[{"-", "1"}], ",", " ", "2", ",", " ", 
              RowBox[{"-", "1"}], ",", " ", 
              RowBox[{"-", "1"}]}], "}"}], ",", "\n", "                    ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", " ", "2", ",", " ", 
              RowBox[{"-", "1"}], ",", " ", "2", ",", " ", 
              RowBox[{"-", "1"}]}], "}"}], ",", "\n", "                    ", 
            RowBox[{"{", 
             RowBox[{"2", ",", " ", 
              RowBox[{"-", "1"}], ",", " ", 
              RowBox[{"-", "1"}], ",", " ", 
              RowBox[{"-", "1"}], ",", " ", "2"}], "}"}]}], "\n", 
           "                ", "}"}], "\n", "            ", "]"}]}], ",", 
        "\n", "\t\t\t", 
        RowBox[{"\"\<PixelPositions\>\"", " ", "->", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", " ", "1"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"2", ",", " ", "5"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"3", ",", " ", "2"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"3", ",", " ", "4"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"4", ",", " ", "3"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"5", ",", " ", "2"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"5", ",", " ", "4"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"6", ",", " ", "1"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"6", ",", " ", "5"}], "}"}]}], "}"}]}], ",", "\n", 
        "\t\t\t", 
        RowBox[{"\"\<Position\>\"", " ", "->", " ", 
         RowBox[{"{", 
          RowBox[{"2", ",", " ", "1"}], "}"}]}]}], "\n", "\t\t", "|>"}], ",", 
      "\n", "\t\t", 
      RowBox[{"<|", "\n", "\t\t", 
       RowBox[{"\"\<PixelPositions\>\"", " ", "->", " ", 
        RowBox[{"{", "\n", "\t\t\t\t", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"6", ",", " ", "7"}], "}"}], ",", "\n", "\t\t\t\t", 
          RowBox[{"{", 
           RowBox[{"6", ",", " ", "11"}], "}"}], ",", "\n", "\t\t\t\t", 
          RowBox[{"{", 
           RowBox[{"7", ",", " ", "8"}], "}"}], ",", "\n", "\t\t\t\t", 
          RowBox[{"{", 
           RowBox[{"7", ",", " ", "10"}], "}"}], ",", "\n", "\t\t\t\t", 
          RowBox[{"{", 
           RowBox[{"8", ",", " ", "9"}], "}"}], ",", "\n", "\t\t\t\t", 
          RowBox[{"{", 
           RowBox[{"9", ",", " ", "8"}], "}"}], ",", "\n", "\t\t\t\t", 
          RowBox[{"{", 
           RowBox[{"9", ",", " ", "10"}], "}"}], ",", "\n", "\t\t\t\t", 
          RowBox[{"{", 
           RowBox[{"10", ",", " ", "7"}], "}"}], ",", "\n", "\t\t\t\t", 
          RowBox[{"{", 
           RowBox[{"10", ",", " ", "11"}], "}"}]}], "\n", "\t\t\t", "}"}]}], 
       "\n", "\t\t", "|>"}]}], "\n", "\t", "}"}]}], "\n", "]"}], " ", "//", 
  " ", "Indent3"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.8701954654350815`*^9, 3.8701955816210876`*^9}},
 CellLabel->"In[196]:=",
 CellID->25671948,
 "TestId" -> 
 "ARCMappingToObjectWithOverlappingFilledInPixels-20220822-16LMWW",\
ExpressionUUID->"5f806c17-6dc9-4e81-82b5-f75b04d6066c"]
}, Open  ]],

Cell[BoxData["\<\"<|\\\"PixelPositions\\\" -> {{4, 3}}, \\\"Position\\\" -> \
{4, 3}|> -> <|\\n    \\\"Image\\\" -> ARCScene[\\n        {\\n            {2, \
-1, -1, -1, 2},\\n            {-1, 2, -1, 2, -1},\\n            {-1, -1, 2, \
-1, -1},\\n            {-1, 2, -1, 2, -1},\\n            {2, -1, -1, -1, \
2}\\n        }\\n    ],\\n    \\\"PixelPositions\\\" -> {{2, 1}, {2, 5}, {3, \
2}, {3, 4}, {4, 3}, {5, 2}, {5, 4}, {6, 1}, {6, 5}},\\n    \\\"Position\\\" \
-> <|\\\"RelativePosition\\\" -> {-2, -2}, \\\"Y\\\" -> 2, \\\"X\\\" -> \
1|>\\n|>\"\>"], "Output",
 CellChangeTimes->{
  3.8701954214167347`*^9, {3.8701955227240314`*^9, 3.8701955777877493`*^9}, 
   3.870210741422653*^9},
 CellLabel->
  "Out[197]=",ExpressionUUID->"1d0a0f99-33ba-4776-9ad2-a15e7d19a17d"]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Local",
WindowSize->{958, 980},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
Visible->True,
DockedCells->{
  Cell[
   BoxData[
    DynamicBox[
     ToBoxes[
      Column[{
        Row[{
          Button["New Test", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`NewFunctionCell[
            Daniel`ARC`ARCMappingToObjectWithOverlappingFilledInPixels], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20228221815331470]], ImageSize -> {95., 40}, 
           Method -> "Queued"], " ", 
          Button["Add Tests to File", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`CreateUnitTests[
            Daniel`ARC`ARCMappingToObjectWithOverlappingFilledInPixels, 
             "SubTest" -> None], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20228221815331470]], ImageSize -> {162.5, 40}, 
           Method -> "Queued"], " ", 
          Button[
          "Run Tests", 
           DevTools`TestingTools`RunUnitTestsInNotebook[
            Daniel`ARC`ARCMappingToObjectWithOverlappingFilledInPixels]; Null,
            ImageSize -> {102.5, 40}, Method -> "Queued"], " ", 
          Button["Edit Tests", 
           DevTools`TestingTools`EditUnitTests[
           Daniel`ARC`ARCMappingToObjectWithOverlappingFilledInPixels], 
           ImageSize -> {110., 40}, Method -> "Queued"], " ", 
          Button["Edit Function", 
           DevTools`SourceTools`EditFunction[
           Daniel`ARC`ARCMappingToObjectWithOverlappingFilledInPixels], 
           ImageSize -> {132.5, 40}, Method -> "Queued"], " ", 
          Row[{
            
            DynamicModule[{
             DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
              "Capture"}, 
             Button[
              Dynamic[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel], 
              If[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel === 
               "Capture", 
               DevTools`TestingTools`FunctionCapture`EnableFunctionCapture[
                Daniel`ARC`ARCMappingToObjectWithOverlappingFilledInPixels]; 
               DevTools`TestingTools`FunctionCapture`\
RegisterFunctionCaptureNotebook[
                Daniel`ARC`ARCMappingToObjectWithOverlappingFilledInPixels, 
                 InputNotebook[]]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Release"; Null, 
               DevTools`TestingTools`FunctionCapture`DisableFunctionCapture[
                Daniel`ARC`ARCMappingToObjectWithOverlappingFilledInPixels]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Capture"; Null], ImageSize -> {100, 40}, Method -> "Queued"],
              DynamicModuleValues :> {}], 
            Button["?", 
             DevTools`TestingTools`FunctionCapture`CaptureFunctionHelp[], 
             ImageSize -> {30, 40}, Method -> "Queued"]}], " ", 
          Row[{
            Button["<", 
             DevTools`NotebookTools`MoveNotebook["Left"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"], 
            Button[">", 
             DevTools`NotebookTools`MoveNotebook["Right"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"]}]}], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20228221815331470; If[
          And[
           ValueQ[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20228221815331470], 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20228221815331470 =!= "", 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20228221815331470 =!= Null], 
          (If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {"MaxHeight" -> 300},
              "NakedSection"]], 
           Framed[#, FrameStyle -> None, FrameMargins -> 2], 
           
           Framed[#, FrameStyle -> LightGray, Background -> White, 
            FrameMargins -> 15]]& )[
           Grid[{{
              Pane[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20228221815331470, "ImageSize" -> {Full, {0, 
                  OptionValue[
                  DevTools`NotebookTools`DynamicOutputSection, {
                   "MaxHeight" -> 300}, "MaxHeight"]}}, Scrollbars -> 
               Automatic, FrameMargins -> 0]}, 
             If[
              TrueQ[
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {
                "MaxHeight" -> 300}, "NakedSection"]], 
              Apply[Sequence, {}], {
               Button[
               "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20228221815331470 = "", 
                ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
            Alignment -> {Left, Top}]], 
          Apply[Sequence, {}]]}], StandardForm], 
     TrackedSymbols :> {
      DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20228221815331470}]], "DockedCell"]},
TaggingRules->{
 "CreateNamedNotebook2Args" -> {
   "ARCMappingToObjectWithOverlappingFilledInPixels", "Type" -> "Function", 
    "GenerateNotebookArgs" -> {
     "Function" -> 
      Daniel`ARC`ARCMappingToObjectWithOverlappingFilledInPixels}, 
    "ReturnNotebook" -> True}},
InputAutoReplacements->{},
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"86a9fc90-042a-40bc-9aa6-988a814f6d94"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 119, 0, 160, "Title",ExpressionUUID->"c189f878-5ebf-4a33-a801-a7235949c5dd"],
Cell[702, 24, 281, 6, 54, "Code",ExpressionUUID->"38f5d84a-bf1e-4ba9-a731-d62f2afdc6da",
 InitializationCell->False],
Cell[CellGroupData[{
Cell[1008, 34, 79, 0, 67, "Section",ExpressionUUID->"5e54525e-fa18-4a00-8f79-aaca96f7baee"],
Cell[CellGroupData[{
Cell[1112, 38, 3803, 86, 52, "TestUI",ExpressionUUID->"10d00cb7-153d-4d5f-b8e9-d60201b69248",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[4918, 126, 4736, 110, 648, "Code",ExpressionUUID->"5f806c17-6dc9-4e81-82b5-f75b04d6066c",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->25671948]
}, Open  ]],
Cell[9669, 239, 773, 12, 274, "Output",ExpressionUUID->"1d0a0f99-33ba-4776-9ad2-a15e7d19a17d"]
}, Open  ]]
}, Open  ]]
}
]
*)

