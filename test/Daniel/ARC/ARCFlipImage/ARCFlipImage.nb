(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     22439,        572]
NotebookOptionsPosition[     15386,        406]
NotebookOutlinePosition[     20793,        540]
CellTagsIndexPosition[     20750,        537]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ARCFlipImage", "Title",ExpressionUUID->"fc9511a8-83c2-4a7b-be0f-47a75db7e768"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"RunUnitTests", "[", "ARCFlipImage", "]"}]}], "Code",
 InitializationCell->False,
 CellChangeTimes->{{3.8715444887649927`*^9, 3.871544490768291*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"98c426b0-4ccc-4194-be35-4f9c2ff34fb7"],

Cell[CellGroupData[{

Cell["Tests", "Section",ExpressionUUID->"04655b3a-b155-459d-b0a1-7197ebd911cc"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCFlipImage-20220907-QPC0AY", Daniel`ARC`ARCFlipImage, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022979214657], 25857124, "SubTest" -> None]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> "ARCFlipImage-20220907-QPC0AY"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCFlipImage-20220907-QPC0AY", Daniel`ARC`ARCFlipImage, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022979214657], "CellID" -> 25857124, "SubTest" -> 
            None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCFlipImage-20220907-QPC0AY", Daniel`ARC`ARCFlipImage, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022979214657], 
           Utility`FilterOptions[
           "SubTest" -> None, 
            DevTools`TestingTools`Private`openInEditorClicked]], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCFlipImage-20220907-QPC0AY"}, ImageSize -> {Full, Automatic},
           Alignment -> {Right, Center}]}}], ImageSize -> {Full, Automatic}, 
      FrameStyle -> GrayLevel[0.8], FrameMargins -> 10], 
     DevTools`NotebookTools`Private`DynamicOutputSectionVariable2022979214657; 
     If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022979214657], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022979214657 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022979214657 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022979214657, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022979214657 = "", ImageSize -> {100, 33}]}]}, 
         Spacings -> {0, 1}, Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{840., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`DynamicOutputSectionVariable2022979214657}]]\
, "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.871544533556136*^9},ExpressionUUID->"a1da806d-d18c-4006-aaea-\
cab370525d00"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"ARCFlipImage", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "1"}], "}"}]}], "}"}], ",", " ", 
   "\"\<Vertical\>\""}], "]"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.8715444983326263`*^9, 3.8715445009097185`*^9}, 
   3.8715445335571413`*^9},
 CellLabel->"In[55]:=",
 CellID->25857124,
 "TestId" -> 
 "ARCFlipImage-20220907-QPC0AY",ExpressionUUID->"e0c0b4d0-b81c-43b2-9aa5-\
c151f5d3ee8b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8715445012796316`*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"ae7c29bb-2975-477c-8037-d9cae76dfb66"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCFlipImage-20220907-ZS9QIP", Daniel`ARC`ARCFlipImage, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022979214660], 5829033, "SubTest" -> None]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> "ARCFlipImage-20220907-ZS9QIP"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCFlipImage-20220907-ZS9QIP", Daniel`ARC`ARCFlipImage, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022979214660], "CellID" -> 5829033, "SubTest" -> 
            None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCFlipImage-20220907-ZS9QIP", Daniel`ARC`ARCFlipImage, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022979214660], 
           Utility`FilterOptions[
           "SubTest" -> None, 
            DevTools`TestingTools`Private`openInEditorClicked]], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCFlipImage-20220907-ZS9QIP"}, ImageSize -> {Full, Automatic},
           Alignment -> {Right, Center}]}}], ImageSize -> {Full, Automatic}, 
      FrameStyle -> GrayLevel[0.8], FrameMargins -> 10], 
     DevTools`NotebookTools`Private`DynamicOutputSectionVariable2022979214660; 
     If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022979214660], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022979214660 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022979214660 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022979214660, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022979214660 = "", ImageSize -> {100, 33}]}]}, 
         Spacings -> {0, 1}, Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{840., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`DynamicOutputSectionVariable2022979214660}]]\
, "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.871544533698547*^9},ExpressionUUID->"130f284f-af73-42d2-bec6-\
1b7d635e526f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"ARCFlipImage", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "1"}], "}"}]}], "}"}], ",", " ", 
   "\"\<Horizontal\>\""}], "]"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.8715444983326263`*^9, 3.871544533698547*^9}},
 CellLabel->"In[59]:=",
 CellID->5829033,
 "TestId" -> 
 "ARCFlipImage-20220907-ZS9QIP",ExpressionUUID->"a8edf81e-bfbc-4a98-8ab4-\
b20e94c20e39"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8715445063828754`*^9, 3.871544516752658*^9}},
 CellLabel->"Out[60]=",ExpressionUUID->"b8f7cd8d-459f-4f9c-998a-d2086bc82c89"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCFlipImage-20220907-M9GPX1", Daniel`ARC`ARCFlipImage, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022979214663], 6380923, "SubTest" -> None]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> "ARCFlipImage-20220907-M9GPX1"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCFlipImage-20220907-M9GPX1", Daniel`ARC`ARCFlipImage, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022979214663], "CellID" -> 6380923, "SubTest" -> 
            None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCFlipImage-20220907-M9GPX1", Daniel`ARC`ARCFlipImage, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022979214663], 
           Utility`FilterOptions[
           "SubTest" -> None, 
            DevTools`TestingTools`Private`openInEditorClicked]], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCFlipImage-20220907-M9GPX1"}, ImageSize -> {Full, Automatic},
           Alignment -> {Right, Center}]}}], ImageSize -> {Full, Automatic}, 
      FrameStyle -> GrayLevel[0.8], FrameMargins -> 10], 
     DevTools`NotebookTools`Private`DynamicOutputSectionVariable2022979214663; 
     If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022979214663], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022979214663 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022979214663 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022979214663, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022979214663 = "", ImageSize -> {100, 33}]}]}, 
         Spacings -> {0, 1}, Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{840., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`DynamicOutputSectionVariable2022979214663}]]\
, "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.8715445338419557`*^9},ExpressionUUID->"54330f03-cb0a-4dc9-ae8d-\
e87c20ab717c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"ARCFlipImage", "[", 
  RowBox[{
   RowBox[{"ARCScene", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", " ", "0"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "1"}], "}"}]}], "}"}], "]"}], ",", " ", 
   "\"\<Vertical\>\""}], "]"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.8715444983326263`*^9, 3.8715445338419557`*^9}},
 CellLabel->"In[63]:=",
 CellID->6380923,
 "TestId" -> 
 "ARCFlipImage-20220907-M9GPX1",ExpressionUUID->"b352a949-6729-45e2-a2e5-\
47ccdef87ef7"]
}, Open  ]],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>"}
   },
   AutoDelete->False,
   FrameStyle->{
     AbsoluteThickness[1], 
     GrayLevel[0.5]},
   GridBoxBackground->{
    "Columns" -> {{None}}, "Rows" -> {{None}}, 
     "ItemsIndexed" -> {{1, 1} -> GrayLevel[0], {1, 2} -> 
       RGBColor[0., 0.4549019607843137, 0.8509803921568627], {2, 1} -> 
       RGBColor[0., 0.4549019607843137, 0.8509803921568627], {2, 2} -> 
       GrayLevel[0]}},
   GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
   GridBoxItemSize->{"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.871544528730534*^9, 3.871544531994976*^9}},
 CellLabel->"Out[64]=",ExpressionUUID->"b46c8ada-7614-47d5-a7c3-04a2254580e1"]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Local",
WindowSize->{958, 980},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
DockedCells->{
  Cell[
   BoxData[
    DynamicBox[
     ToBoxes[
      Column[{
        Row[{
          Button["New Test", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`NewFunctionCell[Daniel`ARC`ARCFlipImage], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229785844340]], ImageSize -> {95., 40}, Method -> 
           "Queued"], " ", 
          Button["Add Tests to File", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`CreateUnitTests[
            Daniel`ARC`ARCFlipImage, "SubTest" -> None], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229785844340]], ImageSize -> {162.5, 40}, 
           Method -> "Queued"], " ", 
          Button[
          "Run Tests", 
           DevTools`TestingTools`RunUnitTestsInNotebook[
            Daniel`ARC`ARCFlipImage]; Null, ImageSize -> {102.5, 40}, Method -> 
           "Queued"], " ", 
          Button["Edit Tests", 
           DevTools`TestingTools`EditUnitTests[
           Daniel`ARC`ARCFlipImage, "SubTest" -> None], 
           ImageSize -> {110., 40}, Method -> "Queued"], " ", 
          Button["Edit Function", 
           DevTools`SourceTools`EditFunction[Daniel`ARC`ARCFlipImage], 
           ImageSize -> {132.5, 40}, Method -> "Queued"], " ", 
          Row[{
            
            DynamicModule[{
             DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
              "Capture"}, 
             Button[
              Dynamic[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel], 
              If[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel === 
               "Capture", 
               DevTools`TestingTools`FunctionCapture`EnableFunctionCapture[
                Daniel`ARC`ARCFlipImage]; 
               DevTools`TestingTools`FunctionCapture`\
RegisterFunctionCaptureNotebook[Daniel`ARC`ARCFlipImage, 
                 InputNotebook[]]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Release"; Null, 
               DevTools`TestingTools`FunctionCapture`DisableFunctionCapture[
                Daniel`ARC`ARCFlipImage]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Capture"; Null], ImageSize -> {100, 40}, Method -> "Queued"],
              DynamicModuleValues :> {}], 
            Button["?", 
             DevTools`TestingTools`FunctionCapture`CaptureFunctionHelp[], 
             ImageSize -> {30, 40}, Method -> "Queued"]}], " ", 
          Row[{
            Button["<", 
             DevTools`NotebookTools`MoveNotebook["Left"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"], 
            Button[">", 
             DevTools`NotebookTools`MoveNotebook["Right"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"]}]}], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229785844340; If[
          And[
           ValueQ[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229785844340], 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229785844340 =!= "", 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229785844340 =!= Null], 
          (If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {"MaxHeight" -> 300},
              "NakedSection"]], 
           Framed[#, FrameStyle -> None, FrameMargins -> 2], 
           
           Framed[#, FrameStyle -> LightGray, Background -> White, 
            FrameMargins -> 15]]& )[
           Grid[{{
              Pane[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229785844340, "ImageSize" -> {Full, {0, 
                  OptionValue[
                  DevTools`NotebookTools`DynamicOutputSection, {
                   "MaxHeight" -> 300}, "MaxHeight"]}}, Scrollbars -> 
               Automatic, FrameMargins -> 0]}, 
             If[
              TrueQ[
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {
                "MaxHeight" -> 300}, "NakedSection"]], 
              Apply[Sequence, {}], {
               Button[
               "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229785844340 = "", ImageSize -> {100, 33}]}]}, 
            Spacings -> {0, 1}, Alignment -> {Left, Top}]], 
          Apply[Sequence, {}]]}], StandardForm], 
     TrackedSymbols :> {
      DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229785844340}]], "DockedCell"]},
TaggingRules->{
 "CreateNamedNotebook2Args" -> {
   "ARCFlipImage", "Type" -> "Function", 
    "GenerateNotebookArgs" -> {"Function" -> Daniel`ARC`ARCFlipImage}, 
    "ReturnNotebook" -> True}},
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"b07b5465-0842-488a-bd11-e40de7b9a2be"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 84, 0, 98, "Title",ExpressionUUID->"fc9511a8-83c2-4a7b-be0f-47a75db7e768"],
Cell[667, 24, 311, 6, 54, "Code",ExpressionUUID->"98c426b0-4ccc-4194-be35-4f9c2ff34fb7",
 InitializationCell->False],
Cell[CellGroupData[{
Cell[1003, 34, 79, 0, 67, "Section",ExpressionUUID->"04655b3a-b155-459d-b0a1-7197ebd911cc"],
Cell[CellGroupData[{
Cell[1107, 38, 3565, 82, 52, "TestUI",ExpressionUUID->"a1da806d-d18c-4006-aaea-cab370525d00",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[4675, 122, 670, 20, 54, "Code",ExpressionUUID->"e0c0b4d0-b81c-43b2-9aa5-c151f5d3ee8b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->25857124]
}, Open  ]],
Cell[5360, 145, 294, 8, 33, "Output",ExpressionUUID->"ae7c29bb-2975-477c-8037-d9cae76dfb66"],
Cell[CellGroupData[{
Cell[5679, 157, 3563, 82, 52, "TestUI",ExpressionUUID->"130f284f-af73-42d2-bec6-1b7d635e526f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[9245, 241, 641, 19, 54, "Code",ExpressionUUID->"a8edf81e-bfbc-4a98-8ab4-b20e94c20e39",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->5829033]
}, Open  ]],
Cell[9901, 263, 318, 8, 33, "Output",ExpressionUUID->"b8f7cd8d-459f-4f9c-998a-d2086bc82c89"],
Cell[CellGroupData[{
Cell[10244, 275, 3565, 82, 52, "TestUI",ExpressionUUID->"54330f03-cb0a-4dc9-ae8d-e87c20ab717c",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[13812, 359, 683, 20, 54, "Code",ExpressionUUID->"b352a949-6729-45e2-a2e5-47ccdef87ef7",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->6380923]
}, Open  ]],
Cell[14510, 382, 848, 20, 71, "Output",ExpressionUUID->"b46c8ada-7614-47d5-a7c3-04a2254580e1"]
}, Open  ]]
}, Open  ]]
}
]
*)

