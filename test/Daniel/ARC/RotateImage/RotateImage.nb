(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     16465,        423]
NotebookOptionsPosition[      9851,        266]
NotebookOutlinePosition[     15295,        400]
CellTagsIndexPosition[     15252,        397]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["RotateImage", "Title",ExpressionUUID->"41cf71fa-6e84-403b-b7f5-0fdfdb94bcee"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"RunUnitTests", "[", "RotateImage", "]"}]}], "Code",
 InitializationCell->False,
 CellLabel->"In[29]:=",ExpressionUUID->"f122f4b3-fbb8-417a-a08b-6146559c6be6"],

Cell[CellGroupData[{

Cell["Tests", "Section",ExpressionUUID->"d49ff317-451e-4eb2-a9e0-9dfbcce1e24a"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "RotateImage-20220722-Q3VMGV", Daniel`ARC`RotateImage, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022722183617333], 39470999]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> "RotateImage-20220722-Q3VMGV"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "RotateImage-20220722-Q3VMGV", Daniel`ARC`RotateImage, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022722183617333], "CellID" -> 39470999, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "RotateImage-20220722-Q3VMGV", Daniel`ARC`RotateImage, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022722183617333], None], ImageSize -> {140., 25},
           Method -> "Queued"], 
         Row[{"RotateImage-20220722-Q3VMGV"}, ImageSize -> {Full, Automatic}, 
          Alignment -> {Right, Center}]}}], ImageSize -> {Full, Automatic}, 
      FrameStyle -> GrayLevel[0.8], FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022722183617333; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022722183617333], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022722183617333 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022722183617333 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022722183617333, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022722183617333 = "", ImageSize -> {100, 33}]}]},
          Spacings -> {0, 1}, Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{840., {21., 27.}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022722183617333}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.86751817708982*^9},ExpressionUUID->"e074bcbf-c5e4-40eb-ac61-47a6f54d9dde"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"RotateImage", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "1"}], "}"}]}], "}"}], ",", " ", "90"}], 
  "]"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.8675181522851725`*^9, 3.86751817708982*^9}},
 CellLabel->"In[25]:=",
 CellID->39470999,
 "TestId" -> 
 "RotateImage-20220722-Q3VMGV",ExpressionUUID->"d0e80dbf-dead-455e-9513-\
9a6abd160299"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8675181588335533`*^9, 3.8675182029612055`*^9}},
 CellLabel->"Out[26]=",ExpressionUUID->"e738ea7f-cacf-4b14-bc1b-2cfb408b9336"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "RotateImage-20220722-DURFWR", Daniel`ARC`RotateImage, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022722183645345], 32890199]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> "RotateImage-20220722-DURFWR"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "RotateImage-20220722-DURFWR", Daniel`ARC`RotateImage, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022722183645345], "CellID" -> 32890199, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "RotateImage-20220722-DURFWR", Daniel`ARC`RotateImage, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022722183645345], None], ImageSize -> {140., 25},
           Method -> "Queued"], 
         Row[{"RotateImage-20220722-DURFWR"}, ImageSize -> {Full, Automatic}, 
          Alignment -> {Right, Center}]}}], ImageSize -> {Full, Automatic}, 
      FrameStyle -> GrayLevel[0.8], FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022722183645345; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022722183645345], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022722183645345 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022722183645345 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022722183645345, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022722183645345 = "", ImageSize -> {100, 33}]}]},
          Spacings -> {0, 1}, Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{840., {21., 27.}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022722183645345}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.8675182052912216`*^9},ExpressionUUID->"6cec9115-5e56-4f03-97a1-\
2ceb03087bd8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"RotateImage", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "1"}], "}"}]}], "}"}], ",", " ", "180"}], 
  "]"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.8675181522851725`*^9, 3.8675181827610445`*^9}},
 CellLabel->"In[27]:=",
 CellID->32890199,
 "TestId" -> 
 "RotateImage-20220722-DURFWR",ExpressionUUID->"5c025eea-ac58-483b-ad98-\
13806b701983"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8675181831097436`*^9, 3.867518204232355*^9}},
 CellLabel->"Out[28]=",ExpressionUUID->"f7d73fbe-0097-4fbd-91d3-465b333709d2"]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Local",
WindowSize->{958, 980},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
DockedCells->{
  Cell[
   BoxData[
    DynamicBox[
     ToBoxes[
      Column[{
        Row[{
          Button["New Test", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`NewFunctionCell[Daniel`ARC`RotateImage], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022722183442326]], ImageSize -> {95., 40}, 
           Method -> "Queued"], " ", 
          Button["Add Tests to File", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`CreateUnitTests[
            Daniel`ARC`RotateImage, "SubTest" -> None], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022722183442326]], ImageSize -> {162.5, 40}, 
           Method -> "Queued"], " ", 
          Button[
          "Run Tests", 
           DevTools`TestingTools`RunUnitTestsInNotebook[
            Daniel`ARC`RotateImage]; Null, ImageSize -> {102.5, 40}, Method -> 
           "Queued"], " ", 
          Button["Edit Tests", 
           DevTools`TestingTools`EditUnitTests[Daniel`ARC`RotateImage], 
           ImageSize -> {110., 40}, Method -> "Queued"], " ", 
          Button["Edit Function", 
           DevTools`SourceTools`EditFunction[Daniel`ARC`RotateImage], 
           ImageSize -> {132.5, 40}, Method -> "Queued"], " ", 
          Row[{
            
            DynamicModule[{
             DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
              "Capture"}, 
             Button[
              Dynamic[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel], 
              If[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel === 
               "Capture", 
               DevTools`TestingTools`FunctionCapture`EnableFunctionCapture[
                Daniel`ARC`RotateImage]; 
               DevTools`TestingTools`FunctionCapture`\
RegisterFunctionCaptureNotebook[Daniel`ARC`RotateImage, 
                 InputNotebook[]]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Release"; Null, 
               DevTools`TestingTools`FunctionCapture`DisableFunctionCapture[
                Daniel`ARC`RotateImage]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Capture"; Null], ImageSize -> {100, 40}, Method -> "Queued"],
              DynamicModuleValues :> {}], 
            Button["?", 
             DevTools`TestingTools`FunctionCapture`CaptureFunctionHelp[], 
             ImageSize -> {30, 40}, Method -> "Queued"]}], " ", 
          Row[{
            Button["<", 
             DevTools`NotebookTools`MoveNotebook["Left"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"], 
            Button[">", 
             DevTools`NotebookTools`MoveNotebook["Right"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"]}]}], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022722183442326; If[
          And[
           ValueQ[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022722183442326], 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022722183442326 =!= "", 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022722183442326 =!= Null], 
          (If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {"MaxHeight" -> 300},
              "NakedSection"]], 
           Framed[#, FrameStyle -> None, FrameMargins -> 2], 
           
           Framed[#, FrameStyle -> LightGray, Background -> White, 
            FrameMargins -> 15]]& )[
           Grid[{{
              Pane[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022722183442326, "ImageSize" -> {Full, {0, 
                  OptionValue[
                  DevTools`NotebookTools`DynamicOutputSection, {
                   "MaxHeight" -> 300}, "MaxHeight"]}}, Scrollbars -> 
               Automatic, FrameMargins -> 0]}, 
             If[
              TrueQ[
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {
                "MaxHeight" -> 300}, "NakedSection"]], 
              Apply[Sequence, {}], {
               Button[
               "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022722183442326 = "", ImageSize -> {100, 33}]}]},
             Spacings -> {0, 1}, Alignment -> {Left, Top}]], 
          Apply[Sequence, {}]]}], StandardForm], 
     TrackedSymbols :> {
      DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022722183442326}]], "DockedCell"]},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, 
  "CreateNamedNotebook2Args" -> {
   "RotateImage", "Type" -> "Function", 
    "GenerateNotebookArgs" -> {"Function" -> Daniel`ARC`RotateImage}, 
    "ReturnNotebook" -> True}},
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"1aad0a37-faf3-41fb-ba43-6a8ae072dc4c"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 83, 0, 96, "Title",ExpressionUUID->"41cf71fa-6e84-403b-b7f5-0fdfdb94bcee"],
Cell[666, 24, 242, 5, 53, "Code",ExpressionUUID->"f122f4b3-fbb8-417a-a08b-6146559c6be6",
 InitializationCell->False],
Cell[CellGroupData[{
Cell[933, 33, 79, 0, 67, "Section",ExpressionUUID->"d49ff317-451e-4eb2-a9e0-9dfbcce1e24a"],
Cell[CellGroupData[{
Cell[1037, 37, 3417, 78, 50, "TestUI",ExpressionUUID->"e074bcbf-c5e4-40eb-ac61-47a6f54d9dde",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[4457, 117, 622, 19, 53, "Code",ExpressionUUID->"d0e80dbf-dead-455e-9513-9a6abd160299",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->39470999]
}, Open  ]],
Cell[5094, 139, 320, 8, 32, "Output",ExpressionUUID->"e738ea7f-cacf-4b14-bc1b-2cfb408b9336"],
Cell[CellGroupData[{
Cell[5439, 151, 3422, 79, 50, "TestUI",ExpressionUUID->"6cec9115-5e56-4f03-97a1-2ceb03087bd8",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[8864, 232, 626, 19, 53, "Code",ExpressionUUID->"5c025eea-ac58-483b-ad98-13806b701983",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->32890199]
}, Open  ]],
Cell[9505, 254, 318, 8, 32, "Output",ExpressionUUID->"f7d73fbe-0097-4fbd-91d3-465b333709d2"]
}, Open  ]]
}, Open  ]]
}
]
*)

