(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     17365,        449]
NotebookOptionsPosition[     11177,        300]
NotebookOutlinePosition[     16665,        435]
CellTagsIndexPosition[     16622,        432]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ARCPixelsAsScenes", "Title",ExpressionUUID->"a370cf46-fa66-40a1-817d-3c21a50c85b4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"RunUnitTests", "[", "ARCPixelsAsScenes", "]"}]}], "Code",
 InitializationCell->False,
 CellLabel->"In[20]:=",ExpressionUUID->"3aca3aae-98d7-4b5d-ad1e-28774dfed514"],

Cell[CellGroupData[{

Cell["Tests", "Section",ExpressionUUID->"c149770e-1ec6-4a8a-9b16-fbc1929eecc0"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCPixelsAsScenes-20220910-V9A3ZY", 
              Daniel`ARC`ARCPixelsAsScenes, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022910224326165], 93393706, "SubTest" -> None]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> "ARCPixelsAsScenes-20220910-V9A3ZY"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCPixelsAsScenes-20220910-V9A3ZY", Daniel`ARC`ARCPixelsAsScenes, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022910224326165], "CellID" -> 93393706, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCPixelsAsScenes-20220910-V9A3ZY", Daniel`ARC`ARCPixelsAsScenes, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022910224326165], 
           Utility`FilterOptions[
           "SubTest" -> None, 
            DevTools`TestingTools`Private`openInEditorClicked]], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCPixelsAsScenes-20220910-V9A3ZY"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022910224326165; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022910224326165], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022910224326165 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022910224326165 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022910224326165, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022910224326165 = "", ImageSize -> {100, 33}]}]},
          Spacings -> {0, 1}, Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{840., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022910224326165}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.871853006494425*^9},ExpressionUUID->"edcb06f2-0be8-41a7-a930-\
877249cca444"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"ARCPixelsAsScenes", "[", 
  RowBox[{"ARCScene", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "2", ",", " ", "3"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"4", ",", " ", "5", ",", " ", "6"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"7", ",", " ", "8", ",", " ", "9"}], "}"}]}], "}"}], "]"}], 
  "]"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.871852910644004*^9, 3.8718529232272463`*^9}, {
  3.8718530040672874`*^9, 3.8718530064954243`*^9}},
 CellLabel->"In[18]:=",
 CellID->93393706,
 "TestId" -> 
 "ARCPixelsAsScenes-20220910-V9A3ZY",ExpressionUUID->"56c79659-4892-4f3b-adc9-\
be9d4821ac5d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     TagBox[GridBox[{
        {"\<\"\"\>"}
       },
       AutoDelete->False,
       FrameStyle->{
         AbsoluteThickness[1], 
         GrayLevel[0.5]},
       GridBoxBackground->{
        "Columns" -> {{None}}, "Rows" -> {{None}}, 
         "ItemsIndexed" -> {{1, 1} -> 
           RGBColor[0., 0.4549019607843137, 0.8509803921568627]}},
       GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
       GridBoxItemSize->{"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}],
      "Grid"], ",", 
     TagBox[GridBox[{
        {"\<\"\"\>"}
       },
       AutoDelete->False,
       FrameStyle->{
         AbsoluteThickness[1], 
         GrayLevel[0.5]},
       GridBoxBackground->{
        "Columns" -> {{None}}, "Rows" -> {{None}}, 
         "ItemsIndexed" -> {{1, 1} -> 
           RGBColor[1., 0.2549019607843137, 0.21176470588235294`]}},
       GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
       GridBoxItemSize->{"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}],
      "Grid"], ",", 
     TagBox[GridBox[{
        {"\<\"\"\>"}
       },
       AutoDelete->False,
       FrameStyle->{
         AbsoluteThickness[1], 
         GrayLevel[0.5]},
       GridBoxBackground->{
        "Columns" -> {{None}}, "Rows" -> {{None}}, 
         "ItemsIndexed" -> {{1, 1} -> 
           RGBColor[0.1803921568627451, 0.8, 0.25098039215686274`]}},
       GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
       GridBoxItemSize->{"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}],
      "Grid"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[GridBox[{
        {"\<\"\"\>"}
       },
       AutoDelete->False,
       FrameStyle->{
         AbsoluteThickness[1], 
         GrayLevel[0.5]},
       GridBoxBackground->{
        "Columns" -> {{None}}, "Rows" -> {{None}}, 
         "ItemsIndexed" -> {{1, 1} -> RGBColor[1., 0.8627450980392157, 0.]}},
       GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
       GridBoxItemSize->{"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}],
      "Grid"], ",", 
     TagBox[GridBox[{
        {"\<\"\"\>"}
       },
       AutoDelete->False,
       FrameStyle->{
         AbsoluteThickness[1], 
         GrayLevel[0.5]},
       GridBoxBackground->{
        "Columns" -> {{None}}, "Rows" -> {{None}}, 
         "ItemsIndexed" -> {{1, 1} -> 
           RGBColor[
            0.6666666666666666, 0.6666666666666666, 0.6666666666666666]}},
       GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
       GridBoxItemSize->{"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}],
      "Grid"], ",", 
     TagBox[GridBox[{
        {"\<\"\"\>"}
       },
       AutoDelete->False,
       FrameStyle->{
         AbsoluteThickness[1], 
         GrayLevel[0.5]},
       GridBoxBackground->{
        "Columns" -> {{None}}, "Rows" -> {{None}}, 
         "ItemsIndexed" -> {{1, 1} -> 
           RGBColor[
            0.9411764705882353, 0.07058823529411765, 0.7450980392156863]}},
       GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
       GridBoxItemSize->{"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}],
      "Grid"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[GridBox[{
        {"\<\"\"\>"}
       },
       AutoDelete->False,
       FrameStyle->{
         AbsoluteThickness[1], 
         GrayLevel[0.5]},
       GridBoxBackground->{
        "Columns" -> {{None}}, "Rows" -> {{None}}, 
         "ItemsIndexed" -> {{1, 1} -> 
           RGBColor[1., 0.5215686274509804, 0.10588235294117647`]}},
       GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
       GridBoxItemSize->{"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}],
      "Grid"], ",", 
     TagBox[GridBox[{
        {"\<\"\"\>"}
       },
       AutoDelete->False,
       FrameStyle->{
         AbsoluteThickness[1], 
         GrayLevel[0.5]},
       GridBoxBackground->{
        "Columns" -> {{None}}, "Rows" -> {{None}}, 
         "ItemsIndexed" -> {{1, 1} -> 
           RGBColor[0.4980392156862745, 0.8588235294117647, 1.]}},
       GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
       GridBoxItemSize->{"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}],
      "Grid"], ",", 
     TagBox[GridBox[{
        {"\<\"\"\>"}
       },
       AutoDelete->False,
       FrameStyle->{
         AbsoluteThickness[1], 
         GrayLevel[0.5]},
       GridBoxBackground->{
        "Columns" -> {{None}}, "Rows" -> {{None}}, 
         "ItemsIndexed" -> {{1, 1} -> 
           RGBColor[
            0.5294117647058824, 0.047058823529411764`, 0.1450980392156863]}},
       GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
       GridBoxItemSize->{"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}],
      "Grid"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8718529235388355`*^9, 3.8718529260742064`*^9}, {
  3.8718529669967985`*^9, 3.8718530049061747`*^9}},
 CellLabel->"Out[19]=",ExpressionUUID->"c4378edd-38b5-4d14-8999-571ee57ea865"]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Local",
WindowSize->{958, 980},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
DockedCells->{
  Cell[
   BoxData[
    DynamicBox[
     ToBoxes[
      Column[{
        Row[{
          Button["New Test", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`NewFunctionCell[
            Daniel`ARC`ARCPixelsAsScenes], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022910224144150]], ImageSize -> {95., 40}, 
           Method -> "Queued"], " ", 
          Button["Add Tests to File", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`CreateUnitTests[
            Daniel`ARC`ARCPixelsAsScenes, "SubTest" -> None], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022910224144150]], ImageSize -> {162.5, 40}, 
           Method -> "Queued"], " ", 
          Button[
          "Run Tests", 
           DevTools`TestingTools`RunUnitTestsInNotebook[
            Daniel`ARC`ARCPixelsAsScenes]; Null, ImageSize -> {102.5, 40}, 
           Method -> "Queued"], " ", 
          Button["Edit Tests", 
           DevTools`TestingTools`EditUnitTests[
           Daniel`ARC`ARCPixelsAsScenes, "SubTest" -> None], 
           ImageSize -> {110., 40}, Method -> "Queued"], " ", 
          Button["Edit Function", 
           DevTools`SourceTools`EditFunction[Daniel`ARC`ARCPixelsAsScenes], 
           ImageSize -> {132.5, 40}, Method -> "Queued"], " ", 
          Row[{
            
            DynamicModule[{
             DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
              "Capture"}, 
             Button[
              Dynamic[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel], 
              If[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel === 
               "Capture", 
               DevTools`TestingTools`FunctionCapture`EnableFunctionCapture[
                Daniel`ARC`ARCPixelsAsScenes]; 
               DevTools`TestingTools`FunctionCapture`\
RegisterFunctionCaptureNotebook[Daniel`ARC`ARCPixelsAsScenes, 
                 InputNotebook[]]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Release"; Null, 
               DevTools`TestingTools`FunctionCapture`DisableFunctionCapture[
                Daniel`ARC`ARCPixelsAsScenes]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Capture"; Null], ImageSize -> {100, 40}, Method -> "Queued"],
              DynamicModuleValues :> {}], 
            Button["?", 
             DevTools`TestingTools`FunctionCapture`CaptureFunctionHelp[], 
             ImageSize -> {30, 40}, Method -> "Queued"]}], " ", 
          Row[{
            Button["<", 
             DevTools`NotebookTools`MoveNotebook["Left"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"], 
            Button[">", 
             DevTools`NotebookTools`MoveNotebook["Right"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"]}]}], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022910224144150; If[
          And[
           ValueQ[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022910224144150], 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022910224144150 =!= "", 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022910224144150 =!= Null], 
          (If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {"MaxHeight" -> 300},
              "NakedSection"]], 
           Framed[#, FrameStyle -> None, FrameMargins -> 2], 
           
           Framed[#, FrameStyle -> LightGray, Background -> White, 
            FrameMargins -> 15]]& )[
           Grid[{{
              Pane[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022910224144150, "ImageSize" -> {Full, {0, 
                  OptionValue[
                  DevTools`NotebookTools`DynamicOutputSection, {
                   "MaxHeight" -> 300}, "MaxHeight"]}}, Scrollbars -> 
               Automatic, FrameMargins -> 0]}, 
             If[
              TrueQ[
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {
                "MaxHeight" -> 300}, "NakedSection"]], 
              Apply[Sequence, {}], {
               Button[
               "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022910224144150 = "", ImageSize -> {100, 33}]}]},
             Spacings -> {0, 1}, Alignment -> {Left, Top}]], 
          Apply[Sequence, {}]]}], StandardForm], 
     TrackedSymbols :> {
      DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022910224144150}]], "DockedCell"]},
TaggingRules->{
 "CreateNamedNotebook2Args" -> {
   "ARCPixelsAsScenes", "Type" -> "Function", 
    "GenerateNotebookArgs" -> {"Function" -> Daniel`ARC`ARCPixelsAsScenes}, 
    "ReturnNotebook" -> True}},
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"110203a2-51cf-4bdb-b33b-1681ba2c3942"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 89, 0, 98, "Title",ExpressionUUID->"a370cf46-fa66-40a1-817d-3c21a50c85b4"],
Cell[672, 24, 248, 5, 54, "Code",ExpressionUUID->"3aca3aae-98d7-4b5d-ad1e-28774dfed514",
 InitializationCell->False],
Cell[CellGroupData[{
Cell[945, 33, 79, 0, 67, "Section",ExpressionUUID->"c149770e-1ec6-4a8a-9b16-fbc1929eecc0"],
Cell[CellGroupData[{
Cell[1049, 37, 3653, 84, 52, "TestUI",ExpressionUUID->"edcb06f2-0be8-41a7-a930-877249cca444",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[4705, 123, 812, 22, 54, "Code",ExpressionUUID->"56c79659-4892-4f3b-adc9-be9d4821ac5d",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->93393706]
}, Open  ]],
Cell[5532, 148, 5617, 148, 47, "Output",ExpressionUUID->"c4378edd-38b5-4d14-8999-571ee57ea865"]
}, Open  ]]
}, Open  ]]
}
]
*)

