(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[      7780,        207]
NotebookOptionsPosition[      1828,         61]
NotebookOutlinePosition[      7309,        197]
CellTagsIndexPosition[      7266,        194]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ARCNotebook", "Title",ExpressionUUID->"78c78647-6502-40d0-83f6-64b14c6f5215"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"RunUnitTests", "[", "ARCNotebook", "]"}]}], "Code",
 InitializationCell->
  False,ExpressionUUID->"b15e377f-e334-41cf-a0f7-5762e6e8b209"],

Cell[CellGroupData[{

Cell["Tests", "Section",ExpressionUUID->"f235feb2-44a7-4be1-9b5d-59bd74526282"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"ARCNotebook", "[", "\"\<7039B2D7\>\"", "]"}]}], "Code",
 InitializationCell->False,
 CellChangeTimes->{3.8686362196849465`*^9, 3.8708827410697055`*^9},
 CellLabel->
  "In[265]:=",ExpressionUUID->"fe9540e0-6b4d-48c6-8201-c6913f14bcb7"],

Cell[BoxData[
 TemplateBox[{
  "4ba6adcf-df93-4df1-9355-449a4a7f335b", "\"7039B2D7.nb\"", 
   "\"C:\\\\Users\\\\danie\\\\Google \
Drive\\\\Dropbox\\\\Notebooks\\\\7039B2D7\\\\7039B2D7.nb\""},
  "NotebookObjectUUID"]], "Output",
 CellChangeTimes->{
  3.868636220374939*^9, {3.8708827224570584`*^9, 3.8708827426507*^9}, 
   3.8708828344137487`*^9, 3.870882878409829*^9},
 CellLabel->
  "Out[266]=",ExpressionUUID->"2fc0cc48-a511-4d1a-876e-c27c60b1224b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Local",
WindowSize->{958, 980},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
Visible->True,
DockedCells->{
  Cell[
   BoxData[
    DynamicBox[
     ToBoxes[
      Column[{
        Row[{
          Button["New Test", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`NewFunctionCell[Daniel`ARC`ARCNotebook], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022841710437929]], ImageSize -> {95., 40}, 
           Method -> "Queued"], " ", 
          Button["Add Tests to File", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`CreateUnitTests[
            Daniel`ARC`ARCNotebook, "SubTest" -> None], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022841710437929]], ImageSize -> {162.5, 40}, 
           Method -> "Queued"], " ", 
          Button[
          "Run Tests", 
           DevTools`TestingTools`RunUnitTestsInNotebook[
            Daniel`ARC`ARCNotebook]; Null, ImageSize -> {102.5, 40}, Method -> 
           "Queued"], " ", 
          Button["Edit Tests", 
           DevTools`TestingTools`EditUnitTests[Daniel`ARC`ARCNotebook], 
           ImageSize -> {110., 40}, Method -> "Queued"], " ", 
          Button["Edit Function", 
           DevTools`SourceTools`EditFunction[Daniel`ARC`ARCNotebook], 
           ImageSize -> {132.5, 40}, Method -> "Queued"], " ", 
          Row[{
            
            DynamicModule[{
             DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
              "Capture"}, 
             Button[
              Dynamic[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel], 
              If[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel === 
               "Capture", 
               DevTools`TestingTools`FunctionCapture`EnableFunctionCapture[
                Daniel`ARC`ARCNotebook]; 
               DevTools`TestingTools`FunctionCapture`\
RegisterFunctionCaptureNotebook[Daniel`ARC`ARCNotebook, 
                 InputNotebook[]]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Release"; Null, 
               DevTools`TestingTools`FunctionCapture`DisableFunctionCapture[
                Daniel`ARC`ARCNotebook]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Capture"; Null], ImageSize -> {100, 40}, Method -> "Queued"],
              DynamicModuleValues :> {}], 
            Button["?", 
             DevTools`TestingTools`FunctionCapture`CaptureFunctionHelp[], 
             ImageSize -> {30, 40}, Method -> "Queued"]}], " ", 
          Row[{
            Button["<", 
             DevTools`NotebookTools`MoveNotebook["Left"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"], 
            Button[">", 
             DevTools`NotebookTools`MoveNotebook["Right"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"]}]}], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022841710437929; If[
          And[
           ValueQ[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022841710437929], 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022841710437929 =!= "", 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022841710437929 =!= Null], 
          (If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {"MaxHeight" -> 300},
              "NakedSection"]], 
           Framed[#, FrameStyle -> None, FrameMargins -> 2], 
           
           Framed[#, FrameStyle -> LightGray, Background -> White, 
            FrameMargins -> 15]]& )[
           Grid[{{
              Pane[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022841710437929, "ImageSize" -> {Full, {0, 
                  OptionValue[
                  DevTools`NotebookTools`DynamicOutputSection, {
                   "MaxHeight" -> 300}, "MaxHeight"]}}, Scrollbars -> 
               Automatic, FrameMargins -> 0]}, 
             If[
              TrueQ[
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {
                "MaxHeight" -> 300}, "NakedSection"]], 
              Apply[Sequence, {}], {
               Button[
               "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022841710437929 = "", ImageSize -> {100, 33}]}]},
             Spacings -> {0, 1}, Alignment -> {Left, Top}]], 
          Apply[Sequence, {}]]}], StandardForm], 
     TrackedSymbols :> {
      DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022841710437929}]], "DockedCell"]},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, 
  "CreateNamedNotebook2Args" -> {
   "ARCNotebook", "Type" -> "Function", 
    "GenerateNotebookArgs" -> {"Function" -> Daniel`ARC`ARCNotebook}, 
    "ReturnNotebook" -> True}},
InputAutoReplacements->{},
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"09a68035-cee9-4a96-ae44-77e93ad1f7de"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 83, 0, 98, "Title",ExpressionUUID->"78c78647-6502-40d0-83f6-64b14c6f5215"],
Cell[666, 24, 221, 5, 54, "Code",ExpressionUUID->"b15e377f-e334-41cf-a0f7-5762e6e8b209",
 InitializationCell->False],
Cell[CellGroupData[{
Cell[912, 33, 79, 0, 67, "Section",ExpressionUUID->"f235feb2-44a7-4be1-9b5d-59bd74526282"],
Cell[CellGroupData[{
Cell[1016, 37, 318, 7, 54, "Code",ExpressionUUID->"fe9540e0-6b4d-48c6-8201-c6913f14bcb7",
 InitializationCell->False],
Cell[1337, 46, 451, 10, 54, "Output",ExpressionUUID->"2fc0cc48-a511-4d1a-876e-c27c60b1224b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

