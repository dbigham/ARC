(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     20688,        492]
NotebookOptionsPosition[     14324,        338]
NotebookOutlinePosition[     19987,        478]
CellTagsIndexPosition[     19944,        475]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ARCImageFlipPlusRotations", "Title",ExpressionUUID->"16ea3bc3-a069-429f-b11b-a4ab840a1960"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"RunUnitTests", "[", "ARCImageFlipPlusRotations", "]"}]}], "Code",
 InitializationCell->False,
 CellLabel->
  "In[1581]:=",ExpressionUUID->"10fc302a-951b-4df6-8ec9-62d270b78fa0"],

Cell[CellGroupData[{

Cell["Tests", "Section",ExpressionUUID->"c8f5a073-4561-49fe-ac28-0a717b1886ed"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCImageFlipPlusRotations-20220913-QUZ64J", 
              Daniel`ARC`ARCImageFlipPlusRotations, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291371853197448], 43840273, "SubTest" -> 
              None]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> 
            "ARCImageFlipPlusRotations-20220913-QUZ64J"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCImageFlipPlusRotations-20220913-QUZ64J", 
            Daniel`ARC`ARCImageFlipPlusRotations, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291371853197448], "CellID" -> 43840273, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCImageFlipPlusRotations-20220913-QUZ64J", 
           Daniel`ARC`ARCImageFlipPlusRotations, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291371853197448], 
           Utility`FilterOptions[
           "SubTest" -> None, 
            DevTools`TestingTools`Private`openInEditorClicked]], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCImageFlipPlusRotations-20220913-QUZ64J"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291371853197448; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291371853197448], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291371853197448 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291371853197448 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291371853197448, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291371853197448 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{840., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291371853197448}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.872056732813055*^9},ExpressionUUID->"89f0f73b-9afe-4bcf-b484-\
ce3308472b6f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ARCImageFlipPlusRotations", "[", "\n", "\t", 
   RowBox[{
    RowBox[{
     RowBox[{"ARCParseFile", "[", "\"\<74dd1130\>\"", "]"}], "[", 
     RowBox[{"\"\<Train\>\"", ",", " ", "1"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"\"\<Input\>\"", ",", " ", "1"}], "]"}], "]"}], "\n", "]"}], " ",
   "//", " ", "ARCIndent"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.8720566436979847`*^9, 3.8720566741511555`*^9}, {
  3.8720567157817974`*^9, 3.872056732813055*^9}},
 CellLabel->"In[1579]:=",
 CellID->43840273,
 "TestId" -> 
 "ARCImageFlipPlusRotations-20220913-QUZ64J",ExpressionUUID->"66295ba3-e942-\
43b8-964b-0952b6b663a9"]
}, Open  ]],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"{\"\>"},
    {"\<\"    <|\"\>"},
    {
     TemplateBox[{
       TemplateBox[{"\"        \"", 
         TemplateBox[{"\"\\\"Image\\\" -> \"", 
           TagBox[
            
            GridBox[{{"\"\"", "\"\"", "\"\""}, {"\"\"", "\"\"", "\"\""}, {
              "\"\"", "\"\"", "\"\""}}, AutoDelete -> False, 
             GridBoxBackground -> {
              "Columns" -> {{None}}, "Rows" -> {{None}}, 
               "ItemsIndexed" -> {{1, 1} -> 
                 RGBColor[1., 0.2549019607843137, 0.21176470588235294`], {1, 
                  2} -> RGBColor[
                  0., 0.4549019607843137, 0.8509803921568627], {1, 3} -> 
                 RGBColor[0., 0.4549019607843137, 0.8509803921568627], {2, 1} -> 
                 RGBColor[1., 0.2549019607843137, 0.21176470588235294`], {2, 
                  2} -> RGBColor[
                  0.6666666666666666, 0.6666666666666666, 
                   0.6666666666666666], {2, 3} -> 
                 RGBColor[1., 0.2549019607843137, 0.21176470588235294`], {3, 
                  1} -> RGBColor[
                  0.6666666666666666, 0.6666666666666666, 
                   0.6666666666666666], {3, 2} -> 
                 RGBColor[0., 0.4549019607843137, 0.8509803921568627], {3, 3} -> 
                 RGBColor[1., 0.2549019607843137, 0.21176470588235294`]}}, 
             GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
             GridBoxFrame -> {
              "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}}, 
             GridBoxItemSize -> {"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}, 
             FrameStyle -> {
               AbsoluteThickness[1], 
               GrayLevel[0.5]}], "Grid"]}, "RowDefault"]}, "RowDefault"], 
       "\",\""},
      "RowDefault"]},
    {"\<\"        \\\"Transform\\\" -> {\"\>"},
    {"\<\"            <|\\\"Type\\\" -> \\\"Rotation\\\", \\\"Angle\\\" -> \
90|>,\"\>"},
    {"\<\"            <|\\\"Type\\\" -> \\\"Flip\\\", \\\"Direction\\\" -> \\\
\"Vertical\\\"|>\"\>"},
    {"\<\"        }\"\>"},
    {"\<\"    |>,\"\>"},
    {"\<\"    <|\"\>"},
    {
     TemplateBox[{
       TemplateBox[{"\"        \"", 
         TemplateBox[{"\"\\\"Image\\\" -> \"", 
           TagBox[
            
            GridBox[{{"\"\"", "\"\"", "\"\""}, {"\"\"", "\"\"", "\"\""}, {
              "\"\"", "\"\"", "\"\""}}, AutoDelete -> False, 
             GridBoxBackground -> {
              "Columns" -> {{None}}, "Rows" -> {{None}}, 
               "ItemsIndexed" -> {{1, 1} -> 
                 RGBColor[0., 0.4549019607843137, 0.8509803921568627], {1, 2} -> 
                 RGBColor[1., 0.2549019607843137, 0.21176470588235294`], {1, 
                  3} -> RGBColor[
                  1., 0.2549019607843137, 0.21176470588235294`], {2, 1} -> 
                 RGBColor[0., 0.4549019607843137, 0.8509803921568627], {2, 2} -> 
                 RGBColor[
                  0.6666666666666666, 0.6666666666666666, 
                   0.6666666666666666], {2, 3} -> 
                 RGBColor[0., 0.4549019607843137, 0.8509803921568627], {3, 1} -> 
                 RGBColor[1., 0.2549019607843137, 0.21176470588235294`], {3, 
                  2} -> RGBColor[
                  1., 0.2549019607843137, 0.21176470588235294`], {3, 3} -> 
                 RGBColor[
                  0.6666666666666666, 0.6666666666666666, 
                   0.6666666666666666]}}, 
             GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
             GridBoxFrame -> {
              "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}}, 
             GridBoxItemSize -> {"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}, 
             FrameStyle -> {
               AbsoluteThickness[1], 
               GrayLevel[0.5]}], "Grid"]}, "RowDefault"]}, "RowDefault"], 
       "\",\""},
      "RowDefault"]},
    {"\<\"        \\\"Transform\\\" -> {\"\>"},
    {"\<\"            <|\\\"Type\\\" -> \\\"Rotation\\\", \\\"Angle\\\" -> \
180|>,\"\>"},
    {"\<\"            <|\\\"Type\\\" -> \\\"Flip\\\", \\\"Direction\\\" -> \\\
\"Vertical\\\"|>\"\>"},
    {"\<\"        }\"\>"},
    {"\<\"    |>,\"\>"},
    {"\<\"    <|\"\>"},
    {
     TemplateBox[{
       TemplateBox[{"\"        \"", 
         TemplateBox[{"\"\\\"Image\\\" -> \"", 
           TagBox[
            
            GridBox[{{"\"\"", "\"\"", "\"\""}, {"\"\"", "\"\"", "\"\""}, {
              "\"\"", "\"\"", "\"\""}}, AutoDelete -> False, 
             GridBoxBackground -> {
              "Columns" -> {{None}}, "Rows" -> {{None}}, 
               "ItemsIndexed" -> {{1, 1} -> 
                 RGBColor[1., 0.2549019607843137, 0.21176470588235294`], {1, 
                  2} -> RGBColor[
                  0., 0.4549019607843137, 0.8509803921568627], {1, 3} -> 
                 RGBColor[
                  0.6666666666666666, 0.6666666666666666, 
                   0.6666666666666666], {2, 1} -> 
                 RGBColor[1., 0.2549019607843137, 0.21176470588235294`], {2, 
                  2} -> RGBColor[
                  0.6666666666666666, 0.6666666666666666, 
                   0.6666666666666666], {2, 3} -> 
                 RGBColor[1., 0.2549019607843137, 0.21176470588235294`], {3, 
                  1} -> RGBColor[
                  0., 0.4549019607843137, 0.8509803921568627], {3, 2} -> 
                 RGBColor[0., 0.4549019607843137, 0.8509803921568627], {3, 3} -> 
                 RGBColor[1., 0.2549019607843137, 0.21176470588235294`]}}, 
             GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
             GridBoxFrame -> {
              "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}}, 
             GridBoxItemSize -> {"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}, 
             FrameStyle -> {
               AbsoluteThickness[1], 
               GrayLevel[0.5]}], "Grid"]}, "RowDefault"]}, "RowDefault"], 
       "\",\""},
      "RowDefault"]},
    {"\<\"        \\\"Transform\\\" -> {\"\>"},
    {"\<\"            <|\\\"Type\\\" -> \\\"Rotation\\\", \\\"Angle\\\" -> \
270|>,\"\>"},
    {"\<\"            <|\\\"Type\\\" -> \\\"Flip\\\", \\\"Direction\\\" -> \\\
\"Vertical\\\"|>\"\>"},
    {"\<\"        }\"\>"},
    {"\<\"    |>,\"\>"},
    {"\<\"    <|\"\>"},
    {
     TemplateBox[{
       TemplateBox[{"\"        \"", 
         TemplateBox[{"\"\\\"Image\\\" -> \"", 
           TagBox[
            
            GridBox[{{"\"\"", "\"\"", "\"\""}, {"\"\"", "\"\"", "\"\""}, {
              "\"\"", "\"\"", "\"\""}}, AutoDelete -> False, 
             GridBoxBackground -> {
              "Columns" -> {{None}}, "Rows" -> {{None}}, 
               "ItemsIndexed" -> {{1, 1} -> 
                 RGBColor[
                  0.6666666666666666, 0.6666666666666666, 
                   0.6666666666666666], {1, 2} -> 
                 RGBColor[1., 0.2549019607843137, 0.21176470588235294`], {1, 
                  3} -> RGBColor[
                  1., 0.2549019607843137, 0.21176470588235294`], {2, 1} -> 
                 RGBColor[0., 0.4549019607843137, 0.8509803921568627], {2, 2} -> 
                 RGBColor[
                  0.6666666666666666, 0.6666666666666666, 
                   0.6666666666666666], {2, 3} -> 
                 RGBColor[0., 0.4549019607843137, 0.8509803921568627], {3, 1} -> 
                 RGBColor[1., 0.2549019607843137, 0.21176470588235294`], {3, 
                  2} -> RGBColor[
                  1., 0.2549019607843137, 0.21176470588235294`], {3, 3} -> 
                 RGBColor[0., 0.4549019607843137, 0.8509803921568627]}}, 
             GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
             GridBoxFrame -> {
              "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}}, 
             GridBoxItemSize -> {"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}, 
             FrameStyle -> {
               AbsoluteThickness[1], 
               GrayLevel[0.5]}], "Grid"]}, "RowDefault"]}, "RowDefault"], 
       "\",\""},
      "RowDefault"]},
    {"\<\"        \\\"Transform\\\" -> {\"\>"},
    {"\<\"            <|\\\"Type\\\" -> \\\"Rotation\\\", \\\"Angle\\\" -> \
180|>,\"\>"},
    {"\<\"            <|\\\"Type\\\" -> \\\"Flip\\\", \\\"Direction\\\" -> \\\
\"Horizontal\\\"|>\"\>"},
    {"\<\"        }\"\>"},
    {"\<\"    |>\"\>"},
    {"\<\"}\"\>"}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.872056645157023*^9, 3.8720567202460585`*^9}},
 CellLabel->
  "Out[1580]=",ExpressionUUID->"fe40d50f-f992-43ac-b893-ea0a7347cf2e"]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Local",
WindowSize->{958, 980},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
Visible->True,
DockedCells->{
  Cell[
   BoxData[
    DynamicBox[
     ToBoxes[
      Column[{
        Row[{
          Button["New Test", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`NewFunctionCell[
            Daniel`ARC`ARCImageFlipPlusRotations], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291371232197286]], ImageSize -> {95., 40}, 
           Method -> "Queued"], " ", 
          Button["Add Tests to File", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`CreateUnitTests[
            Daniel`ARC`ARCImageFlipPlusRotations, "SubTest" -> None], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291371232197286]], ImageSize -> {162.5, 40}, 
           Method -> "Queued"], " ", 
          Button[
          "Run Tests", 
           DevTools`TestingTools`RunUnitTestsInNotebook[
            Daniel`ARC`ARCImageFlipPlusRotations]; Null, 
           ImageSize -> {102.5, 40}, Method -> "Queued"], " ", 
          Button["Edit Tests", 
           DevTools`TestingTools`EditUnitTests[
           Daniel`ARC`ARCImageFlipPlusRotations, "SubTest" -> None], 
           ImageSize -> {110., 40}, Method -> "Queued"], " ", 
          Button["Edit Function", 
           DevTools`SourceTools`EditFunction[
           Daniel`ARC`ARCImageFlipPlusRotations], ImageSize -> {132.5, 40}, 
           Method -> "Queued"], " ", 
          Row[{
            
            DynamicModule[{
             DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
              "Capture"}, 
             Button[
              Dynamic[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel], 
              If[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel === 
               "Capture", 
               DevTools`TestingTools`FunctionCapture`EnableFunctionCapture[
                Daniel`ARC`ARCImageFlipPlusRotations]; 
               DevTools`TestingTools`FunctionCapture`\
RegisterFunctionCaptureNotebook[Daniel`ARC`ARCImageFlipPlusRotations, 
                 InputNotebook[]]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Release"; Null, 
               DevTools`TestingTools`FunctionCapture`DisableFunctionCapture[
                Daniel`ARC`ARCImageFlipPlusRotations]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Capture"; Null], ImageSize -> {100, 40}, Method -> "Queued"],
              DynamicModuleValues :> {}], 
            Button["?", 
             DevTools`TestingTools`FunctionCapture`CaptureFunctionHelp[], 
             ImageSize -> {30, 40}, Method -> "Queued"]}], " ", 
          Row[{
            Button["<", 
             DevTools`NotebookTools`MoveNotebook["Left"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"], 
            Button[">", 
             DevTools`NotebookTools`MoveNotebook["Right"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"]}]}], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291371232197286; If[
          And[
           ValueQ[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291371232197286], 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291371232197286 =!= "", 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291371232197286 =!= Null], 
          (If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {"MaxHeight" -> 300},
              "NakedSection"]], 
           Framed[#, FrameStyle -> None, FrameMargins -> 2], 
           
           Framed[#, FrameStyle -> LightGray, Background -> White, 
            FrameMargins -> 15]]& )[
           Grid[{{
              Pane[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291371232197286, "ImageSize" -> {Full, {0, 
                  OptionValue[
                  DevTools`NotebookTools`DynamicOutputSection, {
                   "MaxHeight" -> 300}, "MaxHeight"]}}, Scrollbars -> 
               Automatic, FrameMargins -> 0]}, 
             If[
              TrueQ[
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {
                "MaxHeight" -> 300}, "NakedSection"]], 
              Apply[Sequence, {}], {
               Button[
               "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291371232197286 = "", 
                ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
            Alignment -> {Left, Top}]], 
          Apply[Sequence, {}]]}], StandardForm], 
     TrackedSymbols :> {
      DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202291371232197286}]], "DockedCell"]},
TaggingRules->{
 "CreateNamedNotebook2Args" -> {
   "ARCImageFlipPlusRotations", "Type" -> "Function", 
    "GenerateNotebookArgs" -> {
     "Function" -> Daniel`ARC`ARCImageFlipPlusRotations}, "ReturnNotebook" -> 
    True}},
InputAutoReplacements->{},
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"c29a283b-434d-448c-aa01-c7fc450ffa76"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 97, 0, 98, "Title",ExpressionUUID->"16ea3bc3-a069-429f-b11b-a4ab840a1960"],
Cell[680, 24, 261, 6, 54, "Code",ExpressionUUID->"10fc302a-951b-4df6-8ec9-62d270b78fa0",
 InitializationCell->False],
Cell[CellGroupData[{
Cell[966, 34, 79, 0, 67, "Section",ExpressionUUID->"c8f5a073-4561-49fe-ac28-0a717b1886ed"],
Cell[CellGroupData[{
Cell[1070, 38, 3804, 89, 52, "TestUI",ExpressionUUID->"89f0f73b-9afe-4bcf-b484-ce3308472b6f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[4877, 129, 794, 20, 90, "Code",ExpressionUUID->"66295ba3-e942-43b8-964b-0952b6b663a9",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->43840273]
}, Open  ]],
Cell[5686, 152, 8610, 182, 781, "Output",ExpressionUUID->"fe40d50f-f992-43ac-b893-ea0a7347cf2e"]
}, Open  ]]
}, Open  ]]
}
]
*)

