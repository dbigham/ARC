(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     37716,        882]
NotebookOptionsPosition[     30308,        708]
NotebookOutlinePosition[     35792,        844]
CellTagsIndexPosition[     35749,        841]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["GetObject", "Title",ExpressionUUID->"887b3c0b-0791-4f39-887d-9397270d16a7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"RunUnitTests", "[", "GetObject", "]"}]}], "Code",
 InitializationCell->False,
 CellLabel->
  "In[681]:=",ExpressionUUID->"ac9a0fed-1578-4072-a6c9-7708dc2daaeb"],

Cell[CellGroupData[{

Cell["Tests", "Section",ExpressionUUID->"7f276db5-1fa3-49f6-b869-6c9eab212bb1"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "GetObject-20220723-G02VP3", Daniel`ARC`GetObject, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272319171822834], 93346295]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {"TestUiMarker", "TestId" -> "GetObject-20220723-G02VP3"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "GetObject-20220723-G02VP3", Daniel`ARC`GetObject, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272319171822834], "CellID" -> 93346295, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "GetObject-20220723-G02VP3", Daniel`ARC`GetObject, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272319171822834], None], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"GetObject-20220723-G02VP3"}, ImageSize -> {Full, Automatic}, 
          Alignment -> {Right, Center}]}}], ImageSize -> {Full, Automatic}, 
      FrameStyle -> GrayLevel[0.8], FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272319171822834; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272319171822834], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272319171822834 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272319171822834 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272319171822834, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272319171822834 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{840., {21.3544921875, 26.6455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272319171822834}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.867607037937154*^9},ExpressionUUID->"bf799d79-866d-4614-9bfb-\
864b394ac987"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"GetObject", "[", "\n", "\t", 
  RowBox[{
   RowBox[{"Object", "[", 
    RowBox[{"<|", 
     RowBox[{"\"\<Colors\>\"", " ", "\[Rule]", " ", 
      RowBox[{"{", "\"\<Blue\>\"", "}"}]}], "|>"}], "]"}], ",", "\n", "\t", 
   RowBox[{"<|", "\n", "\t\t", 
    RowBox[{"\"\<Objects\>\"", " ", "\[Rule]", " ", 
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{"<|", "\n", "\t\t\t\t", 
       RowBox[{
        RowBox[{"\"\<Colors\>\"", " ", "\[Rule]", " ", 
         RowBox[{"{", "\"\<Blue\>\"", "}"}]}], ",", "\n", "\t\t\t\t", 
        RowBox[{"\"\<Position\>\"", " ", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{"1", ",", " ", "1"}], "}"}]}]}], "\n", "\t\t\t", "|>"}], 
      "\n", "\t\t", "}"}]}], "\n", "\t", "|>"}]}], "\n", "]"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.8676066435801973`*^9, 3.867606675328293*^9}, 
   3.867607037937154*^9},
 CellLabel->"In[210]:=",
 CellID->93346295,
 "TestId" -> 
 "GetObject-20220723-G02VP3",ExpressionUUID->"94b33d84-efa0-4ae1-a6be-\
b78657e45e4f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Colors\"\>", "\[Rule]", 
    RowBox[{"{", "\<\"Blue\"\>", "}"}]}], ",", 
   RowBox[{"\<\"Position\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.867606677189501*^9, 3.867606733384924*^9, {3.8676068448699474`*^9, 
   3.867606854835668*^9}, 3.86760688720321*^9, 3.86769463369776*^9},
 CellLabel->
  "Out[211]=",ExpressionUUID->"60900037-e0ea-4d18-8f76-172a3972445e"],

Cell[CellGroupData[{

Cell["No Matches", "Subsection",
 CellChangeTimes->{{3.867606890230295*^9, 
  3.867606891662363*^9}},ExpressionUUID->"3b9927d4-d422-4b38-aec9-\
a03de6686359"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "GetObject-20220723-G1R39W", Daniel`ARC`GetObject, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272319171822886], 95246252]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {"TestUiMarker", "TestId" -> "GetObject-20220723-G1R39W"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "GetObject-20220723-G1R39W", Daniel`ARC`GetObject, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272319171822886], "CellID" -> 95246252, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "GetObject-20220723-G1R39W", Daniel`ARC`GetObject, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272319171822886], None], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"GetObject-20220723-G1R39W"}, ImageSize -> {Full, Automatic}, 
          Alignment -> {Right, Center}]}}], ImageSize -> {Full, Automatic}, 
      FrameStyle -> GrayLevel[0.8], FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272319171822886; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272319171822886], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272319171822886 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272319171822886 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272319171822886, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272319171822886 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{833., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272319171822886}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.8676070380929184`*^9},ExpressionUUID->"283ab0aa-ff08-42e1-b892-\
2ec25916b637"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"GetObject", "[", "\n", "\t", 
  RowBox[{
   RowBox[{"Object", "[", 
    RowBox[{"<|", 
     RowBox[{"\"\<Colors\>\"", " ", "\[Rule]", " ", 
      RowBox[{"{", "\"\<Blue\>\"", "}"}]}], "|>"}], "]"}], ",", "\n", "\t", 
   RowBox[{"<|", "\n", "\t\t", 
    RowBox[{"\"\<Objects\>\"", " ", "\[Rule]", " ", 
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{"<|", "\n", "\t\t\t\t", 
       RowBox[{
        RowBox[{"\"\<Colors\>\"", " ", "\[Rule]", " ", 
         RowBox[{"{", "\"\<Red\>\"", "}"}]}], ",", "\n", "\t\t\t\t", 
        RowBox[{"\"\<Position\>\"", " ", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{"1", ",", " ", "1"}], "}"}]}]}], "\n", "\t\t\t", "|>"}], 
      "\n", "\t\t", "}"}]}], "\n", "\t", "|>"}]}], "\n", "]"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.8676066435801973`*^9, 3.867606675328293*^9}, {
   3.8676068944258966`*^9, 3.8676068947457066`*^9}, 3.8676070380929184`*^9},
 CellLabel->"In[679]:=",
 CellID->95246252,
 "TestId" -> 
 "GetObject-20220723-G1R39W",ExpressionUUID->"adebac04-decd-428b-b9b2-\
4de8b0d7f4aa"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Failure",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"The object wasn't found in the scene.\"", 
                    "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"ObjectNotFound\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Object: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{"\"Colors\"", "\[Rule]", 
                    RowBox[{"{", "\"Blue\"", "}"}]}], "\[RightAssociation]"}],
                     "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"The object wasn't found in the scene.\"", 
                    "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"ObjectNotFound\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Object: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{"\"Colors\"", "\[Rule]", 
                    RowBox[{"{", "\"Blue\"", "}"}]}], "\[RightAssociation]"}],
                     "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Failure["ObjectNotFound", 
   Association[
   "MessageTemplate" -> "The object wasn't found in the scene.", 
    "MessageParameters" -> Association[], "Object" -> 
    Association["Colors" -> {"Blue"}]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8676068950205956`*^9, 3.8676069091889153`*^9}, 
   3.8676069615023623`*^9, 3.867607011227389*^9, 3.868732967613988*^9},
 CellLabel->
  "Out[680]=",ExpressionUUID->"5fe15a7b-9e8c-4d40-a924-00820b257e79"]
}, Closed]],

Cell[CellGroupData[{

Cell["Ambiguity", "Subsection",
 CellChangeTimes->{{3.867606890230295*^9, 3.867606891662363*^9}, {
  3.867607018430827*^9, 
  3.8676070200062957`*^9}},ExpressionUUID->"2a783074-3afd-4558-8a16-\
309be2be0dc8"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "GetObject-20220723-DH0I2F", Daniel`ARC`GetObject, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272319171822977], 59964683]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {"TestUiMarker", "TestId" -> "GetObject-20220723-DH0I2F"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "GetObject-20220723-DH0I2F", Daniel`ARC`GetObject, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272319171822977], "CellID" -> 59964683, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "GetObject-20220723-DH0I2F", Daniel`ARC`GetObject, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272319171822977], None], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"GetObject-20220723-DH0I2F"}, ImageSize -> {Full, Automatic}, 
          Alignment -> {Right, Center}]}}], ImageSize -> {Full, Automatic}, 
      FrameStyle -> GrayLevel[0.8], FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272319171822977; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272319171822977], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272319171822977 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272319171822977 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272319171822977, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272319171822977 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{833., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272319171822977}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.8676070382504063`*^9},ExpressionUUID->"b0ce412d-1d2e-4c7a-9033-\
77800d8bd29b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"GetObject", "[", "\n", "\t", 
  RowBox[{
   RowBox[{"Object", "[", 
    RowBox[{"<|", 
     RowBox[{"\"\<Colors\>\"", " ", "\[Rule]", " ", 
      RowBox[{"{", "\"\<Blue\>\"", "}"}]}], "|>"}], "]"}], ",", "\n", "\t", 
   RowBox[{"<|", "\n", "\t\t", 
    RowBox[{"\"\<Objects\>\"", " ", "\[Rule]", " ", 
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"<|", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{"\"\<Colors\>\"", " ", "\[Rule]", " ", 
          RowBox[{"{", "\"\<Blue\>\"", "}"}]}], ",", "\n", "\t\t\t\t", 
         RowBox[{"\"\<Position\>\"", " ", "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{"1", ",", " ", "1"}], "}"}]}]}], "\n", "\t\t\t", "|>"}], 
       ",", "\n", "\t\t\t", 
       RowBox[{"<|", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{"\"\<Colors\>\"", " ", "\[Rule]", " ", 
          RowBox[{"{", "\"\<Blue\>\"", "}"}]}], ",", "\n", "\t\t\t\t", 
         RowBox[{"\"\<Position\>\"", " ", "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{"2", ",", " ", "2"}], "}"}]}]}], "\n", "\t\t\t", "|>"}]}], 
      "\n", "\t\t", "}"}]}], "\n", "\t", "|>"}]}], "\n", "]"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.8676066435801973`*^9, 3.867606675328293*^9}, {
  3.8676068944258966`*^9, 3.8676068947457066`*^9}, {3.867607026322068*^9, 
  3.8676070382504063`*^9}},
 CellLabel->"In[673]:=",
 CellID->59964683,
 "TestId" -> 
 "GetObject-20220723-DH0I2F",ExpressionUUID->"a1b86036-0c6c-4370-a766-\
a2070e01ec1e"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Failure",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {11., {0., 11.}}], Appearance -> None, 
              BaseStyle -> {}, ButtonFunction :> (Typeset`open$$ = True), 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox[
             "\"\[WarningSign]\"", "Message", StripOnInput -> False, FontSize -> 
              35], ContentPadding -> False, FrameMargins -> {{0, 0}, {0, 0}}, 
             FrameStyle -> None, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"Multiple matching objects were found, but only 1 match \
was expected.\"", "SummaryItem"]}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"AmbiguousObject\"", "SummaryItem"]}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}}, 
             AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
               ImageSizeCache -> {11., {0., 11.}}], Appearance -> None, 
              BaseStyle -> {}, ButtonFunction :> (Typeset`open$$ = False), 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox[
             "\"\[WarningSign]\"", "Message", StripOnInput -> False, FontSize -> 
              35], ContentPadding -> False, FrameMargins -> {{0, 0}, {0, 0}}, 
             FrameStyle -> None, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"Multiple matching objects were found, but only 1 match \
was expected.\"", "SummaryItem"]}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"AmbiguousObject\"", "SummaryItem"]}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"ObjectPattern\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{"\[LeftAssociation]", 
                    RowBox[{"\"Colors\"", "\[Rule]", 
                    RowBox[{"{", "\"Blue\"", "}"}]}], "\[RightAssociation]"}],
                    HoldForm], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  
                  TemplateBox[{"\"MatchingObjects\"", "\": \""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    RowBox[{"\"Colors\"", "\[Rule]", 
                    RowBox[{"{", "\"Blue\"", "}"}]}], ",", 
                    RowBox[{"\"Position\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}]}], 
                    "\[RightAssociation]"}], ",", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    RowBox[{"\"Colors\"", "\[Rule]", 
                    RowBox[{"{", "\"Blue\"", "}"}]}], ",", 
                    RowBox[{"\"Position\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}]}], 
                    "\[RightAssociation]"}]}], "}"}], HoldForm], 
                  "SummaryItem"]}]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Failure["AmbiguousObject", 
   Association[
   "MessageTemplate" -> 
    "Multiple matching objects were found, but only 1 match was expected.", 
    "MessageParameters" -> Association[], "ObjectPattern" -> 
    Association["Colors" -> {"Blue"}], "MatchingObjects" -> {
      Association["Colors" -> {"Blue"}, "Position" -> {1, 1}], 
      Association["Colors" -> {"Blue"}, "Position" -> {2, 2}]}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8676068950205956`*^9, 3.8676069091889153`*^9}, 
   3.8676069615023623`*^9, {3.867607011227389*^9, 3.8676070342961903`*^9}, 
   3.867694643149804*^9, 3.8687329182949247`*^9, 3.8687329521519585`*^9},
 CellLabel->
  "Out[674]=",ExpressionUUID->"13721d30-1c65-44be-84ed-07feeed112e2"]
}, Closed]]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Local",
WindowSize->{958, 980},
WindowMargins->{{-7., Automatic}, {Automatic, 0}},
Visible->True,
DockedCells->{
  Cell[
   BoxData[
    DynamicBox[
     ToBoxes[
      Column[{
        Row[{
          Button["New Test", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`NewFunctionCell[Daniel`ARC`GetObject], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272319103722773]], ImageSize -> {95., 40}, 
           Method -> "Queued"], " ", 
          Button["Add Tests to File", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`CreateUnitTests[
            Daniel`ARC`GetObject, "SubTest" -> None], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272319103722773]], ImageSize -> {162.5, 40}, 
           Method -> "Queued"], " ", 
          Button[
          "Run Tests", 
           DevTools`TestingTools`RunUnitTestsInNotebook[Daniel`ARC`GetObject]; 
           Null, ImageSize -> {102.5, 40}, Method -> "Queued"], " ", 
          Button["Edit Tests", 
           DevTools`TestingTools`EditUnitTests[Daniel`ARC`GetObject], 
           ImageSize -> {110., 40}, Method -> "Queued"], " ", 
          Button["Edit Function", 
           DevTools`SourceTools`EditFunction[Daniel`ARC`GetObject], 
           ImageSize -> {132.5, 40}, Method -> "Queued"], " ", 
          Row[{
            
            DynamicModule[{
             DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
              "Capture"}, 
             Button[
              Dynamic[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel], 
              If[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel === 
               "Capture", 
               DevTools`TestingTools`FunctionCapture`EnableFunctionCapture[
                Daniel`ARC`GetObject]; 
               DevTools`TestingTools`FunctionCapture`\
RegisterFunctionCaptureNotebook[Daniel`ARC`GetObject, 
                 InputNotebook[]]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Release"; Null, 
               DevTools`TestingTools`FunctionCapture`DisableFunctionCapture[
                Daniel`ARC`GetObject]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Capture"; Null], ImageSize -> {100, 40}, Method -> "Queued"],
              DynamicModuleValues :> {}], 
            Button["?", 
             DevTools`TestingTools`FunctionCapture`CaptureFunctionHelp[], 
             ImageSize -> {30, 40}, Method -> "Queued"]}], " ", 
          Row[{
            Button["<", 
             DevTools`NotebookTools`MoveNotebook["Left"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"], 
            Button[">", 
             DevTools`NotebookTools`MoveNotebook["Right"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"]}]}], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272319103722773; If[
          And[
           ValueQ[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272319103722773], 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272319103722773 =!= "", 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272319103722773 =!= Null], 
          (If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {"MaxHeight" -> 300},
              "NakedSection"]], 
           Framed[#, FrameStyle -> None, FrameMargins -> 2], 
           
           Framed[#, FrameStyle -> LightGray, Background -> White, 
            FrameMargins -> 15]]& )[
           Grid[{{
              Pane[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272319103722773, "ImageSize" -> {Full, {0, 
                  OptionValue[
                  DevTools`NotebookTools`DynamicOutputSection, {
                   "MaxHeight" -> 300}, "MaxHeight"]}}, Scrollbars -> 
               Automatic, FrameMargins -> 0]}, 
             If[
              TrueQ[
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {
                "MaxHeight" -> 300}, "NakedSection"]], 
              Apply[Sequence, {}], {
               Button[
               "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272319103722773 = "", 
                ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
            Alignment -> {Left, Top}]], 
          Apply[Sequence, {}]]}], StandardForm], 
     TrackedSymbols :> {
      DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272319103722773}]], "DockedCell"]},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, 
  "CreateNamedNotebook2Args" -> {
   "GetObject", "Type" -> "Function", 
    "GenerateNotebookArgs" -> {"Function" -> Daniel`ARC`GetObject}, 
    "ReturnNotebook" -> True}},
InputAutoReplacements->{},
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"57fafef1-e98e-43c6-b93e-93460da7b46b"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 81, 0, 98, "Title",ExpressionUUID->"887b3c0b-0791-4f39-887d-9397270d16a7"],
Cell[664, 24, 244, 6, 54, "Code",ExpressionUUID->"ac9a0fed-1578-4072-a6c9-7708dc2daaeb",
 InitializationCell->False],
Cell[CellGroupData[{
Cell[933, 34, 79, 0, 67, "Section",ExpressionUUID->"7f276db5-1fa3-49f6-b869-6c9eab212bb1"],
Cell[CellGroupData[{
Cell[1037, 38, 3446, 79, 50, "TestUI",ExpressionUUID->"bf799d79-866d-4614-9bfb-864b394ac987",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[4486, 119, 1155, 28, 234, "Code",ExpressionUUID->"94b33d84-efa0-4ae1-a6be-b78657e45e4f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->93346295]
}, Open  ]],
Cell[5656, 150, 527, 12, 33, "Output",ExpressionUUID->"60900037-e0ea-4d18-8f76-172a3972445e"],
Cell[CellGroupData[{
Cell[6208, 166, 158, 3, 54, "Subsection",ExpressionUUID->"3b9927d4-d422-4b38-aec9-a03de6686359"],
Cell[CellGroupData[{
Cell[6391, 173, 3448, 79, 52, "TestUI",ExpressionUUID->"283ab0aa-ff08-42e1-b892-2ec25916b637",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[9842, 254, 1206, 28, 234, "Code",ExpressionUUID->"adebac04-decd-428b-b9b2-4de8b0d7f4aa",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->95246252]
}, Open  ]],
Cell[11063, 285, 5957, 120, 84, "Output",ExpressionUUID->"5fe15a7b-9e8c-4d40-a924-00820b257e79"]
}, Closed]],
Cell[CellGroupData[{
Cell[17057, 410, 208, 4, 38, "Subsection",ExpressionUUID->"2a783074-3afd-4558-8a16-309be2be0dc8"],
Cell[CellGroupData[{
Cell[17290, 418, 3448, 79, 52, "TestUI",ExpressionUUID->"b0ce412d-1d2e-4c7a-9033-77800d8bd29b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[20741, 499, 1632, 38, 306, "Code",ExpressionUUID->"a1b86036-0c6c-4370-a766-a2070e01ec1e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->59964683]
}, Open  ]],
Cell[22388, 540, 7880, 163, 100, "Output",ExpressionUUID->"13721d30-1c65-44be-84ed-07feeed112e2"]
}, Closed]]
}, Open  ]]
}, Open  ]]
}
]
*)

