(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     12904,        323]
NotebookOptionsPosition[      6645,        172]
NotebookOutlinePosition[     12205,        309]
CellTagsIndexPosition[     12162,        306]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ARCResolveSameValues", "Title",ExpressionUUID->"c263d8dc-3d3c-4d60-95cf-60f71e918ff3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"RunUnitTests", "[", "ARCResolveSameValues", "]"}]}], "Code",
 InitializationCell->False,
 CellLabel->"In[55]:=",ExpressionUUID->"091893ad-062c-4b43-ad10-f42765e2ac89"],

Cell[CellGroupData[{

Cell["Tests", "Section",ExpressionUUID->"633c1cdf-9b81-4117-8260-70797cae347b"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCResolveSameValues-20221119-SKZXWG", 
              Daniel`ARC`ARCResolveSameValues, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221119135947925], 34816895, "SubTest" -> None]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> 
            "ARCResolveSameValues-20221119-SKZXWG"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCResolveSameValues-20221119-SKZXWG", 
            Daniel`ARC`ARCResolveSameValues, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221119135947925], "CellID" -> 34816895, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCResolveSameValues-20221119-SKZXWG", 
           Daniel`ARC`ARCResolveSameValues, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221119135947925], 
           Utility`FilterOptions[
           "SubTest" -> None, 
            DevTools`TestingTools`Private`openInEditorClicked]], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCResolveSameValues-20221119-SKZXWG"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221119135947925; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221119135947925], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221119135947925 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221119135947925 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221119135947925, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221119135947925 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{840., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221119135947925}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.8778731875154905`*^9},ExpressionUUID->"29271cb6-c3c9-452e-9acc-\
878f4d4963ae"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ARCResolveSameValues", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"<|", "\n", "\t\t", 
     RowBox[{"\"\<Shape\>\"", " ", "->", " ", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Name\>\"", " ", "->", " ", "\"\<Rectangle\>\""}], ",", 
        " ", 
        RowBox[{"\"\<Filled\>\"", " ", "->", " ", "True"}], ",", " ", 
        RowBox[{"\"\<Interior\>\"", " ", "->", " ", "\"\<Same\>\""}], ",", 
        " ", 
        RowBox[{"\"\<Border\>\"", " ", "->", " ", "\"\<Same\>\""}]}], 
       "|>"}]}], "\n", "\t", "|>"}], ",", "\n", "\t", 
    RowBox[{"<|", "\n", "\t\t", 
     RowBox[{"\"\<Shape\>\"", " ", "->", " ", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Interior\>\"", " ", "->", " ", "\"\<A\>\""}], ",", " ", 
        RowBox[{"\"\<Border\>\"", " ", "->", " ", "\"\<B\>\""}]}], "|>"}]}], 
     "\n", "\t", "|>"}]}], "\n", "]"}], " ", "//", " ", "Indent2"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.87787285738447*^9, 3.877872881723514*^9}, {
   3.877873000585314*^9, 3.8778730047606955`*^9}, 3.8778731875154905`*^9},
 CellLabel->"In[53]:=",
 CellID->34816895,
 "TestId" -> 
 "ARCResolveSameValues-20221119-SKZXWG",ExpressionUUID->"e9d0279f-9457-4344-\
8c3c-d20c99ac9f98"]
}, Open  ]],

Cell[BoxData["\<\"<|\\\"Shape\\\" -> <|\\\"Name\\\" -> \\\"Rectangle\\\", \
\\\"Filled\\\" -> True, \\\"Interior\\\" -> \\\"A\\\", \\\"Border\\\" -> \
\\\"B\\\"|>|>\"\>"], "Output",
 CellChangeTimes->{{3.877872883137703*^9, 3.8778730627777605`*^9}, {
  3.8778731271170006`*^9, 3.877873137495547*^9}, {3.877873172863556*^9, 
  3.8778731798353305`*^9}},
 CellLabel->"Out[54]=",ExpressionUUID->"3ce51afa-3a2f-496c-97e8-5c60a0040c89"]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Local",
WindowSize->{958, 980},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
DockedCells->{
  Cell[
   BoxData[
    DynamicBox[
     ToBoxes[
      Column[{
        Row[{
          Button["New Test", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`NewFunctionCell[
            Daniel`ARC`ARCResolveSameValues], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221119135413772]], ImageSize -> {95., 40}, 
           Method -> "Queued"], " ", 
          Button["Add Tests to File", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`CreateUnitTests[
            Daniel`ARC`ARCResolveSameValues, "SubTest" -> None], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221119135413772]], ImageSize -> {162.5, 40}, 
           Method -> "Queued"], " ", 
          Button[
          "Run Tests", 
           DevTools`TestingTools`RunUnitTestsInNotebook[
            Daniel`ARC`ARCResolveSameValues]; Null, ImageSize -> {102.5, 40}, 
           Method -> "Queued"], " ", 
          Button["Edit Tests", 
           DevTools`TestingTools`EditUnitTests[
           Daniel`ARC`ARCResolveSameValues, "SubTest" -> None], 
           ImageSize -> {110., 40}, Method -> "Queued"], " ", 
          Button["Edit Function", 
           DevTools`SourceTools`EditFunction[Daniel`ARC`ARCResolveSameValues],
            ImageSize -> {132.5, 40}, Method -> "Queued"], " ", 
          Row[{
            
            DynamicModule[{
             DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
              "Capture"}, 
             Button[
              Dynamic[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel], 
              If[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel === 
               "Capture", 
               DevTools`TestingTools`FunctionCapture`EnableFunctionCapture[
                Daniel`ARC`ARCResolveSameValues]; 
               
               DevTools`TestingTools`FunctionCapture`\
RegisterFunctionCaptureNotebook[Daniel`ARC`ARCResolveSameValues, 
                 InputNotebook[]]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Release"; Null, 
               DevTools`TestingTools`FunctionCapture`DisableFunctionCapture[
                Daniel`ARC`ARCResolveSameValues]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Capture"; Null], ImageSize -> {100, 40}, Method -> "Queued"],
              DynamicModuleValues :> {}], 
            Button["?", 
             DevTools`TestingTools`FunctionCapture`CaptureFunctionHelp[], 
             ImageSize -> {30, 40}, Method -> "Queued"]}], " ", 
          Row[{
            Button["<", 
             DevTools`NotebookTools`MoveNotebook["Left"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"], 
            Button[">", 
             DevTools`NotebookTools`MoveNotebook["Right"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"]}]}], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221119135413772; If[
          And[
           ValueQ[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221119135413772], 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221119135413772 =!= "", 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221119135413772 =!= Null], 
          (If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {"MaxHeight" -> 300},
              "NakedSection"]], 
           Framed[#, FrameStyle -> None, FrameMargins -> 2], 
           
           Framed[#, FrameStyle -> LightGray, Background -> White, 
            FrameMargins -> 15]]& )[
           Grid[{{
              Pane[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221119135413772, "ImageSize" -> {Full, {0, 
                  OptionValue[
                  DevTools`NotebookTools`DynamicOutputSection, {
                   "MaxHeight" -> 300}, "MaxHeight"]}}, Scrollbars -> 
               Automatic, FrameMargins -> 0]}, 
             If[
              TrueQ[
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {
                "MaxHeight" -> 300}, "NakedSection"]], 
              Apply[Sequence, {}], {
               Button[
               "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221119135413772 = "", 
                ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
            Alignment -> {Left, Top}]], 
          Apply[Sequence, {}]]}], StandardForm], 
     TrackedSymbols :> {
      DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20221119135413772}]], "DockedCell"]},
TaggingRules->{
 "CreateNamedNotebook2Args" -> {
   "ARCResolveSameValues", "Type" -> "Function", 
    "GenerateNotebookArgs" -> {"Function" -> Daniel`ARC`ARCResolveSameValues},
     "ReturnNotebook" -> True}},
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"460e96af-ba9b-436f-8a16-2ee076b187b7"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 92, 0, 98, "Title",ExpressionUUID->"c263d8dc-3d3c-4d60-95cf-60f71e918ff3"],
Cell[675, 24, 251, 5, 54, "Code",ExpressionUUID->"091893ad-062c-4b43-ad10-f42765e2ac89",
 InitializationCell->False],
Cell[CellGroupData[{
Cell[951, 33, 79, 0, 67, "Section",ExpressionUUID->"633c1cdf-9b81-4117-8260-70797cae347b"],
Cell[CellGroupData[{
Cell[1055, 37, 3741, 88, 52, "TestUI",ExpressionUUID->"29271cb6-c3c9-452e-9acc-878f4d4963ae",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[4799, 127, 1373, 32, 180, "Code",ExpressionUUID->"e9d0279f-9457-4344-8c3c-d20c99ac9f98",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->34816895]
}, Open  ]],
Cell[6187, 162, 430, 6, 33, "Output",ExpressionUUID->"3ce51afa-3a2f-496c-97e8-5c60a0040c89"]
}, Open  ]]
}, Open  ]]
}
]
*)

