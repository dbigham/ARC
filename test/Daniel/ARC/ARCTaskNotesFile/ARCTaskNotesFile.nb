(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     11367,        287]
NotebookOptionsPosition[      5225,        139]
NotebookOutlinePosition[     10670,        273]
CellTagsIndexPosition[     10627,        270]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ARCTaskNotesFile", "Title",ExpressionUUID->"531fac4d-eb80-47e0-89bc-e3722f8b872b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"RunUnitTests", "[", "ARCTaskNotesFile", "]"}]}], "Code",
 InitializationCell->False,
 CellLabel->"In[67]:=",ExpressionUUID->"a6c1641c-619d-4d61-8be2-a11b55d9766c"],

Cell[CellGroupData[{

Cell["Tests", "Section",ExpressionUUID->"a1fb3ee3-212d-4308-808c-436ed1c1ac15"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCTaskNotesFile-20220808-QOPG5O", Daniel`ARC`ARCTaskNotesFile, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202288125414621], 46567032]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> "ARCTaskNotesFile-20220808-QOPG5O"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCTaskNotesFile-20220808-QOPG5O", Daniel`ARC`ARCTaskNotesFile, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202288125414621], "CellID" -> 46567032, "SubTest" -> 
            None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCTaskNotesFile-20220808-QOPG5O", Daniel`ARC`ARCTaskNotesFile, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202288125414621], None], ImageSize -> {140., 25}, 
          Method -> "Queued"], 
         Row[{"ARCTaskNotesFile-20220808-QOPG5O"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202288125414621; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202288125414621], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202288125414621 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202288125414621 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202288125414621, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202288125414621 = "", ImageSize -> {100, 33}]}]}, 
         Spacings -> {0, 1}, Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{605., {21.3544921875, 26.6455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`DynamicOutputSectionVariable202288125414621}\
]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.8689635405591583`*^9},ExpressionUUID->"2a0406af-adee-453e-bde5-\
f9a19de56bcd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"ARCTaskNotesFile", "[", "\"\<my-task\>\"", "]"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.8689635254614906`*^9, 3.8689635405591583`*^9}},
 CellLabel->"In[65]:=",
 CellID->46567032,
 "TestId" -> 
 "ARCTaskNotesFile-20220808-QOPG5O",ExpressionUUID->"c1b0d8fd-8a4b-4114-bd03-\
d57d47527d69"]
}, Open  ]],

Cell[BoxData["\<\"TaskNotes/my-task/notes.md\"\>"], "Output",
 CellChangeTimes->{{3.868963526913975*^9, 3.868963537200198*^9}},
 CellLabel->"Out[66]=",ExpressionUUID->"17b4bc47-5a75-4d41-89ea-966ec62bcb1d"]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Local",
WindowSize->{718.5, 735.},
WindowMargins->{{-5.25, Automatic}, {Automatic, 0}},
DockedCells->{
  Cell[
   BoxData[
    DynamicBox[
     ToBoxes[
      Column[{
        Row[{
          Button["New Test", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`NewFunctionCell[
            Daniel`ARC`ARCTaskNotesFile], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202288125104614]], ImageSize -> {95., 40}, Method -> 
           "Queued"], " ", 
          Button["Add Tests to File", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`CreateUnitTests[
            Daniel`ARC`ARCTaskNotesFile, "SubTest" -> None], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202288125104614]], ImageSize -> {162.5, 40}, 
           Method -> "Queued"], " ", 
          Button[
          "Run Tests", 
           DevTools`TestingTools`RunUnitTestsInNotebook[
            Daniel`ARC`ARCTaskNotesFile]; Null, ImageSize -> {102.5, 40}, 
           Method -> "Queued"], " ", 
          Button["Edit Tests", 
           DevTools`TestingTools`EditUnitTests[Daniel`ARC`ARCTaskNotesFile], 
           ImageSize -> {110., 40}, Method -> "Queued"], " ", 
          Button["Edit Function", 
           DevTools`SourceTools`EditFunction[Daniel`ARC`ARCTaskNotesFile], 
           ImageSize -> {132.5, 40}, Method -> "Queued"], " ", 
          Row[{
            
            DynamicModule[{
             DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
              "Capture"}, 
             Button[
              Dynamic[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel], 
              If[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel === 
               "Capture", 
               DevTools`TestingTools`FunctionCapture`EnableFunctionCapture[
                Daniel`ARC`ARCTaskNotesFile]; 
               DevTools`TestingTools`FunctionCapture`\
RegisterFunctionCaptureNotebook[Daniel`ARC`ARCTaskNotesFile, 
                 InputNotebook[]]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Release"; Null, 
               DevTools`TestingTools`FunctionCapture`DisableFunctionCapture[
                Daniel`ARC`ARCTaskNotesFile]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Capture"; Null], ImageSize -> {100, 40}, Method -> "Queued"],
              DynamicModuleValues :> {}], 
            Button["?", 
             DevTools`TestingTools`FunctionCapture`CaptureFunctionHelp[], 
             ImageSize -> {30, 40}, Method -> "Queued"]}], " ", 
          Row[{
            Button["<", 
             DevTools`NotebookTools`MoveNotebook["Left"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"], 
            Button[">", 
             DevTools`NotebookTools`MoveNotebook["Right"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"]}]}], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202288125104614; If[
          And[
           ValueQ[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202288125104614], 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202288125104614 =!= "", 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202288125104614 =!= Null], 
          (If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {"MaxHeight" -> 300},
              "NakedSection"]], 
           Framed[#, FrameStyle -> None, FrameMargins -> 2], 
           
           Framed[#, FrameStyle -> LightGray, Background -> White, 
            FrameMargins -> 15]]& )[
           Grid[{{
              Pane[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202288125104614, "ImageSize" -> {Full, {0, 
                  OptionValue[
                  DevTools`NotebookTools`DynamicOutputSection, {
                   "MaxHeight" -> 300}, "MaxHeight"]}}, Scrollbars -> 
               Automatic, FrameMargins -> 0]}, 
             If[
              TrueQ[
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {
                "MaxHeight" -> 300}, "NakedSection"]], 
              Apply[Sequence, {}], {
               Button[
               "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202288125104614 = "", ImageSize -> {100, 33}]}]}, 
            Spacings -> {0, 1}, Alignment -> {Left, Top}]], 
          Apply[Sequence, {}]]}], StandardForm], 
     TrackedSymbols :> {
      DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202288125104614}]], "DockedCell"]},
TaggingRules->{
 "CreateNamedNotebook2Args" -> {
   "ARCTaskNotesFile", "Type" -> "Function", 
    "GenerateNotebookArgs" -> {"Function" -> Daniel`ARC`ARCTaskNotesFile}, 
    "ReturnNotebook" -> True}},
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"e36f7b11-560d-4fb9-9dfc-9e724842b10f"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 88, 0, 98, "Title",ExpressionUUID->"531fac4d-eb80-47e0-89bc-e3722f8b872b"],
Cell[671, 24, 247, 5, 52, "Code",ExpressionUUID->"a6c1641c-619d-4d61-8be2-a11b55d9766c",
 InitializationCell->False],
Cell[CellGroupData[{
Cell[943, 33, 79, 0, 67, "Section",ExpressionUUID->"a1fb3ee3-212d-4308-808c-436ed1c1ac15"],
Cell[CellGroupData[{
Cell[1047, 37, 3479, 80, 50, "TestUI",ExpressionUUID->"2a0406af-adee-453e-bde5-f9a19de56bcd",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[4529, 119, 447, 11, 52, "Code",ExpressionUUID->"c1b0d8fd-8a4b-4114-bd03-d57d47527d69",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->46567032]
}, Open  ]],
Cell[4991, 133, 206, 2, 32, "Output",ExpressionUUID->"17b4bc47-5a75-4d41-89ea-966ec62bcb1d"]
}, Open  ]]
}, Open  ]]
}
]
*)

