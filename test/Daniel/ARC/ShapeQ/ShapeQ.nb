(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     15974,        405]
NotebookOptionsPosition[      9484,        250]
NotebookOutlinePosition[     14805,        382]
CellTagsIndexPosition[     14762,        379]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ShapeQ", "Title",ExpressionUUID->"0e4cc5f8-9307-46b0-bdfe-b4581c0095ee"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"RunUnitTests", "[", "ShapeQ", "]"}]}], "Code",
 InitializationCell->False,
 CellLabel->
  "In[100]:=",ExpressionUUID->"ee7201c7-10c9-4e05-b1a8-8de2668f5e1a"],

Cell[CellGroupData[{

Cell["Tests", "Section",ExpressionUUID->"8fd7b50a-87f1-44ef-af41-52695e77b022"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ShapeQ-20220826-90L0XI", Daniel`ARC`ShapeQ, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826212538732], 91957209]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {"TestUiMarker", "TestId" -> "ShapeQ-20220826-90L0XI"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ShapeQ-20220826-90L0XI", Daniel`ARC`ShapeQ, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826212538732], "CellID" -> 91957209, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ShapeQ-20220826-90L0XI", Daniel`ARC`ShapeQ, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826212538732], None], ImageSize -> {140., 25},
           Method -> "Queued"], 
         Row[{"ShapeQ-20220826-90L0XI"}, ImageSize -> {Full, Automatic}, 
          Alignment -> {Right, Center}]}}], ImageSize -> {Full, Automatic}, 
      FrameStyle -> GrayLevel[0.8], FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826212538732; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826212538732], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826212538732 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826212538732 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826212538732, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826212538732 = "", ImageSize -> {100, 33}]}]},
          Spacings -> {0, 1}, Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{840., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826212538732}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.870552337735714*^9},ExpressionUUID->"23aa824e-564c-47e8-9984-\
b60661cd146e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"ShapeQ", "[", 
  RowBox[{
   RowBox[{"<|", 
    RowBox[{"\"\<Shape\>\"", " ", "->", " ", 
     RowBox[{"<|", 
      RowBox[{"\"\<Name\>\"", " ", "->", " ", "\"\<Line\>\""}], "|>"}]}], 
    "|>"}], ",", " ", "\"\<Line\>\""}], "]"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.8705523060640984`*^9, 3.8705523377367225`*^9}},
 CellLabel->"In[96]:=",
 CellID->91957209,
 "TestId" -> 
 "ShapeQ-20220826-90L0XI",ExpressionUUID->"6b5f1936-1547-4b23-8dec-\
dc9803e6d9ff"]
}, Open  ]],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.870552325775448*^9, 3.870552336437251*^9}},
 CellLabel->"Out[97]=",ExpressionUUID->"5eafd9e3-fa7e-4e3d-bcac-d1bf1eb5a667"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ShapeQ-20220826-DO5MLA", Daniel`ARC`ShapeQ, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826212538739], 3251992]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {"TestUiMarker", "TestId" -> "ShapeQ-20220826-DO5MLA"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ShapeQ-20220826-DO5MLA", Daniel`ARC`ShapeQ, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826212538739], "CellID" -> 3251992, "SubTest" -> 
            None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ShapeQ-20220826-DO5MLA", Daniel`ARC`ShapeQ, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826212538739], None], ImageSize -> {140., 25},
           Method -> "Queued"], 
         Row[{"ShapeQ-20220826-DO5MLA"}, ImageSize -> {Full, Automatic}, 
          Alignment -> {Right, Center}]}}], ImageSize -> {Full, Automatic}, 
      FrameStyle -> GrayLevel[0.8], FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826212538739; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826212538739], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826212538739 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826212538739 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826212538739, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826212538739 = "", ImageSize -> {100, 33}]}]},
          Spacings -> {0, 1}, Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{840., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826212538739}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.870552337876011*^9},ExpressionUUID->"83ff97b9-ee2e-42fd-8e06-\
75dd7e16a6d8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"ShapeQ", "[", 
  RowBox[{
   RowBox[{"<|", 
    RowBox[{"\"\<Shape\>\"", " ", "->", " ", 
     RowBox[{"<|", 
      RowBox[{"\"\<Name\>\"", " ", "->", " ", "\"\<Line\>\""}], "|>"}]}], 
    "|>"}], ",", " ", "\"\<Square\>\""}], "]"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.8705523060640984`*^9, 3.870552337876011*^9}},
 CellLabel->"In[98]:=",
 CellID->3251992,
 "TestId" -> 
 "ShapeQ-20220826-DO5MLA",ExpressionUUID->"358349ca-69fd-46a2-a701-\
58ad3dcf9f99"]
}, Open  ]],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.870552330135101*^9, 3.870552336984524*^9}},
 CellLabel->"Out[99]=",ExpressionUUID->"13ea7917-e660-4702-a60e-99db3e77a869"]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Local",
WindowSize->{958, 980},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
DockedCells->{
  Cell[
   BoxData[
    DynamicBox[
     ToBoxes[
      Column[{
        Row[{
          Button["New Test", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`NewFunctionCell[Daniel`ARC`ShapeQ], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826212437719]], ImageSize -> {95., 40}, 
           Method -> "Queued"], " ", 
          Button["Add Tests to File", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`CreateUnitTests[
            Daniel`ARC`ShapeQ, "SubTest" -> None], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826212437719]], ImageSize -> {162.5, 40}, 
           Method -> "Queued"], " ", 
          Button[
          "Run Tests", 
           DevTools`TestingTools`RunUnitTestsInNotebook[Daniel`ARC`ShapeQ]; 
           Null, ImageSize -> {102.5, 40}, Method -> "Queued"], " ", 
          Button["Edit Tests", 
           DevTools`TestingTools`EditUnitTests[Daniel`ARC`ShapeQ], 
           ImageSize -> {110., 40}, Method -> "Queued"], " ", 
          Button["Edit Function", 
           DevTools`SourceTools`EditFunction[Daniel`ARC`ShapeQ], 
           ImageSize -> {132.5, 40}, Method -> "Queued"], " ", 
          Row[{
            
            DynamicModule[{
             DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
              "Capture"}, 
             Button[
              Dynamic[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel], 
              If[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel === 
               "Capture", 
               DevTools`TestingTools`FunctionCapture`EnableFunctionCapture[
                Daniel`ARC`ShapeQ]; 
               DevTools`TestingTools`FunctionCapture`\
RegisterFunctionCaptureNotebook[Daniel`ARC`ShapeQ, 
                 InputNotebook[]]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Release"; Null, 
               DevTools`TestingTools`FunctionCapture`DisableFunctionCapture[
                Daniel`ARC`ShapeQ]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Capture"; Null], ImageSize -> {100, 40}, Method -> "Queued"],
              DynamicModuleValues :> {}], 
            Button["?", 
             DevTools`TestingTools`FunctionCapture`CaptureFunctionHelp[], 
             ImageSize -> {30, 40}, Method -> "Queued"]}], " ", 
          Row[{
            Button["<", 
             DevTools`NotebookTools`MoveNotebook["Left"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"], 
            Button[">", 
             DevTools`NotebookTools`MoveNotebook["Right"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"]}]}], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826212437719; If[
          And[
           ValueQ[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826212437719], 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826212437719 =!= "", 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826212437719 =!= Null], 
          (If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {"MaxHeight" -> 300},
              "NakedSection"]], 
           Framed[#, FrameStyle -> None, FrameMargins -> 2], 
           
           Framed[#, FrameStyle -> LightGray, Background -> White, 
            FrameMargins -> 15]]& )[
           Grid[{{
              Pane[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826212437719, "ImageSize" -> {Full, {0, 
                  OptionValue[
                  DevTools`NotebookTools`DynamicOutputSection, {
                   "MaxHeight" -> 300}, "MaxHeight"]}}, Scrollbars -> 
               Automatic, FrameMargins -> 0]}, 
             If[
              TrueQ[
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {
                "MaxHeight" -> 300}, "NakedSection"]], 
              Apply[Sequence, {}], {
               Button[
               "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826212437719 = "", ImageSize -> {100, 33}]}]},
             Spacings -> {0, 1}, Alignment -> {Left, Top}]], 
          Apply[Sequence, {}]]}], StandardForm], 
     TrackedSymbols :> {
      DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022826212437719}]], "DockedCell"]},
TaggingRules->{
 "CreateNamedNotebook2Args" -> {
   "ShapeQ", "Type" -> "Function", 
    "GenerateNotebookArgs" -> {"Function" -> Daniel`ARC`ShapeQ}, 
    "ReturnNotebook" -> True}},
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"54c15b10-e581-4376-b941-5e64c1140c41"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 78, 0, 98, "Title",ExpressionUUID->"0e4cc5f8-9307-46b0-bdfe-b4581c0095ee"],
Cell[661, 24, 241, 6, 54, "Code",ExpressionUUID->"ee7201c7-10c9-4e05-b1a8-8de2668f5e1a",
 InitializationCell->False],
Cell[CellGroupData[{
Cell[927, 34, 79, 0, 67, "Section",ExpressionUUID->"8fd7b50a-87f1-44ef-af41-52695e77b022"],
Cell[CellGroupData[{
Cell[1031, 38, 3388, 78, 52, "TestUI",ExpressionUUID->"23aa824e-564c-47e8-9984-b60661cd146e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[4422, 118, 619, 17, 54, "Code",ExpressionUUID->"6b5f1936-1547-4b23-8dec-dc9803e6d9ff",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->91957209]
}, Open  ]],
Cell[5056, 138, 176, 2, 33, "Output",ExpressionUUID->"5eafd9e3-fa7e-4e3d-bcac-d1bf1eb5a667"],
Cell[CellGroupData[{
Cell[5257, 144, 3386, 78, 52, "TestUI",ExpressionUUID->"83ff97b9-ee2e-42fd-8e06-75dd7e16a6d8",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[8646, 224, 618, 17, 54, "Code",ExpressionUUID->"358349ca-69fd-46a2-a701-58ad3dcf9f99",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->3251992]
}, Open  ]],
Cell[9279, 244, 177, 2, 33, "Output",ExpressionUUID->"13ea7917-e660-4702-a60e-99db3e77a869"]
}, Open  ]]
}, Open  ]]
}
]
*)

