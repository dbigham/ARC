(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     25858,        651]
NotebookOptionsPosition[     18332,        476]
NotebookOutlinePosition[     23738,        610]
CellTagsIndexPosition[     23695,        607]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ObjectX", "Title",ExpressionUUID->"4de136f3-609f-4a9d-81da-2f63534eebf8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"RunUnitTests", "[", "ObjectX", "]"}]}], "Code",
 InitializationCell->False,
 CellLabel->
  "In[1008]:=",ExpressionUUID->"3353dbc9-8c88-40ad-8d4b-6f62da3fc29b"],

Cell[CellGroupData[{

Cell["Tests", "Section",ExpressionUUID->"d8370d8e-5bcf-4e2d-8b7d-9a473c8750b0"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ObjectX-20221112-KNZ63O", Daniel`ARC`ObjectX, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111284242229182], 56043348, "SubTest" -> 
              None]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {"TestUiMarker", "TestId" -> "ObjectX-20221112-KNZ63O"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ObjectX-20221112-KNZ63O", Daniel`ARC`ObjectX, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111284242229182], "CellID" -> 56043348, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ObjectX-20221112-KNZ63O", Daniel`ARC`ObjectX, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111284242229182], 
           Utility`FilterOptions[
           "SubTest" -> None, 
            DevTools`TestingTools`Private`openInEditorClicked]], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ObjectX-20221112-KNZ63O"}, ImageSize -> {Full, Automatic}, 
          Alignment -> {Right, Center}]}}], ImageSize -> {Full, Automatic}, 
      FrameStyle -> GrayLevel[0.8], FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111284242229182; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111284242229182], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111284242229182 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111284242229182 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111284242229182, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111284242229182 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{840., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111284242229182}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.877249362022818*^9},ExpressionUUID->"202a709a-9e68-4e89-959e-\
785140da5b31"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"ObjectX", "[", 
  RowBox[{"<|", 
   RowBox[{"\"\<X\>\"", " ", "->", " ", "1"}], "|>"}], "]"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.877249341790064*^9, 3.877249362022818*^9}},
 CellLabel->"In[998]:=",
 CellID->56043348,
 "TestId" -> 
 "ObjectX-20221112-KNZ63O",ExpressionUUID->"54e0c4c9-44c4-466e-9fa6-\
fe1fd2f02920"]
}, Open  ]],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.8772493443716154`*^9},
 CellLabel->
  "Out[999]=",ExpressionUUID->"f6319ee6-ce3d-4e12-ad04-54fc9d91c577"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ObjectX-20221112-F6EOAI", Daniel`ARC`ObjectX, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111284242229187], 89573164, "SubTest" -> 
              None]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {"TestUiMarker", "TestId" -> "ObjectX-20221112-F6EOAI"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ObjectX-20221112-F6EOAI", Daniel`ARC`ObjectX, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111284242229187], "CellID" -> 89573164, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ObjectX-20221112-F6EOAI", Daniel`ARC`ObjectX, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111284242229187], 
           Utility`FilterOptions[
           "SubTest" -> None, 
            DevTools`TestingTools`Private`openInEditorClicked]], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ObjectX-20221112-F6EOAI"}, ImageSize -> {Full, Automatic}, 
          Alignment -> {Right, Center}]}}], ImageSize -> {Full, Automatic}, 
      FrameStyle -> GrayLevel[0.8], FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111284242229187; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111284242229187], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111284242229187 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111284242229187 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111284242229187, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111284242229187 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{840., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111284242229187}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.877249362175802*^9},ExpressionUUID->"b4824447-4cd2-46a1-8008-\
6ab2aa0eec36"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"ObjectX", "[", 
  RowBox[{"<|", 
   RowBox[{"\"\<Position\>\"", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "2"}], "}"}]}], "|>"}], "]"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.877249341790064*^9, 3.8772493621768026`*^9}},
 CellLabel->"In[1000]:=",
 CellID->89573164,
 "TestId" -> 
 "ObjectX-20221112-F6EOAI",ExpressionUUID->"d83e9bb3-da78-4760-824c-\
b749e28ca403"]
}, Open  ]],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.8772493523168635`*^9},
 CellLabel->
  "Out[1001]=",ExpressionUUID->"336dcaff-3f8c-4d93-985b-8003abf9cacf"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ObjectX-20221112-WTRV76", Daniel`ARC`ObjectX, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111284242229194], 1540695, "SubTest" -> 
              None]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {"TestUiMarker", "TestId" -> "ObjectX-20221112-WTRV76"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ObjectX-20221112-WTRV76", Daniel`ARC`ObjectX, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111284242229194], "CellID" -> 1540695, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ObjectX-20221112-WTRV76", Daniel`ARC`ObjectX, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111284242229194], 
           Utility`FilterOptions[
           "SubTest" -> None, 
            DevTools`TestingTools`Private`openInEditorClicked]], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ObjectX-20221112-WTRV76"}, ImageSize -> {Full, Automatic}, 
          Alignment -> {Right, Center}]}}], ImageSize -> {Full, Automatic}, 
      FrameStyle -> GrayLevel[0.8], FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111284242229194; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111284242229194], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111284242229194 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111284242229194 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111284242229194, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111284242229194 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{840., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111284242229194}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.8772493623748465`*^9},ExpressionUUID->"3812919d-559e-46b1-81eb-\
93322fac69e5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"ObjectX", "[", 
  RowBox[{"<|", 
   RowBox[{"\"\<Position\>\"", " ", "->", " ", 
    RowBox[{"<|", 
     RowBox[{"\"\<X\>\"", " ", "->", " ", "3"}], "|>"}]}], "|>"}], 
  "]"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.877249341790064*^9, 3.8772493623748465`*^9}},
 CellLabel->"In[1002]:=",
 CellID->1540695,
 "TestId" -> 
 "ObjectX-20221112-WTRV76",ExpressionUUID->"c70fe2cd-3423-457a-9037-\
ff449dc10a96"]
}, Open  ]],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.877249360489894*^9},
 CellLabel->
  "Out[1003]=",ExpressionUUID->"93b8ed2d-97a0-48a0-b102-7d35274be673"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ObjectX-20221112-9T6B8S", Daniel`ARC`ObjectX, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111284254229205], 32350867, "SubTest" -> 
              None]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {"TestUiMarker", "TestId" -> "ObjectX-20221112-9T6B8S"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ObjectX-20221112-9T6B8S", Daniel`ARC`ObjectX, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111284254229205], "CellID" -> 32350867, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ObjectX-20221112-9T6B8S", Daniel`ARC`ObjectX, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111284254229205], 
           Utility`FilterOptions[
           "SubTest" -> None, 
            DevTools`TestingTools`Private`openInEditorClicked]], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ObjectX-20221112-9T6B8S"}, ImageSize -> {Full, Automatic}, 
          Alignment -> {Right, Center}]}}], ImageSize -> {Full, Automatic}, 
      FrameStyle -> GrayLevel[0.8], FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111284254229205; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111284254229205], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111284254229205 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111284254229205 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111284254229205, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111284254229205 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{840., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111284254229205}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.8772493744970164`*^9},ExpressionUUID->"eb06093e-2c6b-4395-ab53-\
b5aa341eee32"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"ObjectX", "[", 
  RowBox[{"<|", "|>"}], "]"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.877249341790064*^9, 3.8772493726540318`*^9}},
 CellLabel->"In[1006]:=",
 CellID->32350867,
 "TestId" -> 
 "ObjectX-20221112-9T6B8S",ExpressionUUID->"a2daf916-9f91-421c-85a2-\
63d0a4e433c1"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Missing", "[", 
  RowBox[{"\<\"NetSpecified\"\>", ",", "\<\"X\"\>"}], "]"}]], "Output",
 CellChangeTimes->{3.8772493730855417`*^9},
 CellLabel->
  "Out[1007]=",ExpressionUUID->"d977d973-3224-4ff1-addb-a93b1fa916e6"]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Local",
WindowSize->{958, 980},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
DockedCells->{
  Cell[
   BoxData[
    DynamicBox[
     ToBoxes[
      Column[{
        Row[{
          Button["New Test", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`NewFunctionCell[Daniel`ARC`ObjectX], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111283927229165]], ImageSize -> {95., 40}, 
           Method -> "Queued"], " ", 
          Button["Add Tests to File", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`CreateUnitTests[
            Daniel`ARC`ObjectX, "SubTest" -> None], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111283927229165]], ImageSize -> {162.5, 40}, 
           Method -> "Queued"], " ", 
          Button[
          "Run Tests", 
           DevTools`TestingTools`RunUnitTestsInNotebook[Daniel`ARC`ObjectX]; 
           Null, ImageSize -> {102.5, 40}, Method -> "Queued"], " ", 
          Button["Edit Tests", 
           DevTools`TestingTools`EditUnitTests[
           Daniel`ARC`ObjectX, "SubTest" -> None], ImageSize -> {110., 40}, 
           Method -> "Queued"], " ", 
          Button["Edit Function", 
           DevTools`SourceTools`EditFunction[Daniel`ARC`ObjectX], 
           ImageSize -> {132.5, 40}, Method -> "Queued"], " ", 
          Row[{
            
            DynamicModule[{
             DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
              "Capture"}, 
             Button[
              Dynamic[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel], 
              If[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel === 
               "Capture", 
               DevTools`TestingTools`FunctionCapture`EnableFunctionCapture[
                Daniel`ARC`ObjectX]; 
               DevTools`TestingTools`FunctionCapture`\
RegisterFunctionCaptureNotebook[Daniel`ARC`ObjectX, 
                 InputNotebook[]]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Release"; Null, 
               DevTools`TestingTools`FunctionCapture`DisableFunctionCapture[
                Daniel`ARC`ObjectX]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Capture"; Null], ImageSize -> {100, 40}, Method -> "Queued"],
              DynamicModuleValues :> {}], 
            Button["?", 
             DevTools`TestingTools`FunctionCapture`CaptureFunctionHelp[], 
             ImageSize -> {30, 40}, Method -> "Queued"]}], " ", 
          Row[{
            Button["<", 
             DevTools`NotebookTools`MoveNotebook["Left"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"], 
            Button[">", 
             DevTools`NotebookTools`MoveNotebook["Right"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"]}]}], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111283927229165; If[
          And[
           ValueQ[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111283927229165], 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111283927229165 =!= "", 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111283927229165 =!= Null], 
          (If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {"MaxHeight" -> 300},
              "NakedSection"]], 
           Framed[#, FrameStyle -> None, FrameMargins -> 2], 
           
           Framed[#, FrameStyle -> LightGray, Background -> White, 
            FrameMargins -> 15]]& )[
           Grid[{{
              Pane[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111283927229165, "ImageSize" -> {Full, {0, 
                  OptionValue[
                  DevTools`NotebookTools`DynamicOutputSection, {
                   "MaxHeight" -> 300}, "MaxHeight"]}}, Scrollbars -> 
               Automatic, FrameMargins -> 0]}, 
             If[
              TrueQ[
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {
                "MaxHeight" -> 300}, "NakedSection"]], 
              Apply[Sequence, {}], {
               Button[
               "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111283927229165 = "", 
                ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
            Alignment -> {Left, Top}]], 
          Apply[Sequence, {}]]}], StandardForm], 
     TrackedSymbols :> {
      DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111283927229165}]], "DockedCell"]},
TaggingRules->{
 "CreateNamedNotebook2Args" -> {
   "ObjectX", "Type" -> "Function", 
    "GenerateNotebookArgs" -> {"Function" -> Daniel`ARC`ObjectX}, 
    "ReturnNotebook" -> True}},
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"333b236e-97cf-4e2d-b802-a89222f89339"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 79, 0, 98, "Title",ExpressionUUID->"4de136f3-609f-4a9d-81da-2f63534eebf8"],
Cell[662, 24, 243, 6, 54, "Code",ExpressionUUID->"3353dbc9-8c88-40ad-8d4b-6f62da3fc29b",
 InitializationCell->False],
Cell[CellGroupData[{
Cell[930, 34, 79, 0, 67, "Section",ExpressionUUID->"d8370d8e-5bcf-4e2d-8b7d-9a473c8750b0"],
Cell[CellGroupData[{
Cell[1034, 38, 3598, 83, 52, "TestUI",ExpressionUUID->"202a709a-9e68-4e89-959e-785140da5b31",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[4635, 123, 480, 13, 54, "Code",ExpressionUUID->"54e0c4c9-44c4-466e-9fa6-fe1fd2f02920",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->56043348]
}, Open  ]],
Cell[5130, 139, 155, 3, 33, "Output",ExpressionUUID->"f6319ee6-ce3d-4e12-ad04-54fc9d91c577"],
Cell[CellGroupData[{
Cell[5310, 146, 3598, 83, 52, "TestUI",ExpressionUUID->"b4824447-4cd2-46a1-8008-6ab2aa0eec36",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[8911, 231, 546, 15, 54, "Code",ExpressionUUID->"d83e9bb3-da78-4760-824c-b749e28ca403",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->89573164]
}, Open  ]],
Cell[9472, 249, 156, 3, 33, "Output",ExpressionUUID->"336dcaff-3f8c-4d93-985b-8003abf9cacf"],
Cell[CellGroupData[{
Cell[9653, 256, 3598, 83, 52, "TestUI",ExpressionUUID->"3812919d-559e-46b1-81eb-93322fac69e5",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[13254, 341, 564, 16, 54, "Code",ExpressionUUID->"c70fe2cd-3423-457a-9037-ff449dc10a96",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->1540695]
}, Open  ]],
Cell[13833, 360, 154, 3, 33, "Output",ExpressionUUID->"93b8ed2d-97a0-48a0-b102-7d35274be673"],
Cell[CellGroupData[{
Cell[14012, 367, 3600, 83, 52, "TestUI",ExpressionUUID->"eb06093e-2c6b-4395-ab53-b5aa341eee32",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[17615, 452, 435, 12, 54, "Code",ExpressionUUID->"a2daf916-9f91-421c-85a2-63d0a4e433c1",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->32350867]
}, Open  ]],
Cell[18065, 467, 239, 5, 33, "Output",ExpressionUUID->"d977d973-3224-4ff1-addb-a93b1fa916e6"]
}, Open  ]]
}, Open  ]]
}
]
*)

