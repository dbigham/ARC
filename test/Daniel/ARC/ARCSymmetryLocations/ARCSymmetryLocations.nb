(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     17205,        443]
NotebookOptionsPosition[     10472,        283]
NotebookOutlinePosition[     16032,        420]
CellTagsIndexPosition[     15989,        417]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ARCSymmetryLocations", "Title",ExpressionUUID->"7fe9386a-1e61-42da-bee4-2a0e31fe36b5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"RunUnitTests", "[", "ARCSymmetryLocations", "]"}]}], "Code",
 InitializationCell->False,
 CellLabel->
  "In[331]:=",ExpressionUUID->"15d17bc7-5189-4694-b1bf-3b7bee5275fe"],

Cell[CellGroupData[{

Cell["Tests", "Section",ExpressionUUID->"5df9b796-85d3-492e-bc2f-d31bab84600c"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCSymmetryLocations-20220928-DXLR5D", 
              Daniel`ARC`ARCSymmetryLocations, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229281923722820], 56893596, "SubTest" -> None]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> 
            "ARCSymmetryLocations-20220928-DXLR5D"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCSymmetryLocations-20220928-DXLR5D", 
            Daniel`ARC`ARCSymmetryLocations, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229281923722820], "CellID" -> 56893596, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCSymmetryLocations-20220928-DXLR5D", 
           Daniel`ARC`ARCSymmetryLocations, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229281923722820], 
           Utility`FilterOptions[
           "SubTest" -> None, 
            DevTools`TestingTools`Private`openInEditorClicked]], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCSymmetryLocations-20220928-DXLR5D"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229281923722820; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229281923722820], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229281923722820 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229281923722820 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229281923722820, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229281923722820 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{840., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229281923722820}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.8733961870334997`*^9},ExpressionUUID->"31f10357-dcf0-4176-82c6-\
8515f95dd381"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"ARCSymmetryLocations", "[", 
  RowBox[{"10", ",", " ", "10", ",", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", " ", "1"}], "}"}]}], "]"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.873396145248248*^9, 3.873396151471661*^9}, 
   3.8733961870334997`*^9},
 CellLabel->"In[327]:=",
 CellID->56893596,
 "TestId" -> 
 "ARCSymmetryLocations-20220928-DXLR5D",ExpressionUUID->"0b6db244-6176-4581-\
895f-086fe45d73cb"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"10", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "10"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.873396151886634*^9, 3.873396172018368*^9}},
 CellLabel->
  "Out[328]=",ExpressionUUID->"b66d3229-44bc-4b57-a46e-59ec0ccccdc7"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCSymmetryLocations-20220928-L7P0G2", 
              Daniel`ARC`ARCSymmetryLocations, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229281923722823], 36095343, "SubTest" -> None]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> 
            "ARCSymmetryLocations-20220928-L7P0G2"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCSymmetryLocations-20220928-L7P0G2", 
            Daniel`ARC`ARCSymmetryLocations, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229281923722823], "CellID" -> 36095343, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCSymmetryLocations-20220928-L7P0G2", 
           Daniel`ARC`ARCSymmetryLocations, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229281923722823], 
           Utility`FilterOptions[
           "SubTest" -> None, 
            DevTools`TestingTools`Private`openInEditorClicked]], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCSymmetryLocations-20220928-L7P0G2"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229281923722823; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229281923722823], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229281923722823 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229281923722823 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229281923722823, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229281923722823 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{840., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229281923722823}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.8733961872059517`*^9},ExpressionUUID->"3dbcd13d-b005-4c9e-a7ca-\
2717939db26d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"ARCSymmetryLocations", "[", 
  RowBox[{"10", ",", " ", "10", ",", " ", 
   RowBox[{"{", 
    RowBox[{"2", ",", " ", "2"}], "}"}]}], "]"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.873396145248248*^9, 3.8733961872059517`*^9}},
 CellLabel->"In[329]:=",
 CellID->36095343,
 "TestId" -> 
 "ARCSymmetryLocations-20220928-L7P0G2",ExpressionUUID->"bc8dfd0b-a9a5-47e0-\
baa4-3dbbffce9054"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"9", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "9"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.873396180760711*^9},
 CellLabel->
  "Out[330]=",ExpressionUUID->"29dea9d5-5d2e-4230-8661-b2b7938fb0e3"]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Local",
WindowSize->{958, 980},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
DockedCells->{
  Cell[
   BoxData[
    DynamicBox[
     ToBoxes[
      Column[{
        Row[{
          Button["New Test", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`NewFunctionCell[
            Daniel`ARC`ARCSymmetryLocations], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229281921722811]], ImageSize -> {95., 40}, 
           Method -> "Queued"], " ", 
          Button["Add Tests to File", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`CreateUnitTests[
            Daniel`ARC`ARCSymmetryLocations, "SubTest" -> None], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229281921722811]], ImageSize -> {162.5, 40}, 
           Method -> "Queued"], " ", 
          Button[
          "Run Tests", 
           DevTools`TestingTools`RunUnitTestsInNotebook[
            Daniel`ARC`ARCSymmetryLocations]; Null, ImageSize -> {102.5, 40}, 
           Method -> "Queued"], " ", 
          Button["Edit Tests", 
           DevTools`TestingTools`EditUnitTests[
           Daniel`ARC`ARCSymmetryLocations, "SubTest" -> None], 
           ImageSize -> {110., 40}, Method -> "Queued"], " ", 
          Button["Edit Function", 
           DevTools`SourceTools`EditFunction[Daniel`ARC`ARCSymmetryLocations],
            ImageSize -> {132.5, 40}, Method -> "Queued"], " ", 
          Row[{
            
            DynamicModule[{
             DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
              "Capture"}, 
             Button[
              Dynamic[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel], 
              If[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel === 
               "Capture", 
               DevTools`TestingTools`FunctionCapture`EnableFunctionCapture[
                Daniel`ARC`ARCSymmetryLocations]; 
               
               DevTools`TestingTools`FunctionCapture`\
RegisterFunctionCaptureNotebook[Daniel`ARC`ARCSymmetryLocations, 
                 InputNotebook[]]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Release"; Null, 
               DevTools`TestingTools`FunctionCapture`DisableFunctionCapture[
                Daniel`ARC`ARCSymmetryLocations]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Capture"; Null], ImageSize -> {100, 40}, Method -> "Queued"],
              DynamicModuleValues :> {}], 
            Button["?", 
             DevTools`TestingTools`FunctionCapture`CaptureFunctionHelp[], 
             ImageSize -> {30, 40}, Method -> "Queued"]}], " ", 
          Row[{
            Button["<", 
             DevTools`NotebookTools`MoveNotebook["Left"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"], 
            Button[">", 
             DevTools`NotebookTools`MoveNotebook["Right"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"]}]}], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229281921722811; If[
          And[
           ValueQ[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229281921722811], 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229281921722811 =!= "", 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229281921722811 =!= Null], 
          (If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {"MaxHeight" -> 300},
              "NakedSection"]], 
           Framed[#, FrameStyle -> None, FrameMargins -> 2], 
           
           Framed[#, FrameStyle -> LightGray, Background -> White, 
            FrameMargins -> 15]]& )[
           Grid[{{
              Pane[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229281921722811, "ImageSize" -> {Full, {0, 
                  OptionValue[
                  DevTools`NotebookTools`DynamicOutputSection, {
                   "MaxHeight" -> 300}, "MaxHeight"]}}, Scrollbars -> 
               Automatic, FrameMargins -> 0]}, 
             If[
              TrueQ[
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {
                "MaxHeight" -> 300}, "NakedSection"]], 
              Apply[Sequence, {}], {
               Button[
               "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229281921722811 = "", 
                ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
            Alignment -> {Left, Top}]], 
          Apply[Sequence, {}]]}], StandardForm], 
     TrackedSymbols :> {
      DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229281921722811}]], "DockedCell"]},
TaggingRules->{
 "CreateNamedNotebook2Args" -> {
   "ARCSymmetryLocations", "Type" -> "Function", 
    "GenerateNotebookArgs" -> {"Function" -> Daniel`ARC`ARCSymmetryLocations},
     "ReturnNotebook" -> True}},
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"60037230-8e04-4362-a6fe-66f18ae729c7"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 92, 0, 98, "Title",ExpressionUUID->"7fe9386a-1e61-42da-bee4-2a0e31fe36b5"],
Cell[675, 24, 255, 6, 54, "Code",ExpressionUUID->"15d17bc7-5189-4694-b1bf-3b7bee5275fe",
 InitializationCell->False],
Cell[CellGroupData[{
Cell[955, 34, 79, 0, 67, "Section",ExpressionUUID->"5df9b796-85d3-492e-bc2f-d31bab84600c"],
Cell[CellGroupData[{
Cell[1059, 38, 3741, 88, 52, "TestUI",ExpressionUUID->"31f10357-dcf0-4176-82c6-8515f95dd381",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[4803, 128, 565, 15, 54, "Code",ExpressionUUID->"0b6db244-6176-4581-895f-086fe45d73cb",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->56893596]
}, Open  ]],
Cell[5383, 146, 383, 11, 33, "Output",ExpressionUUID->"b66d3229-44bc-4b57-a46e-59ec0ccccdc7"],
Cell[CellGroupData[{
Cell[5791, 161, 3741, 88, 52, "TestUI",ExpressionUUID->"3dbcd13d-b005-4c9e-a7ca-2717939db26d",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[9535, 251, 539, 14, 54, "Code",ExpressionUUID->"bc8dfd0b-a9a5-47e0-baa4-3dbbffce9054",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->36095343]
}, Open  ]],
Cell[10089, 268, 355, 11, 33, "Output",ExpressionUUID->"29dea9d5-5d2e-4230-8661-b2b7938fb0e3"]
}, Open  ]]
}, Open  ]]
}
]
*)

