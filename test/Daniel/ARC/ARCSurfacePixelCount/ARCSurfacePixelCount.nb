(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     28208,        706]
NotebookOptionsPosition[     20520,        528]
NotebookOutlinePosition[     26080,        665]
CellTagsIndexPosition[     26037,        662]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ARCSurfacePixelCount", "Title",ExpressionUUID->"3c657019-c665-4ec5-a25f-31b950c90d5e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"RunUnitTests", "[", "ARCSurfacePixelCount", "]"}]}], "Code",
 InitializationCell->False,
 CellLabel->
  "In[250]:=",ExpressionUUID->"d96b2e42-8f49-448b-8ced-5e20104ea566"],

Cell[CellGroupData[{

Cell["Tests", "Section",ExpressionUUID->"94c7b349-4ec6-4746-8570-14dae338db58"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCSurfacePixelCount-20220905-9OA29B", 
              Daniel`ARC`ARCSurfacePixelCount, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229511545912942], 33020624, "SubTest" -> None]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> 
            "ARCSurfacePixelCount-20220905-9OA29B"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCSurfacePixelCount-20220905-9OA29B", 
            Daniel`ARC`ARCSurfacePixelCount, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229511545912942], "CellID" -> 33020624, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCSurfacePixelCount-20220905-9OA29B", 
           Daniel`ARC`ARCSurfacePixelCount, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229511545912942], 
           Utility`FilterOptions[
           "SubTest" -> None, 
            DevTools`TestingTools`Private`openInEditorClicked]], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCSurfacePixelCount-20220905-9OA29B"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229511545912942; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229511545912942], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229511545912942 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229511545912942 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229511545912942, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229511545912942 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{840., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229511545912942}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.8713820994769526`*^9},ExpressionUUID->"54a97aee-0b38-4e1c-96f4-\
7dc9f31d5eff"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ARCSurfacePixelCount", "[", "\n", "\t", 
   RowBox[{"{", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", " ", "1", ",", " ", 
       RowBox[{"-", "1"}]}], "}"}], ",", "\n", "\t\t", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", 
       RowBox[{"-", "1"}], ",", " ", "1"}], "}"}], ",", "\n", "\t\t", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", " ", "1", ",", " ", 
       RowBox[{"-", "1"}]}], "}"}]}], "\n", "\t", "}"}], "\n", "]"}], " ", "//",
   " ", "Indent2"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.871379950671489*^9, 3.871379972408269*^9}, {
   3.8713803449286404`*^9, 3.8713803467751036`*^9}, 3.8713807060106125`*^9, 
   3.871382031321144*^9},
 CellLabel->"In[236]:=",
 CellID->33020624,
 "TestId" -> 
 "ARCSurfacePixelCount-20220905-9OA29B",ExpressionUUID->"8c154b42-1850-428a-\
9f5a-0e829301bdf2"]
}, Open  ]],

Cell[BoxData["\<\"4\"\>"], "Output",
 CellChangeTimes->{3.8713820355175076`*^9},
 CellLabel->
  "Out[237]=",ExpressionUUID->"7fe4c9af-00fe-4448-9aa0-5ddd3b85ce75"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCSurfacePixelCount-20220905-UH3YNY", 
              Daniel`ARC`ARCSurfacePixelCount, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229511546012945], 79062008, "SubTest" -> None]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> 
            "ARCSurfacePixelCount-20220905-UH3YNY"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCSurfacePixelCount-20220905-UH3YNY", 
            Daniel`ARC`ARCSurfacePixelCount, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229511546012945], "CellID" -> 79062008, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCSurfacePixelCount-20220905-UH3YNY", 
           Daniel`ARC`ARCSurfacePixelCount, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229511546012945], 
           Utility`FilterOptions[
           "SubTest" -> None, 
            DevTools`TestingTools`Private`openInEditorClicked]], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCSurfacePixelCount-20220905-UH3YNY"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229511546012945; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229511546012945], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229511546012945 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229511546012945 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229511546012945, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229511546012945 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{840., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229511546012945}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.871382099723534*^9},ExpressionUUID->"15056d44-b861-46c9-a242-\
c39b8f69f7fd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ARCSurfacePixelCount", "[", "\n", "\t", 
   RowBox[{"{", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}], ",", "\n", "\t\t", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", 
       RowBox[{"-", "1"}], ",", " ", "1"}], "}"}], ",", "\n", "\t\t", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}]}], "\n", "\t", "}"}],
    "\n", "]"}], " ", "//", " ", "Indent2"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.871379950671489*^9, 3.871379972408269*^9}, {
   3.8713803449286404`*^9, 3.8713803467751036`*^9}, {3.8713806829360175`*^9, 
   3.8713807061912413`*^9}, 3.8713820322827168`*^9},
 CellLabel->"In[238]:=",
 CellID->79062008,
 "TestId" -> 
 "ARCSurfacePixelCount-20220905-UH3YNY",ExpressionUUID->"6dfdf25b-a374-48c1-\
9c22-43b842bd6042"]
}, Open  ]],

Cell[BoxData["\<\"8\"\>"], "Output",
 CellChangeTimes->{3.871382036191202*^9},
 CellLabel->
  "Out[239]=",ExpressionUUID->"b1a45b2b-f547-4c45-93b7-23a861c6df59"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCSurfacePixelCount-20220905-TWJ00T", 
              Daniel`ARC`ARCSurfacePixelCount, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229511546012948], 40343018, "SubTest" -> None]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> 
            "ARCSurfacePixelCount-20220905-TWJ00T"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCSurfacePixelCount-20220905-TWJ00T", 
            Daniel`ARC`ARCSurfacePixelCount, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229511546012948], "CellID" -> 40343018, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCSurfacePixelCount-20220905-TWJ00T", 
           Daniel`ARC`ARCSurfacePixelCount, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229511546012948], 
           Utility`FilterOptions[
           "SubTest" -> None, 
            DevTools`TestingTools`Private`openInEditorClicked]], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCSurfacePixelCount-20220905-TWJ00T"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229511546012948; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229511546012948], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229511546012948 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229511546012948 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229511546012948, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229511546012948 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{840., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229511546012948}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.871382099970519*^9},ExpressionUUID->"4a4c9940-d506-48e8-8110-\
d8b9772706e6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ARCSurfacePixelCount", "[", "\n", "\t", 
   RowBox[{"{", "\n", "\t\t", 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}], "\n", "\t", "}"}], 
   "\n", "]"}], " ", "//", " ", "Indent2"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.871379950671489*^9, 3.871379972408269*^9}, {
   3.8713803449286404`*^9, 3.8713803467751036`*^9}, 3.8713807060106125`*^9, {
   3.871382033267248*^9, 3.871382045239669*^9}},
 CellLabel->"In[244]:=",
 CellID->40343018,
 "TestId" -> 
 "ARCSurfacePixelCount-20220905-TWJ00T",ExpressionUUID->"00126d14-83cb-41ab-\
9e3f-a7f776a94b10"]
}, Open  ]],

Cell[BoxData["\<\"3\"\>"], "Output",
 CellChangeTimes->{{3.871382036862661*^9, 3.871382072286519*^9}},
 CellLabel->
  "Out[245]=",ExpressionUUID->"788e9f95-e36b-42a1-883c-b5c7046da0a0"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCSurfacePixelCount-20220905-XEO2DB", 
              Daniel`ARC`ARCSurfacePixelCount, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022951155012951], 93293055, "SubTest" -> None]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> 
            "ARCSurfacePixelCount-20220905-XEO2DB"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCSurfacePixelCount-20220905-XEO2DB", 
            Daniel`ARC`ARCSurfacePixelCount, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022951155012951], "CellID" -> 93293055, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCSurfacePixelCount-20220905-XEO2DB", 
           Daniel`ARC`ARCSurfacePixelCount, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022951155012951], 
           Utility`FilterOptions[
           "SubTest" -> None, 
            DevTools`TestingTools`Private`openInEditorClicked]], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCSurfacePixelCount-20220905-XEO2DB"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022951155012951; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022951155012951], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022951155012951 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022951155012951 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022951155012951, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022951155012951 = "", ImageSize -> {100, 33}]}]},
          Spacings -> {0, 1}, Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{840., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022951155012951}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.8713821002172947`*^9},ExpressionUUID->"09d66ad4-1563-4a12-9fa2-\
4bed65b541e1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ARCSurfacePixelCount", "[", "\n", "\t", 
   RowBox[{"{", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", "1", "}"}], ",", "\n", "\t\t", 
     RowBox[{"{", "1", "}"}], ",", "\n", "\t\t", 
     RowBox[{"{", "1", "}"}]}], "\n", "\t", "}"}], "\n", "]"}], " ", "//", 
  " ", "Indent2"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.871379950671489*^9, 3.871379972408269*^9}, {
   3.8713803449286404`*^9, 3.8713803467751036`*^9}, 3.8713807060106125`*^9, {
   3.871382033267248*^9, 3.871382045239669*^9}, {3.871382075815179*^9, 
   3.871382082335913*^9}},
 CellLabel->"In[248]:=",
 CellID->93293055,
 "TestId" -> 
 "ARCSurfacePixelCount-20220905-XEO2DB",ExpressionUUID->"f45518b3-bb91-489c-\
915f-4d6ac8177e0b"]
}, Open  ]],

Cell[BoxData["\<\"3\"\>"], "Output",
 CellChangeTimes->{{3.871382082697925*^9, 3.8713820979991455`*^9}},
 CellLabel->
  "Out[249]=",ExpressionUUID->"df1c719c-30b1-4722-a965-a9326dc84b1a"]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Local",
WindowSize->{958, 980},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
DockedCells->{
  Cell[
   BoxData[
    DynamicBox[
     ToBoxes[
      Column[{
        Row[{
          Button["New Test", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`NewFunctionCell[
            Daniel`ARC`ARCSurfacePixelCount], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229511531812927]], ImageSize -> {95., 40}, 
           Method -> "Queued"], " ", 
          Button["Add Tests to File", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`CreateUnitTests[
            Daniel`ARC`ARCSurfacePixelCount, "SubTest" -> None], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229511531812927]], ImageSize -> {162.5, 40}, 
           Method -> "Queued"], " ", 
          Button[
          "Run Tests", 
           DevTools`TestingTools`RunUnitTestsInNotebook[
            Daniel`ARC`ARCSurfacePixelCount]; Null, ImageSize -> {102.5, 40}, 
           Method -> "Queued"], " ", 
          Button["Edit Tests", 
           DevTools`TestingTools`EditUnitTests[
           Daniel`ARC`ARCSurfacePixelCount, "SubTest" -> None], 
           ImageSize -> {110., 40}, Method -> "Queued"], " ", 
          Button["Edit Function", 
           DevTools`SourceTools`EditFunction[Daniel`ARC`ARCSurfacePixelCount],
            ImageSize -> {132.5, 40}, Method -> "Queued"], " ", 
          Row[{
            
            DynamicModule[{
             DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
              "Capture"}, 
             Button[
              Dynamic[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel], 
              If[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel === 
               "Capture", 
               DevTools`TestingTools`FunctionCapture`EnableFunctionCapture[
                Daniel`ARC`ARCSurfacePixelCount]; 
               
               DevTools`TestingTools`FunctionCapture`\
RegisterFunctionCaptureNotebook[Daniel`ARC`ARCSurfacePixelCount, 
                 InputNotebook[]]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Release"; Null, 
               DevTools`TestingTools`FunctionCapture`DisableFunctionCapture[
                Daniel`ARC`ARCSurfacePixelCount]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Capture"; Null], ImageSize -> {100, 40}, Method -> "Queued"],
              DynamicModuleValues :> {}], 
            Button["?", 
             DevTools`TestingTools`FunctionCapture`CaptureFunctionHelp[], 
             ImageSize -> {30, 40}, Method -> "Queued"]}], " ", 
          Row[{
            Button["<", 
             DevTools`NotebookTools`MoveNotebook["Left"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"], 
            Button[">", 
             DevTools`NotebookTools`MoveNotebook["Right"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"]}]}], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229511531812927; If[
          And[
           ValueQ[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229511531812927], 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229511531812927 =!= "", 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229511531812927 =!= Null], 
          (If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {"MaxHeight" -> 300},
              "NakedSection"]], 
           Framed[#, FrameStyle -> None, FrameMargins -> 2], 
           
           Framed[#, FrameStyle -> LightGray, Background -> White, 
            FrameMargins -> 15]]& )[
           Grid[{{
              Pane[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229511531812927, "ImageSize" -> {Full, {0, 
                  OptionValue[
                  DevTools`NotebookTools`DynamicOutputSection, {
                   "MaxHeight" -> 300}, "MaxHeight"]}}, Scrollbars -> 
               Automatic, FrameMargins -> 0]}, 
             If[
              TrueQ[
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {
                "MaxHeight" -> 300}, "NakedSection"]], 
              Apply[Sequence, {}], {
               Button[
               "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229511531812927 = "", 
                ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
            Alignment -> {Left, Top}]], 
          Apply[Sequence, {}]]}], StandardForm], 
     TrackedSymbols :> {
      DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20229511531812927}]], "DockedCell"]},
TaggingRules->{
 "CreateNamedNotebook2Args" -> {
   "ARCSurfacePixelCount", "Type" -> "Function", 
    "GenerateNotebookArgs" -> {"Function" -> Daniel`ARC`ARCSurfacePixelCount},
     "ReturnNotebook" -> True}},
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"e857197d-01ad-4eec-b917-c2ae14a420dc"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 92, 0, 98, "Title",ExpressionUUID->"3c657019-c665-4ec5-a25f-31b950c90d5e"],
Cell[675, 24, 255, 6, 54, "Code",ExpressionUUID->"d96b2e42-8f49-448b-8ced-5e20104ea566",
 InitializationCell->False],
Cell[CellGroupData[{
Cell[955, 34, 79, 0, 67, "Section",ExpressionUUID->"94c7b349-4ec6-4746-8570-14dae338db58"],
Cell[CellGroupData[{
Cell[1059, 38, 3741, 88, 52, "TestUI",ExpressionUUID->"54a97aee-0b38-4e1c-96f4-7dc9f31d5eff",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[4803, 128, 1050, 28, 162, "Code",ExpressionUUID->"8c154b42-1850-428a-9f5a-0e829301bdf2",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->33020624]
}, Open  ]],
Cell[5868, 159, 163, 3, 33, "Output",ExpressionUUID->"7fe4c9af-00fe-4448-9aa0-5ddd3b85ce75"],
Cell[CellGroupData[{
Cell[6056, 166, 3739, 88, 52, "TestUI",ExpressionUUID->"15056d44-b861-46c9-a242-c39b8f69f7fd",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[9798, 256, 987, 24, 162, "Code",ExpressionUUID->"6dfdf25b-a374-48c1-9c22-43b842bd6042",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->79062008]
}, Open  ]],
Cell[10800, 283, 161, 3, 33, "Output",ExpressionUUID->"b1a45b2b-f547-4c45-93b7-23a861c6df59"],
Cell[CellGroupData[{
Cell[10986, 290, 3739, 88, 52, "TestUI",ExpressionUUID->"4a4c9940-d506-48e8-8110-d8b9772706e6",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[14728, 380, 749, 18, 126, "Code",ExpressionUUID->"00126d14-83cb-41ab-9e3f-a7f776a94b10",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->40343018]
}, Open  ]],
Cell[15492, 401, 185, 3, 33, "Output",ExpressionUUID->"788e9f95-e36b-42a1-883c-b5c7046da0a0"],
Cell[CellGroupData[{
Cell[15702, 408, 3717, 87, 52, "TestUI",ExpressionUUID->"09d66ad4-1563-4a12-9fa2-4bed65b541e1",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[19422, 497, 868, 21, 162, "Code",ExpressionUUID->"f45518b3-bb91-489c-915f-4d6ac8177e0b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->93293055]
}, Open  ]],
Cell[20305, 521, 187, 3, 33, "Output",ExpressionUUID->"df1c719c-30b1-4722-a965-a9326dc84b1a"]
}, Open  ]]
}, Open  ]]
}
]
*)

