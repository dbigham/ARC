(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     21167,        529]
NotebookOptionsPosition[     14044,        362]
NotebookOutlinePosition[     19522,        497]
CellTagsIndexPosition[     19479,        494]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ARCVectorToAngle", "Title",ExpressionUUID->"384dfc01-cbe0-477c-85f8-640bd70e8b63"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"RunUnitTests", "[", "ARCVectorToAngle", "]"}]}], "Code",
 InitializationCell->False,
 CellLabel->"In[23]:=",ExpressionUUID->"049f713b-8c44-471d-8b2c-a08c2f96653c"],

Cell[CellGroupData[{

Cell["Tests", "Section",ExpressionUUID->"f7178923-f0be-4ed9-ac71-427b49227a65"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCVectorToAngle-20221110-DPB5RP", Daniel`ARC`ARCVectorToAngle, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111093516553], 46790579, "SubTest" -> None]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> "ARCVectorToAngle-20221110-DPB5RP"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCVectorToAngle-20221110-DPB5RP", Daniel`ARC`ARCVectorToAngle, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111093516553], "CellID" -> 46790579, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCVectorToAngle-20221110-DPB5RP", Daniel`ARC`ARCVectorToAngle, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111093516553], 
           Utility`FilterOptions[
           "SubTest" -> None, 
            DevTools`TestingTools`Private`openInEditorClicked]], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCVectorToAngle-20221110-DPB5RP"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111093516553; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111093516553], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111093516553 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111093516553 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111093516553, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111093516553 = "", ImageSize -> {100, 33}]}]},
          Spacings -> {0, 1}, Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{840., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111093516553}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.877079715752375*^9},ExpressionUUID->"ae58d770-e256-4cce-98cb-\
451422555a4a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"ARCVectorToAngle", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "1"}], ",", " ", "0"}], "}"}], "]"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.877079692274441*^9, 3.8770797157533665`*^9}},
 CellLabel->"In[21]:=",
 CellID->46790579,
 "TestId" -> 
 "ARCVectorToAngle-20221110-DPB5RP",ExpressionUUID->"0f867d3f-b8fd-4758-a216-\
f3c046454154"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"-", "90"}]], "Output",
 CellChangeTimes->{3.8770797136177053`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"6d622d82-ad27-4c78-895b-7abc8d22feb5"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCVectorToAngle-20221110-UZVH3Q", Daniel`ARC`ARCVectorToAngle, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111093516556], 43434704, "SubTest" -> None]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> "ARCVectorToAngle-20221110-UZVH3Q"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCVectorToAngle-20221110-UZVH3Q", Daniel`ARC`ARCVectorToAngle, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111093516556], "CellID" -> 43434704, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCVectorToAngle-20221110-UZVH3Q", Daniel`ARC`ARCVectorToAngle, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111093516556], 
           Utility`FilterOptions[
           "SubTest" -> None, 
            DevTools`TestingTools`Private`openInEditorClicked]], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCVectorToAngle-20221110-UZVH3Q"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111093516556; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111093516556], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111093516556 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111093516556 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111093516556, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111093516556 = "", ImageSize -> {100, 33}]}]},
          Spacings -> {0, 1}, Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{840., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111093516556}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.8770797158918357`*^9},ExpressionUUID->"156df9ac-1f55-4923-8823-\
8d5380dacc2b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"ARCVectorToAngle", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "1"}], ",", " ", "1"}], "}"}], "]"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.877079692274441*^9, 3.8770797158918357`*^9}},
 CellLabel->"In[17]:=",
 CellID->43434704,
 "TestId" -> 
 "ARCVectorToAngle-20221110-UZVH3Q",ExpressionUUID->"8ad76343-52a0-47de-8b04-\
8ef3986ddb4b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"-", "45"}]], "Output",
 CellChangeTimes->{3.877079692916954*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"8a8f2364-bdd0-4da4-9279-0b6db53ac985"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCVectorToAngle-20221110-CGS0PE", Daniel`ARC`ARCVectorToAngle, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111093516559], 65633262, "SubTest" -> None]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> "ARCVectorToAngle-20221110-CGS0PE"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCVectorToAngle-20221110-CGS0PE", Daniel`ARC`ARCVectorToAngle, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111093516559], "CellID" -> 65633262, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCVectorToAngle-20221110-CGS0PE", Daniel`ARC`ARCVectorToAngle, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111093516559], 
           Utility`FilterOptions[
           "SubTest" -> None, 
            DevTools`TestingTools`Private`openInEditorClicked]], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCVectorToAngle-20221110-CGS0PE"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111093516559; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111093516559], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111093516559 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111093516559 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111093516559, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111093516559 = "", ImageSize -> {100, 33}]}]},
          Spacings -> {0, 1}, Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{840., {21.8544921875, 27.1455078125}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111093516559}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.877079716050481*^9},ExpressionUUID->"d237d317-95ed-4a5e-a973-\
1c3124498c5b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"ARCVectorToAngle", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", " ", "1"}], "}"}], "]"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.877079692274441*^9, 3.877079716050481*^9}},
 CellLabel->"In[19]:=",
 CellID->65633262,
 "TestId" -> 
 "ARCVectorToAngle-20221110-CGS0PE",ExpressionUUID->"7c3c4150-cc85-457f-b53c-\
be5bacadb821"]
}, Open  ]],

Cell[BoxData["45"], "Output",
 CellChangeTimes->{3.877079703434591*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"f3e90211-984b-4f2f-aab8-db8c8940284a"]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Local",
WindowSize->{958, 980},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
DockedCells->{
  Cell[
   BoxData[
    DynamicBox[
     ToBoxes[
      Column[{
        Row[{
          Button["New Test", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`NewFunctionCell[
            Daniel`ARC`ARCVectorToAngle], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111093412544]], ImageSize -> {95., 40}, 
           Method -> "Queued"], " ", 
          Button["Add Tests to File", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`CreateUnitTests[
            Daniel`ARC`ARCVectorToAngle, "SubTest" -> None], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111093412544]], ImageSize -> {162.5, 40}, 
           Method -> "Queued"], " ", 
          Button[
          "Run Tests", 
           DevTools`TestingTools`RunUnitTestsInNotebook[
            Daniel`ARC`ARCVectorToAngle]; Null, ImageSize -> {102.5, 40}, 
           Method -> "Queued"], " ", 
          Button["Edit Tests", 
           DevTools`TestingTools`EditUnitTests[
           Daniel`ARC`ARCVectorToAngle, "SubTest" -> None], 
           ImageSize -> {110., 40}, Method -> "Queued"], " ", 
          Button["Edit Function", 
           DevTools`SourceTools`EditFunction[Daniel`ARC`ARCVectorToAngle], 
           ImageSize -> {132.5, 40}, Method -> "Queued"], " ", 
          Row[{
            
            DynamicModule[{
             DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
              "Capture"}, 
             Button[
              Dynamic[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel], 
              If[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel === 
               "Capture", 
               DevTools`TestingTools`FunctionCapture`EnableFunctionCapture[
                Daniel`ARC`ARCVectorToAngle]; 
               DevTools`TestingTools`FunctionCapture`\
RegisterFunctionCaptureNotebook[Daniel`ARC`ARCVectorToAngle, 
                 InputNotebook[]]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Release"; Null, 
               DevTools`TestingTools`FunctionCapture`DisableFunctionCapture[
                Daniel`ARC`ARCVectorToAngle]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Capture"; Null], ImageSize -> {100, 40}, Method -> "Queued"],
              DynamicModuleValues :> {}], 
            Button["?", 
             DevTools`TestingTools`FunctionCapture`CaptureFunctionHelp[], 
             ImageSize -> {30, 40}, Method -> "Queued"]}], " ", 
          Row[{
            Button["<", 
             DevTools`NotebookTools`MoveNotebook["Left"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"], 
            Button[">", 
             DevTools`NotebookTools`MoveNotebook["Right"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"]}]}], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111093412544; If[
          And[
           ValueQ[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111093412544], 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111093412544 =!= "", 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111093412544 =!= Null], 
          (If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {"MaxHeight" -> 300},
              "NakedSection"]], 
           Framed[#, FrameStyle -> None, FrameMargins -> 2], 
           
           Framed[#, FrameStyle -> LightGray, Background -> White, 
            FrameMargins -> 15]]& )[
           Grid[{{
              Pane[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111093412544, "ImageSize" -> {Full, {0, 
                  OptionValue[
                  DevTools`NotebookTools`DynamicOutputSection, {
                   "MaxHeight" -> 300}, "MaxHeight"]}}, Scrollbars -> 
               Automatic, FrameMargins -> 0]}, 
             If[
              TrueQ[
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {
                "MaxHeight" -> 300}, "NakedSection"]], 
              Apply[Sequence, {}], {
               Button[
               "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111093412544 = "", ImageSize -> {100, 33}]}]},
             Spacings -> {0, 1}, Alignment -> {Left, Top}]], 
          Apply[Sequence, {}]]}], StandardForm], 
     TrackedSymbols :> {
      DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022111093412544}]], "DockedCell"]},
TaggingRules->{
 "CreateNamedNotebook2Args" -> {
   "ARCVectorToAngle", "Type" -> "Function", 
    "GenerateNotebookArgs" -> {"Function" -> Daniel`ARC`ARCVectorToAngle}, 
    "ReturnNotebook" -> True}},
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"d6c7d04b-65c4-4e65-aa3f-b8396ff1b517"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 88, 0, 98, "Title",ExpressionUUID->"384dfc01-cbe0-477c-85f8-640bd70e8b63"],
Cell[671, 24, 247, 5, 54, "Code",ExpressionUUID->"049f713b-8c44-471d-8b2c-a08c2f96653c",
 InitializationCell->False],
Cell[CellGroupData[{
Cell[943, 33, 79, 0, 67, "Section",ExpressionUUID->"f7178923-f0be-4ed9-ac71-427b49227a65"],
Cell[CellGroupData[{
Cell[1047, 37, 3630, 83, 52, "TestUI",ExpressionUUID->"ae58d770-e256-4cce-98cb-451422555a4a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[4680, 122, 503, 14, 54, "Code",ExpressionUUID->"0f867d3f-b8fd-4758-a216-f3c046454154",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->46790579]
}, Open  ]],
Cell[5198, 139, 169, 3, 33, "Output",ExpressionUUID->"6d622d82-ad27-4c78-895b-7abc8d22feb5"],
Cell[CellGroupData[{
Cell[5392, 146, 3632, 83, 52, "TestUI",ExpressionUUID->"156df9ac-1f55-4923-8823-8d5380dacc2b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[9027, 231, 503, 14, 54, "Code",ExpressionUUID->"8ad76343-52a0-47de-8b04-8ef3986ddb4b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->43434704]
}, Open  ]],
Cell[9545, 248, 167, 3, 33, "Output",ExpressionUUID->"8a8f2364-bdd0-4da4-9279-0b6db53ac985"],
Cell[CellGroupData[{
Cell[9737, 255, 3630, 83, 52, "TestUI",ExpressionUUID->"d237d317-95ed-4a5e-a973-1c3124498c5b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[13370, 340, 481, 13, 54, "Code",ExpressionUUID->"7c3c4150-cc85-457f-b53c-be5bacadb821",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->65633262]
}, Open  ]],
Cell[13866, 356, 150, 2, 33, "Output",ExpressionUUID->"f3e90211-984b-4f2f-aab8-db8c8940284a"]
}, Open  ]]
}, Open  ]]
}
]
*)

