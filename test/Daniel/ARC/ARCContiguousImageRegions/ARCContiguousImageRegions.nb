(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    218827,       4353]
NotebookOptionsPosition[    208006,       4114]
NotebookOutlinePosition[    213692,       4255]
CellTagsIndexPosition[    213649,       4252]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ARCContiguousImageRegions", "Title",ExpressionUUID->"c690ee21-6006-4824-87bd-d6901cb7756f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"RunUnitTests", "[", "ARCContiguousImageRegions", "]"}]}], "Code",
 InitializationCell->False,
 CellLabel->"In[14]:=",ExpressionUUID->"149951ae-536f-4c65-9b74-fe4702c40eed"],

Cell[CellGroupData[{

Cell["Tests", "Section",ExpressionUUID->"12a5ffe0-9841-459e-87e5-7cca512d5200"],

Cell[CellGroupData[{

Cell["Example 1", "Subsection",
 CellChangeTimes->{{3.8670670646907525`*^9, 
  3.8670670655221167`*^9}},ExpressionUUID->"fe609f61-90fb-4b6c-8fc1-\
81519d668dac"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>"}
   },
   AutoDelete->False,
   FrameStyle->{
     AbsoluteThickness[1], 
     GrayLevel[0.5]},
   GridBoxBackground->{
    "Columns" -> {{None}}, "Rows" -> {{None}}, 
     "ItemsIndexed" -> {{1, 1} -> RGBColor[1, 0, 0], {1, 2} -> 
       RGBColor[1, 0, 0], {1, 3} -> RGBColor[1, 0, 0], {2, 1} -> 
       RGBColor[1, 0, 0], {2, 2} -> RGBColor[0, 0, 1], {2, 3} -> RGBColor[
         Rational[5, 9], 
         Rational[5, 9], 1], {3, 1} -> RGBColor[1, 0, 0], {3, 2} -> RGBColor[
         Rational[5, 9], 
         Rational[5, 9], 1], {3, 3} -> RGBColor[
         Rational[5, 9], 
         Rational[5, 9], 1]}},
   GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
   GridBoxItemSize->{"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.8670646666014037`*^9, 3.8670646827873*^9}},
 CellLabel->"Out[61]=",ExpressionUUID->"dd6126c0-6dd5-4e10-95ff-26a41cd6219b"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCContiguousImageRegions-20220717-WKCEJQ", 
              Daniel`ARC`ARCContiguousImageRegions, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202271713103850], 22692119]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> 
            "ARCContiguousImageRegions-20220717-WKCEJQ"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCContiguousImageRegions-20220717-WKCEJQ", 
            Daniel`ARC`ARCContiguousImageRegions, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202271713103850], "CellID" -> 22692119, "SubTest" -> 
            None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCContiguousImageRegions-20220717-WKCEJQ", 
           Daniel`ARC`ARCContiguousImageRegions, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202271713103850], None], ImageSize -> {140., 25}, 
          Method -> "Queued"], 
         Row[{"ARCContiguousImageRegions-20220717-WKCEJQ"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202271713103850; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202271713103850], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202271713103850 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202271713103850 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202271713103850, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202271713103850 = "", ImageSize -> {100, 33}]}]}, 
         Spacings -> {0, 1}, Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{833., {21., 27.}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`DynamicOutputSectionVariable202271713103850}\
]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.867066602985096*^9},ExpressionUUID->"da9b01f0-b084-4042-8881-\
70e6a1c12f27"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ARCContiguousImageRegions", "[", "\n", "\t", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", " ", "2", ",", " ", "2"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"2", ",", " ", "1", ",", " ", "8"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"2", ",", " ", "8", ",", " ", "8"}], "}"}]}], "}"}], "\n", 
   "]"}], " ", "//", " ", "Indent2"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.8670648834100757`*^9, 3.8670648845534835`*^9}, {
   3.867065699332783*^9, 3.8670657005546775`*^9}, 3.867066602985096*^9, {
   3.8670689463633366`*^9, 3.867068946514713*^9}, {3.867158767154239*^9, 
   3.867158768554189*^9}, {3.86715890774304*^9, 3.867158908977071*^9}},
 CellLabel->"In[258]:=",
 CellID->22692119,
 "TestId" -> 
 "ARCContiguousImageRegions-20220717-WKCEJQ",ExpressionUUID->"cf9da7ba-ba95-\
4d8a-b708-1ff987b2396e"]
}, Open  ]],

Cell[BoxData["\<\"ARCImageRegions[\\n    {\\n        <|\\\"Color\\\" -> 1, \\\
\"Position\\\" -> {2, 2}, \\\"Image\\\" -> {{1}}, \\\"PixelPositions\\\" -> \
{{2, 2}}|>,\\n        <|\\n            \\\"Color\\\" -> 2,\\n            \
\\\"Position\\\" -> {1, 1},\\n            \\\"Image\\\" -> {{2, 2, 2}, {2, 0, \
0}, {2, 0, 0}},\\n            \\\"PixelPositions\\\" -> {{1, 1}, {1, 2}, {1, \
3}, {2, 1}, {3, 1}}\\n        |>,\\n        <|\\n            \\\"Color\\\" -> \
8,\\n            \\\"Position\\\" -> {2, 2},\\n            \\\"Image\\\" -> \
{{0, 8}, {8, 8}},\\n            \\\"PixelPositions\\\" -> {{2, 3}, {3, 2}, \
{3, 3}}\\n        |>\\n    }\\n]\"\>"], "Output",
 CellChangeTimes->{
  3.867067083060326*^9, {3.867068561220355*^9, 3.8670685859163857`*^9}, {
   3.8670689470761523`*^9, 3.8670690518881617`*^9}, {3.867158768964309*^9, 
   3.867158784984848*^9}, {3.867158859920429*^9, 3.8671589131731224`*^9}},
 CellLabel->
  "Out[259]=",ExpressionUUID->"e8aca6b9-2755-401d-a3ed-18fa1b7771bd"]
}, Closed]],

Cell[CellGroupData[{

Cell["Example 2", "Subsection",
 CellChangeTimes->{{3.867067061218616*^9, 
  3.867067074959555*^9}},ExpressionUUID->"c4a67c81-ce40-4a2d-80ad-\
d61ee47369e4"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>"}
   },
   AutoDelete->False,
   FrameStyle->{
     AbsoluteThickness[1], 
     GrayLevel[0.5]},
   GridBoxBackground->{
    "Columns" -> {{None}}, "Rows" -> {{None}}, 
     "ItemsIndexed" -> {{1, 1} -> RGBColor[0, 0, 1], {1, 2} -> 
       RGBColor[0, 0, 1], {1, 3} -> RGBColor[0, 0, 1], {2, 1} -> RGBColor[
         Rational[5, 9], 
         Rational[5, 9], 1], {2, 2} -> RGBColor[0, 0, 1], {2, 3} -> 
       RGBColor[0, 1, 0], {3, 1} -> RGBColor[
         Rational[5, 9], 
         Rational[5, 9], 1], {3, 2} -> RGBColor[1, 0, 0], {3, 3} -> 
       RGBColor[1, 0, 0]}},
   GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
   GridBoxItemSize->{"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.8670646666014037`*^9, 3.8670646827873*^9}, 
   3.8670668783721447`*^9},
 CellLabel->
  "Out[146]=",ExpressionUUID->"07aa6008-20ae-4a54-a3bc-121bb3113443"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCContiguousImageRegions-20220717-RNMSEP", 
              Daniel`ARC`ARCContiguousImageRegions, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227171317231007], 99323463]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> 
            "ARCContiguousImageRegions-20220717-RNMSEP"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCContiguousImageRegions-20220717-RNMSEP", 
            Daniel`ARC`ARCContiguousImageRegions, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227171317231007], "CellID" -> 99323463, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCContiguousImageRegions-20220717-RNMSEP", 
           Daniel`ARC`ARCContiguousImageRegions, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227171317231007], None], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCContiguousImageRegions-20220717-RNMSEP"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227171317231007; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227171317231007], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227171317231007 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227171317231007 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227171317231007, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227171317231007 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{833., {21., 27.}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227171317231007}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.8670670426279955`*^9},ExpressionUUID->"2c661f7c-3f14-46b7-af5f-\
701d12ce5869"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"ARCContiguousImageRegions", "[", "\n", "\t", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"8", ",", " ", "1", ",", " ", "3"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"8", ",", " ", "2", ",", " ", "2"}], "}"}]}], "}"}], "\n", 
  "]"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.8670648834100757`*^9, 3.8670648845534835`*^9}, {
   3.867065699332783*^9, 3.8670657005546775`*^9}, 3.867066602985096*^9, 
   3.8670668881161604`*^9, {3.8670690595313263`*^9, 3.867069059676714*^9}},
 CellLabel->"In[314]:=",
 CellID->99323463,
 "TestId" -> 
 "ARCContiguousImageRegions-20220717-RNMSEP",ExpressionUUID->"bf0a8b06-d3b3-\
4b32-b70f-c328e1a0d92b"]
}, Open  ]],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[
      TooltipBox[
       TagBox[GridBox[{
          {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
          {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>"}
         },
         AutoDelete->False,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.5]},
         GridBoxBackground->{
          "Columns" -> {{None}}, "Rows" -> {{None}}, 
           "ItemsIndexed" -> {{1, 1} -> RGBColor[0, 0, 1], {1, 2} -> 
             RGBColor[0, 0, 1], {1, 3} -> RGBColor[0, 0, 1], {2, 1} -> 
             GrayLevel[0], {2, 2} -> RGBColor[0, 0, 1], {2, 3} -> 
             GrayLevel[0]}},
         GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
         GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
         GridBoxItemSize->{"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}],
        "Grid"],
       StyleBox[
       "\"<|\\n    \\\"Color\\\" -> 1,\\n    \\\"Position\\\" -> {1, 1},\\n   \
 \\\"Image\\\" -> {{1, 1, 1}, {0, 1, 0}},\\n    \\\"PixelPositions\\\" -> \
{{1, 1}, {1, 2}, {1, 3}, {2, 2}}\\n|>\"", FontFamily -> "Courier", 
        StripOnInput -> False],
       TooltipStyle->"TextStyling"],
      Annotation[#, 
       Style[
       "<|\n    \"Color\" -> 1,\n    \"Position\" -> {1, 1},\n    \"Image\" \
-> {{1, 1, 1}, {0, 1, 0}},\n    \"PixelPositions\" -> {{1, 1}, {1, 2}, {1, \
3}, {2, 2}}\n|>", FontFamily -> "Courier"], "Tooltip"]& ]},
    {
     TagBox[
      TooltipBox[
       TagBox[GridBox[{
          {"\<\"\"\>", "\<\"\"\>"}
         },
         AutoDelete->False,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.5]},
         GridBoxBackground->{
          "Columns" -> {{None}}, "Rows" -> {{None}}, 
           "ItemsIndexed" -> {{1, 1} -> RGBColor[1, 0, 0], {1, 2} -> 
             RGBColor[1, 0, 0]}},
         GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
         GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
         GridBoxItemSize->{"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}],
        "Grid"],
       StyleBox[
       "\"<|\\n    \\\"Color\\\" -> 2,\\n    \\\"Position\\\" -> {3, 2},\\n   \
 \\\"Image\\\" -> {{1, 1}},\\n    \\\"PixelPositions\\\" -> {{3, 2}, {3, \
3}}\\n|>\"", FontFamily -> "Courier", StripOnInput -> False],
       TooltipStyle->"TextStyling"],
      Annotation[#, 
       Style[
       "<|\n    \"Color\" -> 2,\n    \"Position\" -> {3, 2},\n    \"Image\" \
-> {{1, 1}},\n    \"PixelPositions\" -> {{3, 2}, {3, 3}}\n|>", FontFamily -> 
        "Courier"], "Tooltip"]& ]},
    {
     TagBox[
      TooltipBox[
       TagBox[GridBox[{
          {"\<\"\"\>"}
         },
         AutoDelete->False,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.5]},
         GridBoxBackground->{
          "Columns" -> {{None}}, "Rows" -> {{None}}, 
           "ItemsIndexed" -> {{1, 1} -> RGBColor[0, 1, 0]}},
         GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
         GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
         GridBoxItemSize->{"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}],
        "Grid"],
       StyleBox[
       "\"<|\\n    \\\"Color\\\" -> 3,\\n    \\\"Position\\\" -> {2, 3},\\n   \
 \\\"Image\\\" -> {{1}},\\n    \\\"PixelPositions\\\" -> {{2, 3}}\\n|>\"", 
        FontFamily -> "Courier", StripOnInput -> False],
       TooltipStyle->"TextStyling"],
      Annotation[#, 
       Style[
       "<|\n    \"Color\" -> 3,\n    \"Position\" -> {2, 3},\n    \"Image\" \
-> {{1}},\n    \"PixelPositions\" -> {{2, 3}}\n|>", FontFamily -> "Courier"], 
       "Tooltip"]& ]},
    {
     TagBox[
      TooltipBox[
       TagBox[GridBox[{
          {"\<\"\"\>"},
          {"\<\"\"\>"}
         },
         AutoDelete->False,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.5]},
         GridBoxBackground->{
          "Columns" -> {{None}}, "Rows" -> {{None}}, 
           "ItemsIndexed" -> {{1, 1} -> RGBColor[
               Rational[5, 9], 
               Rational[5, 9], 1], {2, 1} -> RGBColor[
               Rational[5, 9], 
               Rational[5, 9], 1]}},
         GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
         GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
         GridBoxItemSize->{"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}],
        "Grid"],
       StyleBox[
       "\"<|\\n    \\\"Color\\\" -> 8,\\n    \\\"Position\\\" -> {2, 1},\\n   \
 \\\"Image\\\" -> {{1}, {1}},\\n    \\\"PixelPositions\\\" -> {{2, 1}, {3, \
1}}\\n|>\"", FontFamily -> "Courier", StripOnInput -> False],
       TooltipStyle->"TextStyling"],
      Annotation[#, 
       Style[
       "<|\n    \"Color\" -> 8,\n    \"Position\" -> {2, 1},\n    \"Image\" \
-> {{1}, {1}},\n    \"PixelPositions\" -> {{2, 1}, {3, 1}}\n|>", FontFamily -> 
        "Courier"], "Tooltip"]& ]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.8670668888333035`*^9, 3.8670668942636895`*^9}, 
   3.867067020463761*^9, 3.8670677288745055`*^9, {3.8670685653443055`*^9, 
   3.8670685909508896`*^9}, {3.8670690572503853`*^9, 3.867069060051236*^9}},
 CellLabel->
  "Out[315]=",ExpressionUUID->"4f4495e5-0d79-4030-97fb-39fda7029437"]
}, Closed]],

Cell[CellGroupData[{

Cell["Diagonals", "Subsection",
 CellChangeTimes->{{3.8670675761470556`*^9, 
  3.86706757781884*^9}},ExpressionUUID->"505e7833-ad11-4d2b-b5cc-\
be7834091e93"],

Cell[CellGroupData[{

Cell["Follow Diagonals", "Subsubsection",
 CellChangeTimes->{{3.867068595979339*^9, 
  3.8670685983237844`*^9}},ExpressionUUID->"bd960dae-f807-47d3-9a0f-\
11648c8f483f"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCContiguousImageRegions-20220717-DS5F8I", 
              Daniel`ARC`ARCContiguousImageRegions, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227171328521175], 5867004]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> 
            "ARCContiguousImageRegions-20220717-DS5F8I"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCContiguousImageRegions-20220717-DS5F8I", 
            Daniel`ARC`ARCContiguousImageRegions, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227171328521175], "CellID" -> 5867004, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCContiguousImageRegions-20220717-DS5F8I", 
           Daniel`ARC`ARCContiguousImageRegions, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227171328521175], None], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCContiguousImageRegions-20220717-DS5F8I"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227171328521175; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227171328521175], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227171328521175 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227171328521175 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227171328521175, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227171328521175 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{826., {21., 27.}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227171328521175}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.867067731660984*^9},ExpressionUUID->"1075fae6-1c33-4246-a063-\
ed8ddf1d67d5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"ARCContiguousImageRegions", "[", "\n", "\t", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", " ", "2", ",", " ", "0"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", " ", "0", ",", " ", "2"}], "}"}]}], "}"}], "\n", 
  "]"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.8670648834100757`*^9, 3.8670648845534835`*^9}, {
   3.867065699332783*^9, 3.8670657005546775`*^9}, 3.867066602985096*^9, {
   3.86706758694296*^9, 3.8670676051976705`*^9}, {3.8670678072316074`*^9, 
   3.8670678116446323`*^9}, {3.86706861880378*^9, 3.867068618940447*^9}, {
   3.867069069687951*^9, 3.867069069991556*^9}},
 CellLabel->"In[316]:=",
 CellID->5867004,
 "TestId" -> 
 "ARCContiguousImageRegions-20220717-DS5F8I",ExpressionUUID->"18c1402a-13d4-\
4aa2-884a-f9465c092cf7"]
}, Open  ]],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[
      TooltipBox[
       TagBox[GridBox[{
          {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
          {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
          {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>"}
         },
         AutoDelete->False,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.5]},
         GridBoxBackground->{
          "Columns" -> {{None}}, "Rows" -> {{None}}, 
           "ItemsIndexed" -> {{1, 1} -> RGBColor[1, 0, 0], {1, 2} -> 
             GrayLevel[0], {1, 3} -> GrayLevel[0], {2, 1} -> 
             GrayLevel[0], {2, 2} -> RGBColor[1, 0, 0], {2, 3} -> 
             GrayLevel[0], {3, 1} -> GrayLevel[0], {3, 2} -> 
             GrayLevel[0], {3, 3} -> RGBColor[1, 0, 0]}},
         GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
         GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
         GridBoxItemSize->{"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}],
        "Grid"],
       StyleBox[
       "\"<|\\n    \\\"Color\\\" -> 2,\\n    \\\"Position\\\" -> {1, 1},\\n   \
 \\\"Image\\\" -> {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}},\\n    \\\"PixelPositions\
\\\" -> {{1, 1}, {2, 2}, {3, 3}}\\n|>\"", FontFamily -> "Courier", 
        StripOnInput -> False],
       TooltipStyle->"TextStyling"],
      Annotation[#, 
       Style[
       "<|\n    \"Color\" -> 2,\n    \"Position\" -> {1, 1},\n    \"Image\" \
-> {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}},\n    \"PixelPositions\" -> {{1, 1}, {2, \
2}, {3, 3}}\n|>", FontFamily -> "Courier"], "Tooltip"]& ]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.8670675964556828`*^9, {3.8670676830277405`*^9, 3.8670677273737593`*^9}, {
   3.8670677944035463`*^9, 3.8670678121806383`*^9}, 3.8670685715634203`*^9, {
   3.867068611822859*^9, 3.867068619310344*^9}, 3.8670690704107704`*^9},
 CellLabel->
  "Out[317]=",ExpressionUUID->"26f42027-43e5-4ac0-bfd7-2210f57d0815"]
}, Closed]],

Cell[CellGroupData[{

Cell["Don\[CloseCurlyQuote]t Follow Diagonals", "Subsubsection",
 CellChangeTimes->{{3.8670686037312045`*^9, 
  3.8670686076676683`*^9}},ExpressionUUID->"e9e6d6a2-c034-4e84-b7fc-\
c8d7022c6c30"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCContiguousImageRegions-20220717-6PZ6CY", 
              Daniel`ARC`ARCContiguousImageRegions, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227171343331486], 5546390]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> 
            "ARCContiguousImageRegions-20220717-6PZ6CY"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCContiguousImageRegions-20220717-6PZ6CY", 
            Daniel`ARC`ARCContiguousImageRegions, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227171343331486], "CellID" -> 5546390, 
            "SubTest" -> None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCContiguousImageRegions-20220717-6PZ6CY", 
           Daniel`ARC`ARCContiguousImageRegions, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227171343331486], None], 
          ImageSize -> {140., 25}, Method -> "Queued"], 
         Row[{"ARCContiguousImageRegions-20220717-6PZ6CY"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227171343331486; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227171343331486], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227171343331486 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227171343331486 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227171343331486, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227171343331486 = "", 
             ImageSize -> {100, 33}]}]}, Spacings -> {0, 1}, 
         Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{826., {21., 27.}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable20227171343331486}]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.867068613060399*^9},ExpressionUUID->"9428f487-d5e4-45b0-9057-\
8d16744c6751"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"ARCContiguousImageRegions", "[", "\n", "\t", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "2", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", "2"}], "}"}]}], "}"}], ",", "\n", 
   "\t", 
   RowBox[{"\"\<FollowDiagonals\>\"", " ", "\[Rule]", " ", "False"}]}], "\n", 
  "]"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.8670648834100757`*^9, 3.8670648845534835`*^9}, {
   3.867065699332783*^9, 3.8670657005546775`*^9}, 3.867066602985096*^9, {
   3.86706758694296*^9, 3.8670676051976705`*^9}, {3.8670678072316074`*^9, 
   3.8670678116446323`*^9}, {3.867068609503667*^9, 3.8670686099977403`*^9}, {
   3.8670690787816105`*^9, 3.8670690789496317`*^9}},
 CellLabel->"In[320]:=",
 CellID->5546390,
 "TestId" -> 
 "ARCContiguousImageRegions-20220717-6PZ6CY",ExpressionUUID->"b171b4cf-430e-\
4895-b8d7-dafce63d8e6a"]
}, Open  ]],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[
      TooltipBox[
       TagBox[GridBox[{
          {"\<\"\"\>"}
         },
         AutoDelete->False,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.5]},
         GridBoxBackground->{
          "Columns" -> {{None}}, "Rows" -> {{None}}, 
           "ItemsIndexed" -> {{1, 1} -> RGBColor[1, 0, 0]}},
         GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
         GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
         GridBoxItemSize->{"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}],
        "Grid"],
       StyleBox[
       "\"<|\\n    \\\"Color\\\" -> 2,\\n    \\\"Position\\\" -> {1, 1},\\n   \
 \\\"Image\\\" -> {{1}},\\n    \\\"PixelPositions\\\" -> {{1, 1}}\\n|>\"", 
        FontFamily -> "Courier", StripOnInput -> False],
       TooltipStyle->"TextStyling"],
      Annotation[#, 
       Style[
       "<|\n    \"Color\" -> 2,\n    \"Position\" -> {1, 1},\n    \"Image\" \
-> {{1}},\n    \"PixelPositions\" -> {{1, 1}}\n|>", FontFamily -> "Courier"], 
       "Tooltip"]& ]},
    {
     TagBox[
      TooltipBox[
       TagBox[GridBox[{
          {"\<\"\"\>"}
         },
         AutoDelete->False,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.5]},
         GridBoxBackground->{
          "Columns" -> {{None}}, "Rows" -> {{None}}, 
           "ItemsIndexed" -> {{1, 1} -> RGBColor[1, 0, 0]}},
         GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
         GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
         GridBoxItemSize->{"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}],
        "Grid"],
       StyleBox[
       "\"<|\\n    \\\"Color\\\" -> 2,\\n    \\\"Position\\\" -> {2, 2},\\n   \
 \\\"Image\\\" -> {{1}},\\n    \\\"PixelPositions\\\" -> {{2, 2}}\\n|>\"", 
        FontFamily -> "Courier", StripOnInput -> False],
       TooltipStyle->"TextStyling"],
      Annotation[#, 
       Style[
       "<|\n    \"Color\" -> 2,\n    \"Position\" -> {2, 2},\n    \"Image\" \
-> {{1}},\n    \"PixelPositions\" -> {{2, 2}}\n|>", FontFamily -> "Courier"], 
       "Tooltip"]& ]},
    {
     TagBox[
      TooltipBox[
       TagBox[GridBox[{
          {"\<\"\"\>"}
         },
         AutoDelete->False,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.5]},
         GridBoxBackground->{
          "Columns" -> {{None}}, "Rows" -> {{None}}, 
           "ItemsIndexed" -> {{1, 1} -> RGBColor[1, 0, 0]}},
         GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
         GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
         GridBoxItemSize->{"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}],
        "Grid"],
       StyleBox[
       "\"<|\\n    \\\"Color\\\" -> 2,\\n    \\\"Position\\\" -> {3, 3},\\n   \
 \\\"Image\\\" -> {{1}},\\n    \\\"PixelPositions\\\" -> {{3, 3}}\\n|>\"", 
        FontFamily -> "Courier", StripOnInput -> False],
       TooltipStyle->"TextStyling"],
      Annotation[#, 
       Style[
       "<|\n    \"Color\" -> 2,\n    \"Position\" -> {3, 3},\n    \"Image\" \
-> {{1}},\n    \"PixelPositions\" -> {{3, 3}}\n|>", FontFamily -> "Courier"], 
       "Tooltip"]& ]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.8670686102757854`*^9, {3.8670690770309715`*^9, 3.8670690793102703`*^9}},
 CellLabel->
  "Out[321]=",ExpressionUUID->"b3c0860e-b25d-4fda-aa70-8d0a35e6efb2"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Don\[CloseCurlyQuote]t Include Other Objects Without Bounds", \
"Subsection",
 CellChangeTimes->{{3.8677217795589175`*^9, 
  3.867721790152034*^9}},ExpressionUUID->"09ba5d07-6e7e-47b0-838c-\
334fc3d1633a"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   Column[{
     Framed[
      Grid[{{
         Button["Run", 
          
          With[{DevTools`TestingTools`Private`res = 
            DevTools`TestingTools`Private`runButtonClicked[
             "ARCContiguousImageRegions-20220725-L81EQJ", 
              Daniel`ARC`ARCContiguousImageRegions, 
              HoldComplete[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272532110329], 67606506]}, 
           If[
            FailureQ[DevTools`TestingTools`Private`res], 
            Print[DevTools`TestingTools`Private`res]]], 
          ImageSize -> {57.5, 25}, Method -> "Queued"], 
         Button[
         "Update", {
           "TestUiMarker", "TestId" -> 
            "ARCContiguousImageRegions-20220725-L81EQJ"}; 
          DevTools`TestingTools`Private`updateTestClicked[
           "ARCContiguousImageRegions-20220725-L81EQJ", 
            Daniel`ARC`ARCContiguousImageRegions, 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272532110329], "CellID" -> 67606506, "SubTest" -> 
            None], ImageSize -> {80., 25}, Method -> "Queued"], 
         Button["Open in Editor", 
          DevTools`TestingTools`Private`openInEditorClicked[
          "ARCContiguousImageRegions-20220725-L81EQJ", 
           Daniel`ARC`ARCContiguousImageRegions, 
           HoldComplete[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272532110329], None], ImageSize -> {140., 25}, 
          Method -> "Queued"], 
         Row[{"ARCContiguousImageRegions-20220725-L81EQJ"}, 
          ImageSize -> {Full, Automatic}, Alignment -> {Right, Center}]}}], 
      ImageSize -> {Full, Automatic}, FrameStyle -> GrayLevel[0.8], 
      FrameMargins -> 10], 
     DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272532110329; If[
       And[
        ValueQ[
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272532110329], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272532110329 =!= "", 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272532110329 =!= Null], 
       (If[
        TrueQ[
         OptionValue[
         DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
        Framed[#, FrameStyle -> None, FrameMargins -> 2], 
        Framed[#, FrameStyle -> LightGray, Background -> White, FrameMargins -> 
         15]]& )[
        Grid[{{
           Pane[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272532110329, "ImageSize" -> {Full, {0, 
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {}, 
                "MaxHeight"]}}, Scrollbars -> Automatic, FrameMargins -> 0]}, 
          If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {}, "NakedSection"]], 
           Apply[Sequence, {}], {
            Button[
            "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable202272532110329 = "", ImageSize -> {100, 33}]}]}, 
         Spacings -> {0, 1}, Alignment -> {Left, Top}]], 
       Apply[Sequence, {}]]}], StandardForm],
  ImageSizeCache->{833., {21., 27.}},
  TrackedSymbols:>{
   DevTools`NotebookTools`Private`DynamicOutputSectionVariable202272532110329}\
]], "TestUI",
 CellMargins->{{65, 0}, {0, 0}},
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 GeneratedCell->False,
 CellChangeTimes->{
  3.8677224703071165`*^9},ExpressionUUID->"ba28ff5b-12b6-4f5e-9b96-\
b41a078479cc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ARCContiguousImageRegions", "[", "\n", "\t", 
   RowBox[{"Replace", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ARCParseFile", "[", "\"\<b60334d2\>\"", "]"}], "[", 
       RowBox[{"\"\<Train\>\"", ",", " ", "1", ",", " ", "\"\<Output\>\""}], 
       "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Except", "[", 
       RowBox[{"0", ",", " ", "_Integer"}], "]"}], " ", ":>", " ", "10"}], 
     ",", "\n", "\t\t", 
     RowBox[{"{", "2", "}"}]}], "\n", "\t", "]"}], "\n", "]"}], " ", "//", 
  " ", "Indent2"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.8670648834100757`*^9, 3.8670648845534835`*^9}, {
   3.867065699332783*^9, 3.8670657005546775`*^9}, 3.867066602985096*^9, {
   3.8670689463633366`*^9, 3.867068946514713*^9}, {3.867158767154239*^9, 
   3.867158768554189*^9}, {3.86715890774304*^9, 3.867158908977071*^9}, {
   3.8677222622434883`*^9, 3.867722266081516*^9}, {3.867722313960558*^9, 
   3.867722325799393*^9}, 3.867722357563348*^9},
 CellLabel->"In[24]:=",
 CellID->67606506,
 "TestId" -> 
 "ARCContiguousImageRegions-20220725-L81EQJ",ExpressionUUID->"a3342af3-a50f-\
4218-b688-c8cfda6276f6"]
}, Open  ]],

Cell[BoxData["\<\"ARCImageRegions[\\n    {\\n        <|\\n            \
\\\"Color\\\" -> 10,\\n            \\\"Position\\\" -> {2, 3},\\n            \
\\\"Image\\\" -> {\\n                {10, 10, 10, 0, 0, 0},\\n                \
{10, 0, 10, 0, 0, 0},\\n                {10, 10, 10, 0, 0, 0},\\n             \
   {0, 0, 0, 10, 10, 10},\\n                {0, 0, 0, 10, 0, 10},\\n          \
      {0, 0, 0, 10, 10, 10}\\n            },\\n            \\\"PixelPositions\
\\\" -> {\\n                {2, 3},\\n                {2, 4},\\n              \
  {2, 5},\\n                {3, 3},\\n                {3, 5},\\n              \
  {4, 3},\\n                {4, 4},\\n                {4, 5},\\n              \
  {5, 6},\\n                {5, 7},\\n                {5, 8},\\n              \
  {6, 6},\\n                {6, 8},\\n                {7, 6},\\n              \
  {7, 7},\\n                {7, 8}\\n            }\\n        |>,\\n        <|\
\\n            \\\"Color\\\" -> 10,\\n            \\\"Position\\\" -> {7, 2},\
\\n            \\\"Image\\\" -> {{10, 10, 10}, {10, 0, 10}, {10, 10, 10}},\\n \
           \\\"PixelPositions\\\" -> {{7, 2}, {7, 3}, {7, 4}, {8, 2}, {8, 4}, \
{9, 2}, {9, 3}, {9, 4}}\\n        |>\\n    }\\n]\"\>"], "Output",
 CellChangeTimes->{{3.8677222664119654`*^9, 3.867722273636755*^9}, 
   3.867722326422655*^9, 3.867722362506669*^9, 3.8677224520202007`*^9, {
   3.8677226117430944`*^9, 3.867722650038989*^9}, 3.867722689527904*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"79f6f0aa-c220-49d8-b41a-eae13342d97e"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Profiling", "Section",
 CellChangeTimes->{{3.867067077298705*^9, 
  3.867067078192598*^9}},ExpressionUUID->"1fa5c936-c47c-4526-b41f-\
195e979fe365"],

Cell[CellGroupData[{

Cell["3x3 Image", "Subsection",
 CellChangeTimes->{{3.867067223875493*^9, 
  3.8670672256739616`*^9}},ExpressionUUID->"1e96bc66-6761-42c2-9304-\
4f9b9d0af710"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"NotTest", "@", "\n", 
  RowBox[{"Profile100", "@", "\n", 
   RowBox[{"ARCContiguousImageRegions", "[", "\n", "\t", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2", ",", " ", "2", ",", " ", "2"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"2", ",", " ", "1", ",", " ", "8"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"2", ",", " ", "8", ",", " ", "8"}], "}"}]}], "}"}], "\n", 
    "]"}]}]}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.8670648834100757`*^9, 3.8670648845534835`*^9}, {
   3.867065699332783*^9, 3.8670657005546775`*^9}, 3.867066602985096*^9, {
   3.867067095820299*^9, 3.8670671292766294`*^9}},
 CellLabel->"In[249]:=",
 CellID->85172780,
 "TestId" -> "",ExpressionUUID->"573a2bec-f8b8-437a-b629-c78630219379"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      "Expression" -> 
       Inactive[
        Daniel`ARC`ARCContiguousImageRegions][{{2, 2, 2}, {2, 1, 8}, {2, 8, 
         8}}], "Mean" -> Quantity[7.75, "Milliseconds"], "Median" -> 
       Quantity[7.7, "Milliseconds"], "Minimum" -> 
       Quantity[7.48, "Milliseconds"], "Maximum" -> 
       Quantity[8.96, "Milliseconds"], "Plot" -> Graphics[{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[
               Rational[1, 72]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Line[CompressedData["
1:eJxdlAlMkwcYhsshAYKsY+BKJoWiMKaIMBwKCLzcRzl60AODAzlGxwxV8GAQ
oAzqNAZdMeBmVXSOjDHZBMLl7NIurm4KY8EgNMw0bM4FFJCFWQPIjuz/mmxN
/jTv/3zv937ff/EKlKJiWxaLVfT38c//v78nMb9bYtMrn9XHMCdQcaL2u/4S
0o5gvSDtalWrGM2GamZt5cLOOka7Y78mp8C5mjQHfo/D7AZSqX4jPrc4G/Ln
ahntg08SbDQ7yoj7YoAds8cyS3wztn2Zq9R+RtwfitnDJ/Vy6h8A57nYLlc/
0lswUc9p4rWTPxANuiCFMZn8Qfi1ZuOIpoXqg9FWGv3s3HbiIfg+QL3d1pP0
6zCePZe5WkA6FLLiiNFQIfl3oPTnyo9u5JJ+A5kPzuQJnlB+GKa69I9O+ZB/
5//4LmTUaUvH3IiHo2fS36Opj/pFYMibX1XxEvFIhARPH/uBR3w3FstvCZWr
pKOQn7j6rpM91UfjupLtOGomHgNX9eg9g4HygU1BrKaxdoargHGd/d7uw1Qf
C76ZnfVKFdNPFQvj0z83OFnnjYP5QFV5RwT547Cy4beh0Ujyx2MiOf0Pp0Ti
8bjCn39rtZt4AmxS3F4r30Y8AbXNrX4tjcQTwdGMLId3Ek+Ee8lK0pY4yk/C
Sc4Rzpk1Zh9VEoLf0UX40jys5P/ur0oGBGVTlg7iKWh7sX/G04V4Ckb2dX3Q
4UD9U+FYuOzeLyGeioE6/Zs36Hqw0vBVGetx86vE0/D14p4vNvVSfz6mzCau
bprm40MiW4oyNRBPh0IeYlPURP50VGuvhI7vov4ZMB5PuFx8n3gGBPeGevUK
4pk4zmvwv9tDPBPvH2yOTf2J7m8WPGQtNTJ74lkY7DZpZq33R4DAm6bCyZcZ
DQHWuZ8O7r5I9QIMd3oWHkxltF6A/N6BhavW+YR4e6ZY2XiJyYMQwmvsktP7
yC/EIFf9SDjIcL0Q6nUWOy6H/CLUpRTd7HxIfhGS2n3zxCHkF6Hswx6vC/Q8
60WYb9t7SGF9n8WYRJ53nA2jIUaF59ynfd7kF+Pp7s28sOeUL0Z06Nh5Bynt
n427lxRcvS/tnw1zlPaanEv+bFS0rt1eMNH+2Wjoq7a7b31+JPBy2XrHGE75
EpwaP18eSd8vlQS1wwW6qw8oX4LrjfHKRev7L4XX2WGXI1zyS7H+6InEkiXy
SzHrqvOpmad8Kb6VFJs9DJQvg9utA1sr6PsIGSpFHk6562l+GQRpol8WAsgv
w6El8VH9j5QvxzcOy8tsZ/LL8bH2eX35FOXL8fBy+3RaIPnluG3Yb+tyh/Jz
MLZinLiY817MX7MGvd8=
              "]]}}}, {{}, {}}}, {
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
          AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
          AxesLabel -> {"nth iteration", "execution time"}, 
          AxesOrigin -> {0., 0}, DisplayFunction :> Identity, 
          Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> Large, 
          Method -> {
           "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
            "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& )}}, PlotLabel -> "Profiling Result", 
          PlotRange -> {{0., 100.}, {0, 0.00896}}, PlotRangeClipping -> True, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {0, 
             Scaled[0.05]}}, 
          Ticks -> {{0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70,
             75, 80, 85, 90, 95, 100}, Automatic}}], 
       "Execution Times" -> CompressedData["
1:eJw9Um1QDHgY31UaNcleym1Dm83lOG81GS+Fn1BJuMqkmIhqr9WZll2Smv7P
P7VexoTNlDvrnUYiVFPJWbNryKF0k4l2OrPTnZfpXSbWVOL/hQ/Ph+fD83t+
b8okTYxKKpFIUsS8t4eszvyUC90h9ndNai4k49aXF+s5eMfI0On5hO2GDUku
2QS/7nkOtREcV+0uli09DJdWSA1z0zlqZdho72SYdSNBY7zCoe7cfdgcT3Dp
CSl38yO8yJUXKEsY8kyz1fXhHK9zJjUaighn05Z8OjmH49E0/ZxRXhz1J06u
HU7iiFMFNQVGE9L+y/zzTgJh7avjiVHvGNrKzV1HJvPv+xoypjW7c1S2TvUs
qCbU+URm6cZzBPi373+qJPRrH0ZrhglbQof3Ojty3NbIxjTZCG76pucWC8OU
2ZKC5hJCi8lxU8VuQqRN9uvELMHj45cJzgLXtiNLWxpEGJrwtq4pWOgIX/3B
OZRwMbL3t+EKgnSl+3TtLAIrLPYryifIDY2DC8sIHqlDYb8s4zgsz5AfH2Hw
/90U5Ctwvv1fGpXeZi8V+n+o6fByJTRuLT9W6sQxJnnQoyaWUEvmzXcEj7/S
Jd2FPxPu9m+8PqWK0GazKkztDLFxA4uteQR1fIA0pYCQbbwY2LJA8D644rzq
JSHqeV2VWc1xUJk39Vkl4cDOwpCIfxk844py4hwJtyqshk6hZ+Z9a3Lrj4TR
Hkf9K84QGsq8kndGCL+qavuuCbxtHSpN/jmG6Juy1KNbxZ1C3xV9i0E/2u6g
kHPQypT7ZW8Ywkp8E9cFENL/qPQ+LXzuPbtpl1rk3Lo00WeZlEPn1XO52ofw
cdFPynmfGZYENp9yWk94dk6tMPsSbIuNN+MVBF3xyOM+KyGvOtvhpfDH23XG
k/qFHEdaTmmDRb9YQ5Lp2iuG2/nLNf0if+8TDa4ZCo6xew6Fpg4wdLqZJuf0
Eh7EqmyeFoL7wx0zdKKPmTGezgljhS+rYv7vm0bYNbBuj/kfhntOg4MyF44L
xs+52jaGN+dL2lfNJDy2bB/l+oTQPFT/4syGffgK43F0RA==
        "], "Timestamp" -> "2022/07/17  01:30:58 PM", "User" -> "danie"], 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`DocumentShape[
       Association[{"Expression"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"Mean"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"Median"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"Minimum"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"Maximum"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"Plot"} -> 
        TypeSystem`PackageScope`AtomShape[60], {"Execution Times"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"Timestamp"} -> 
        TypeSystem`PackageScope`AtomShape[220.80000000000004`], {"User"} -> 
        TypeSystem`PackageScope`AtomShape[48.00000000000001]], 1], 
     "InitialType" -> 
     TypeSystem`Struct[{
       "Expression", "Mean", "Median", "Minimum", "Maximum", "Plot", 
        "Execution Times", "Timestamp", "User"}, {TypeSystem`AnyType, 
        TypeSystem`Atom[
         Quantity[1, "Milliseconds"]], 
        TypeSystem`Atom[
         Quantity[1, "Milliseconds"]], 
        TypeSystem`Atom[
         Quantity[1, "Milliseconds"]], 
        TypeSystem`Atom[
         Quantity[1, "Milliseconds"]], 
        TypeSystem`Atom[Graphics], 
        TypeSystem`Vector[
         TypeSystem`Atom[Real], 100], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String]}], "Meta" -> Association[], "RowTarget" -> 20,
      "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`DocumentShape[
       Association[{"Expression"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"Mean"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"Median"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"Minimum"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"Maximum"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"Plot"} -> 
        TypeSystem`PackageScope`AtomShape[60], {"Execution Times"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"Timestamp"} -> 
        TypeSystem`PackageScope`AtomShape[220.80000000000004`], {"User"} -> 
        TypeSystem`PackageScope`AtomShape[48.00000000000001]], 1], "Type" -> 
     TypeSystem`Struct[{
       "Expression", "Mean", "Median", "Minimum", "Maximum", "Plot", 
        "Execution Times", "Timestamp", "User"}, {TypeSystem`AnyType, 
        TypeSystem`Atom[
         Quantity[1, "Milliseconds"]], 
        TypeSystem`Atom[
         Quantity[1, "Milliseconds"]], 
        TypeSystem`Atom[
         Quantity[1, "Milliseconds"]], 
        TypeSystem`Atom[
         Quantity[1, "Milliseconds"]], 
        TypeSystem`Atom[Graphics], 
        TypeSystem`Vector[
         TypeSystem`Atom[Real], 100], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String]}], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 10, "DataRowCount" -> 
     9, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Expression", 
                  Style[
                  "Expression", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Expression"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Expression"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   
                   TemplateBox[{"ARCContiguousImageRegions"}, "InactiveHead", 
                    BaseStyle -> "Inactive", Tooltip -> 
                    "Inactive[ARCContiguousImageRegions]", SyntaxForm -> 
                    "Symbol"], "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1", ",", "8"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "8", ",", "8"}], "}"}]}], "}"}], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Expression"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mean", 
                  Style[
                  "Mean", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Mean"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mean"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"7.75`", "\"ms\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Median", 
                  Style[
                  "Median", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Median"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Median"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"7.7`", "\"ms\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Median"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Minimum", 
                  Style[
                  "Minimum", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Minimum"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Minimum"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"7.48`", "\"ms\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Minimum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Maximum", 
                  Style[
                  "Maximum", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Maximum"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Maximum"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"8.96`", "\"ms\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Maximum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Plot", 
                  Style[
                  "Plot", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Plot"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Plot"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                GraphicsBox[{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[
                    NCache[
                    Rational[1, 72], 0.013888888888888888`]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJxdlAlMkwcYhsshAYKsY+BKJoWiMKaIMBwKCLzcRzl60AODAzlGxwxV8GAQ
oAzqNAZdMeBmVXSOjDHZBMLl7NIurm4KY8EgNMw0bM4FFJCFWQPIjuz/mmxN
/jTv/3zv937ff/EKlKJiWxaLVfT38c//v78nMb9bYtMrn9XHMCdQcaL2u/4S
0o5gvSDtalWrGM2GamZt5cLOOka7Y78mp8C5mjQHfo/D7AZSqX4jPrc4G/Ln
ahntg08SbDQ7yoj7YoAds8cyS3wztn2Zq9R+RtwfitnDJ/Vy6h8A57nYLlc/
0lswUc9p4rWTPxANuiCFMZn8Qfi1ZuOIpoXqg9FWGv3s3HbiIfg+QL3d1pP0
6zCePZe5WkA6FLLiiNFQIfl3oPTnyo9u5JJ+A5kPzuQJnlB+GKa69I9O+ZB/
5//4LmTUaUvH3IiHo2fS36Opj/pFYMibX1XxEvFIhARPH/uBR3w3FstvCZWr
pKOQn7j6rpM91UfjupLtOGomHgNX9eg9g4HygU1BrKaxdoargHGd/d7uw1Qf
C76ZnfVKFdNPFQvj0z83OFnnjYP5QFV5RwT547Cy4beh0Ujyx2MiOf0Pp0Ti
8bjCn39rtZt4AmxS3F4r30Y8AbXNrX4tjcQTwdGMLId3Ek+Ee8lK0pY4yk/C
Sc4Rzpk1Zh9VEoLf0UX40jys5P/ur0oGBGVTlg7iKWh7sX/G04V4Ckb2dX3Q
4UD9U+FYuOzeLyGeioE6/Zs36Hqw0vBVGetx86vE0/D14p4vNvVSfz6mzCau
bprm40MiW4oyNRBPh0IeYlPURP50VGuvhI7vov4ZMB5PuFx8n3gGBPeGevUK
4pk4zmvwv9tDPBPvH2yOTf2J7m8WPGQtNTJ74lkY7DZpZq33R4DAm6bCyZcZ
DQHWuZ8O7r5I9QIMd3oWHkxltF6A/N6BhavW+YR4e6ZY2XiJyYMQwmvsktP7
yC/EIFf9SDjIcL0Q6nUWOy6H/CLUpRTd7HxIfhGS2n3zxCHkF6Hswx6vC/Q8
60WYb9t7SGF9n8WYRJ53nA2jIUaF59ynfd7kF+Pp7s28sOeUL0Z06Nh5Bynt
n427lxRcvS/tnw1zlPaanEv+bFS0rt1eMNH+2Wjoq7a7b31+JPBy2XrHGE75
EpwaP18eSd8vlQS1wwW6qw8oX4LrjfHKRev7L4XX2WGXI1zyS7H+6InEkiXy
SzHrqvOpmad8Kb6VFJs9DJQvg9utA1sr6PsIGSpFHk6562l+GQRpol8WAsgv
w6El8VH9j5QvxzcOy8tsZ/LL8bH2eX35FOXL8fBy+3RaIPnluG3Yb+tyh/Jz
MLZinLiY817MX7MGvd8=
                    "]]}}}, {{}, {}}}, {
                 PlotRangeClipping -> True, Frame -> True, FrameStyle -> 
                  GrayLevel[0.85], Ticks -> None, FrameTicks -> None, Axes -> 
                  None, ImageSize -> 96, DisplayFunction -> Identity, 
                  DisplayFunction -> Identity, AspectRatio -> 
                  NCache[GoldenRatio^(-1), 0.6180339887498948], 
                  Axes -> {True, True}, AxesLabel -> {
                    FormBox["\"nth iteration\"", TraditionalForm], 
                    FormBox["\"execution time\"", TraditionalForm]}, 
                  AxesOrigin -> {0., 0}, DisplayFunction :> Identity, 
                  Frame -> {{False, False}, {False, False}}, 
                  FrameLabel -> {{None, None}, {None, None}}, 
                  FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                  GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> Large, 
                  Method -> {
                   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
                    True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                  FormBox["\"Profiling Result\"", TraditionalForm], 
                  PlotRange -> {{0., 100.}, {0, 0.00896}}, PlotRangeClipping -> 
                  True, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {0, 
                    Scaled[0.05]}}, Ticks -> {{{0, 
                    FormBox["0", TraditionalForm]}, {5, 
                    FormBox["5", TraditionalForm]}, {10, 
                    FormBox["10", TraditionalForm]}, {15, 
                    FormBox["15", TraditionalForm]}, {20, 
                    FormBox["20", TraditionalForm]}, {25, 
                    FormBox["25", TraditionalForm]}, {30, 
                    FormBox["30", TraditionalForm]}, {35, 
                    FormBox["35", TraditionalForm]}, {40, 
                    FormBox["40", TraditionalForm]}, {45, 
                    FormBox["45", TraditionalForm]}, {50, 
                    FormBox["50", TraditionalForm]}, {55, 
                    FormBox["55", TraditionalForm]}, {60, 
                    FormBox["60", TraditionalForm]}, {65, 
                    FormBox["65", TraditionalForm]}, {70, 
                    FormBox["70", TraditionalForm]}, {75, 
                    FormBox["75", TraditionalForm]}, {80, 
                    FormBox["80", TraditionalForm]}, {85, 
                    FormBox["85", TraditionalForm]}, {90, 
                    FormBox["90", TraditionalForm]}, {95, 
                    FormBox["95", TraditionalForm]}, {100, 
                    FormBox["100", TraditionalForm]}}, Automatic}}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Plot"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Execution Times", 
                  Style[
                  "Execution Times", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Execution Times"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Execution Times"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 100], " }\[ThinSpace]"}], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 100], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Execution Times"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Execution Times"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Timestamp", 
                  Style[
                  "Timestamp", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Timestamp"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Timestamp"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["2022/07/17  01:30:58 PM", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Timestamp"]}, "Item", False], "Mouse"], 
              ImageSize -> {{220.80000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["User", 
                  Style[
                  "User", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["User"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["User"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["danie", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["User"]}, "Item", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{534., {150., 156.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{534., {150., 156.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8670670994308796`*^9, 3.867067163846402*^9}, {
   3.867067195171003*^9, 3.8670672007598968`*^9}, 3.8670674357152853`*^9, 
   3.867067858616202*^9},
 CellLabel->
  "Out[250]=",ExpressionUUID->"c0e636bb-3f8c-4dca-8d50-7e8a678d8fd2"]
}, Closed]],

Cell[CellGroupData[{

Cell["30x30", "Subsection",
 CellChangeTimes->{{3.867067306722672*^9, 
  3.867067308050478*^9}},ExpressionUUID->"e306c565-bd03-40e7-8d2b-\
ab8bed044c90"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ARCParseFile", "[", "\"\<b775ac94\>\"", "]"}], "[", 
  RowBox[{"\"\<Train\>\"", ",", " ", "1", ",", " ", "\"\<Input\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8671586378677516`*^9, 3.867158639545113*^9}},
 CellLabel->
  "In[231]:=",ExpressionUUID->"9ecba804-e82d-4284-bb9b-d4816170af4e"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"}
   },
   AutoDelete->False,
   FrameStyle->{
     AbsoluteThickness[1], 
     GrayLevel[0.5]},
   GridBoxBackground->{
    "Columns" -> {{None}}, "Rows" -> {{None}}, 
     "ItemsIndexed" -> {{1, 1} -> GrayLevel[0], {1, 2} -> 
       GrayLevel[0], {1, 3} -> GrayLevel[0], {1, 4} -> GrayLevel[0], {1, 5} -> 
       GrayLevel[0], {1, 6} -> GrayLevel[0], {1, 7} -> GrayLevel[0], {1, 8} -> 
       GrayLevel[0], {1, 9} -> GrayLevel[0], {1, 10} -> GrayLevel[0], {1, 11} -> 
       GrayLevel[0], {1, 12} -> GrayLevel[0], {1, 13} -> 
       GrayLevel[0], {1, 14} -> GrayLevel[0], {1, 15} -> 
       GrayLevel[0], {1, 16} -> GrayLevel[0], {1, 17} -> 
       GrayLevel[0], {1, 18} -> GrayLevel[0], {1, 19} -> 
       GrayLevel[0], {1, 20} -> GrayLevel[0], {1, 21} -> 
       GrayLevel[0], {1, 22} -> GrayLevel[0], {1, 23} -> 
       GrayLevel[0], {1, 24} -> GrayLevel[0], {1, 25} -> 
       GrayLevel[0], {1, 26} -> GrayLevel[0], {1, 27} -> 
       GrayLevel[0], {1, 28} -> GrayLevel[0], {1, 29} -> 
       GrayLevel[0], {1, 30} -> GrayLevel[0], {2, 1} -> GrayLevel[0], {2, 2} -> 
       GrayLevel[0], {2, 3} -> GrayLevel[0], {2, 4} -> GrayLevel[0], {2, 5} -> 
       GrayLevel[0], {2, 6} -> GrayLevel[0], {2, 7} -> GrayLevel[0], {2, 8} -> 
       GrayLevel[0], {2, 9} -> GrayLevel[0], {2, 10} -> GrayLevel[0], {2, 11} -> 
       GrayLevel[0], {2, 12} -> GrayLevel[0], {2, 13} -> 
       GrayLevel[0], {2, 14} -> GrayLevel[0], {2, 15} -> 
       GrayLevel[0], {2, 16} -> GrayLevel[0], {2, 17} -> 
       GrayLevel[0], {2, 18} -> GrayLevel[0], {2, 19} -> 
       GrayLevel[0], {2, 20} -> GrayLevel[0], {2, 21} -> 
       GrayLevel[0], {2, 22} -> GrayLevel[0], {2, 23} -> 
       GrayLevel[0], {2, 24} -> GrayLevel[0], {2, 25} -> 
       GrayLevel[0], {2, 26} -> GrayLevel[0], {2, 27} -> 
       GrayLevel[0], {2, 28} -> GrayLevel[0], {2, 29} -> 
       GrayLevel[0], {2, 30} -> GrayLevel[0], {3, 1} -> GrayLevel[0], {3, 2} -> 
       GrayLevel[0], {3, 3} -> GrayLevel[0], {3, 4} -> GrayLevel[0], {3, 5} -> 
       GrayLevel[0], {3, 6} -> GrayLevel[0], {3, 7} -> GrayLevel[0], {3, 8} -> 
       GrayLevel[0], {3, 9} -> GrayLevel[0], {3, 10} -> GrayLevel[0], {3, 11} -> 
       GrayLevel[0], {3, 12} -> GrayLevel[0], {3, 13} -> 
       GrayLevel[0], {3, 14} -> GrayLevel[0], {3, 15} -> 
       GrayLevel[0], {3, 16} -> GrayLevel[0], {3, 17} -> 
       GrayLevel[0], {3, 18} -> GrayLevel[0], {3, 19} -> 
       GrayLevel[0], {3, 20} -> GrayLevel[0], {3, 21} -> 
       GrayLevel[0], {3, 22} -> GrayLevel[0], {3, 23} -> 
       GrayLevel[0], {3, 24} -> GrayLevel[0], {3, 25} -> 
       GrayLevel[0], {3, 26} -> GrayLevel[0], {3, 27} -> 
       GrayLevel[0], {3, 28} -> GrayLevel[0], {3, 29} -> 
       GrayLevel[0], {3, 30} -> GrayLevel[0], {4, 1} -> GrayLevel[0], {4, 2} -> 
       GrayLevel[0], {4, 3} -> GrayLevel[0], {4, 4} -> GrayLevel[0], {4, 5} -> 
       GrayLevel[0], {4, 6} -> GrayLevel[0], {4, 7} -> GrayLevel[0], {4, 8} -> 
       GrayLevel[0], {4, 9} -> GrayLevel[0], {4, 10} -> GrayLevel[0], {4, 11} -> 
       GrayLevel[0], {4, 12} -> GrayLevel[0], {4, 13} -> 
       GrayLevel[0], {4, 14} -> GrayLevel[0], {4, 15} -> 
       GrayLevel[0], {4, 16} -> GrayLevel[0], {4, 17} -> 
       GrayLevel[0], {4, 18} -> GrayLevel[0], {4, 19} -> 
       GrayLevel[0], {4, 20} -> GrayLevel[0], {4, 21} -> 
       GrayLevel[0], {4, 22} -> GrayLevel[0], {4, 23} -> 
       GrayLevel[0], {4, 24} -> GrayLevel[0], {4, 25} -> 
       GrayLevel[0], {4, 26} -> GrayLevel[0], {4, 27} -> 
       GrayLevel[0], {4, 28} -> GrayLevel[0], {4, 29} -> 
       GrayLevel[0], {4, 30} -> GrayLevel[0], {5, 1} -> GrayLevel[0], {5, 2} -> 
       GrayLevel[0], {5, 3} -> GrayLevel[0], {5, 4} -> GrayLevel[0], {5, 5} -> 
       GrayLevel[0], {5, 6} -> GrayLevel[0], {5, 7} -> GrayLevel[0], {5, 8} -> 
       GrayLevel[0], {5, 9} -> GrayLevel[0], {5, 10} -> GrayLevel[0], {5, 11} -> 
       GrayLevel[0], {5, 12} -> GrayLevel[0], {5, 13} -> 
       GrayLevel[0], {5, 14} -> GrayLevel[0], {5, 15} -> 
       GrayLevel[0], {5, 16} -> GrayLevel[0], {5, 17} -> 
       GrayLevel[0], {5, 18} -> GrayLevel[0], {5, 19} -> 
       GrayLevel[0], {5, 20} -> GrayLevel[0], {5, 21} -> 
       GrayLevel[0], {5, 22} -> GrayLevel[0], {5, 23} -> 
       GrayLevel[0], {5, 24} -> GrayLevel[0], {5, 25} -> 
       GrayLevel[0], {5, 26} -> GrayLevel[0], {5, 27} -> 
       GrayLevel[0], {5, 28} -> GrayLevel[0], {5, 29} -> 
       GrayLevel[0], {5, 30} -> GrayLevel[0], {6, 1} -> GrayLevel[0], {6, 2} -> 
       GrayLevel[0], {6, 3} -> GrayLevel[0], {6, 4} -> GrayLevel[0], {6, 5} -> 
       GrayLevel[0], {6, 6} -> GrayLevel[0], {6, 7} -> GrayLevel[0], {6, 8} -> 
       GrayLevel[0], {6, 9} -> GrayLevel[0], {6, 10} -> GrayLevel[0], {6, 11} -> 
       GrayLevel[0], {6, 12} -> GrayLevel[0], {6, 13} -> 
       GrayLevel[0], {6, 14} -> GrayLevel[0], {6, 15} -> 
       GrayLevel[0], {6, 16} -> GrayLevel[0], {6, 17} -> 
       GrayLevel[0], {6, 18} -> GrayLevel[0], {6, 19} -> 
       GrayLevel[0], {6, 20} -> GrayLevel[0], {6, 21} -> 
       GrayLevel[0], {6, 22} -> GrayLevel[0], {6, 23} -> 
       GrayLevel[0], {6, 24} -> GrayLevel[0], {6, 25} -> 
       GrayLevel[0], {6, 26} -> GrayLevel[0], {6, 27} -> 
       GrayLevel[0], {6, 28} -> GrayLevel[0], {6, 29} -> 
       GrayLevel[0], {6, 30} -> GrayLevel[0], {7, 1} -> GrayLevel[0], {7, 2} -> 
       GrayLevel[0], {7, 3} -> GrayLevel[0], {7, 4} -> GrayLevel[0], {7, 5} -> 
       GrayLevel[0], {7, 6} -> GrayLevel[0], {7, 7} -> GrayLevel[0], {7, 8} -> 
       GrayLevel[0], {7, 9} -> GrayLevel[0], {7, 10} -> GrayLevel[0], {7, 11} -> 
       GrayLevel[0], {7, 12} -> GrayLevel[0], {7, 13} -> 
       GrayLevel[0], {7, 14} -> GrayLevel[0], {7, 15} -> 
       GrayLevel[0], {7, 16} -> GrayLevel[0], {7, 17} -> 
       GrayLevel[0], {7, 18} -> GrayLevel[0], {7, 19} -> 
       GrayLevel[0], {7, 20} -> GrayLevel[0], {7, 21} -> 
       GrayLevel[0], {7, 22} -> GrayLevel[0], {7, 23} -> 
       GrayLevel[0], {7, 24} -> GrayLevel[0], {7, 25} -> 
       GrayLevel[0], {7, 26} -> GrayLevel[0], {7, 27} -> 
       GrayLevel[0], {7, 28} -> GrayLevel[0], {7, 29} -> 
       GrayLevel[0], {7, 30} -> GrayLevel[0], {8, 1} -> GrayLevel[0], {8, 2} -> 
       GrayLevel[0], {8, 3} -> GrayLevel[0], {8, 4} -> GrayLevel[0], {8, 5} -> 
       GrayLevel[0], {8, 6} -> GrayLevel[0], {8, 7} -> GrayLevel[0], {8, 8} -> 
       GrayLevel[0], {8, 9} -> GrayLevel[0], {8, 10} -> GrayLevel[0], {8, 11} -> 
       GrayLevel[0], {8, 12} -> GrayLevel[0], {8, 13} -> 
       GrayLevel[0], {8, 14} -> GrayLevel[0], {8, 15} -> 
       GrayLevel[0], {8, 16} -> GrayLevel[0], {8, 17} -> 
       GrayLevel[0], {8, 18} -> GrayLevel[0], {8, 19} -> 
       GrayLevel[0], {8, 20} -> GrayLevel[0], {8, 21} -> 
       GrayLevel[0], {8, 22} -> GrayLevel[0], {8, 23} -> 
       GrayLevel[0], {8, 24} -> GrayLevel[0], {8, 25} -> 
       GrayLevel[0], {8, 26} -> GrayLevel[0], {8, 27} -> 
       GrayLevel[0], {8, 28} -> GrayLevel[0], {8, 29} -> 
       GrayLevel[0], {8, 30} -> GrayLevel[0], {9, 1} -> GrayLevel[0], {9, 2} -> 
       GrayLevel[0], {9, 3} -> GrayLevel[0], {9, 4} -> GrayLevel[0], {9, 5} -> 
       GrayLevel[0], {9, 6} -> GrayLevel[0], {9, 7} -> GrayLevel[0], {9, 8} -> 
       GrayLevel[0], {9, 9} -> GrayLevel[0], {9, 10} -> GrayLevel[0], {9, 11} -> 
       GrayLevel[0], {9, 12} -> GrayLevel[0], {9, 13} -> 
       GrayLevel[0], {9, 14} -> GrayLevel[0], {9, 15} -> 
       GrayLevel[0], {9, 16} -> GrayLevel[0], {9, 17} -> 
       GrayLevel[0], {9, 18} -> GrayLevel[0], {9, 19} -> 
       GrayLevel[0], {9, 20} -> GrayLevel[0], {9, 21} -> 
       GrayLevel[0], {9, 22} -> GrayLevel[0], {9, 23} -> 
       GrayLevel[0], {9, 24} -> GrayLevel[0], {9, 25} -> 
       GrayLevel[0], {9, 26} -> GrayLevel[0], {9, 27} -> 
       GrayLevel[0], {9, 28} -> GrayLevel[0], {9, 29} -> 
       GrayLevel[0], {9, 30} -> GrayLevel[0], {10, 1} -> 
       GrayLevel[0], {10, 2} -> GrayLevel[0], {10, 3} -> 
       GrayLevel[0], {10, 4} -> GrayLevel[0], {10, 5} -> 
       GrayLevel[0], {10, 6} -> GrayLevel[0], {10, 7} -> 
       GrayLevel[0], {10, 8} -> GrayLevel[0], {10, 9} -> 
       GrayLevel[0], {10, 10} -> GrayLevel[0], {10, 11} -> 
       GrayLevel[0], {10, 12} -> GrayLevel[0], {10, 13} -> 
       GrayLevel[0], {10, 14} -> GrayLevel[0], {10, 15} -> 
       GrayLevel[0], {10, 16} -> GrayLevel[0], {10, 17} -> 
       RGBColor[1, 0, 0], {10, 18} -> RGBColor[0, 0, 1], {10, 19} -> 
       GrayLevel[0], {10, 20} -> GrayLevel[0], {10, 21} -> 
       GrayLevel[0], {10, 22} -> GrayLevel[0], {10, 23} -> 
       GrayLevel[0], {10, 24} -> GrayLevel[0], {10, 25} -> 
       GrayLevel[0], {10, 26} -> GrayLevel[0], {10, 27} -> 
       GrayLevel[0], {10, 28} -> GrayLevel[0], {10, 29} -> 
       GrayLevel[0], {10, 30} -> GrayLevel[0], {11, 1} -> 
       GrayLevel[0], {11, 2} -> GrayLevel[0], {11, 3} -> 
       GrayLevel[0], {11, 4} -> GrayLevel[0], {11, 5} -> 
       GrayLevel[0], {11, 6} -> GrayLevel[0], {11, 7} -> 
       GrayLevel[0], {11, 8} -> GrayLevel[0], {11, 9} -> 
       GrayLevel[0], {11, 10} -> GrayLevel[0], {11, 11} -> 
       GrayLevel[0], {11, 12} -> GrayLevel[0], {11, 13} -> 
       GrayLevel[0], {11, 14} -> GrayLevel[0], {11, 15} -> 
       GrayLevel[0], {11, 16} -> RGBColor[1, 0.5, 0], {11, 17} -> 
       RGBColor[1, 0.5, 0], {11, 18} -> RGBColor[1, 1, 0], {11, 19} -> 
       GrayLevel[0], {11, 20} -> GrayLevel[0], {11, 21} -> 
       GrayLevel[0], {11, 22} -> GrayLevel[0], {11, 23} -> 
       GrayLevel[0], {11, 24} -> GrayLevel[0], {11, 25} -> 
       GrayLevel[0], {11, 26} -> GrayLevel[0], {11, 27} -> 
       GrayLevel[0], {11, 28} -> GrayLevel[0], {11, 29} -> 
       GrayLevel[0], {11, 30} -> GrayLevel[0], {12, 1} -> 
       GrayLevel[0], {12, 2} -> GrayLevel[0], {12, 3} -> 
       GrayLevel[0], {12, 4} -> GrayLevel[0], {12, 5} -> 
       GrayLevel[0], {12, 6} -> GrayLevel[0], {12, 7} -> 
       RGBColor[0, 1, 0], {12, 8} -> RGBColor[1, 1, 0], {12, 9} -> 
       GrayLevel[0], {12, 10} -> GrayLevel[0], {12, 11} -> 
       GrayLevel[0], {12, 12} -> GrayLevel[0], {12, 13} -> 
       GrayLevel[0], {12, 14} -> GrayLevel[0], {12, 15} -> 
       GrayLevel[0], {12, 16} -> RGBColor[1, 0.5, 0], {12, 17} -> 
       GrayLevel[0], {12, 18} -> GrayLevel[0], {12, 19} -> 
       GrayLevel[0], {12, 20} -> GrayLevel[0], {12, 21} -> 
       GrayLevel[0], {12, 22} -> GrayLevel[0], {12, 23} -> 
       GrayLevel[0], {12, 24} -> GrayLevel[0], {12, 25} -> 
       GrayLevel[0], {12, 26} -> GrayLevel[0], {12, 27} -> 
       GrayLevel[0], {12, 28} -> GrayLevel[0], {12, 29} -> 
       GrayLevel[0], {12, 30} -> GrayLevel[0], {13, 1} -> 
       GrayLevel[0], {13, 2} -> GrayLevel[0], {13, 3} -> 
       GrayLevel[0], {13, 4} -> GrayLevel[0], {13, 5} -> 
       RGBColor[0, 0, 1], {13, 6} -> RGBColor[0, 0, 1], {13, 7} -> 
       RGBColor[0, 0, 1], {13, 8} -> RGBColor[1, 0, 0], {13, 9} -> 
       GrayLevel[0], {13, 10} -> GrayLevel[0], {13, 11} -> 
       GrayLevel[0], {13, 12} -> GrayLevel[0], {13, 13} -> 
       GrayLevel[0], {13, 14} -> GrayLevel[0], {13, 15} -> 
       RGBColor[1, 0.5, 0], {13, 16} -> GrayLevel[0], {13, 17} -> 
       RGBColor[1, 0.5, 0], {13, 18} -> GrayLevel[0], {13, 19} -> 
       GrayLevel[0], {13, 20} -> GrayLevel[0], {13, 21} -> 
       GrayLevel[0], {13, 22} -> GrayLevel[0], {13, 23} -> 
       GrayLevel[0], {13, 24} -> GrayLevel[0], {13, 25} -> 
       GrayLevel[0], {13, 26} -> GrayLevel[0], {13, 27} -> 
       GrayLevel[0], {13, 28} -> GrayLevel[0], {13, 29} -> 
       GrayLevel[0], {13, 30} -> GrayLevel[0], {14, 1} -> 
       GrayLevel[0], {14, 2} -> GrayLevel[0], {14, 3} -> 
       GrayLevel[0], {14, 4} -> RGBColor[0, 0, 1], {14, 5} -> 
       RGBColor[0, 0, 1], {14, 6} -> GrayLevel[0], {14, 7} -> 
       RGBColor[0, 0, 1], {14, 8} -> GrayLevel[0], {14, 9} -> 
       GrayLevel[0], {14, 10} -> GrayLevel[0], {14, 11} -> 
       GrayLevel[0], {14, 12} -> GrayLevel[0], {14, 13} -> 
       GrayLevel[0], {14, 14} -> GrayLevel[0], {14, 15} -> 
       GrayLevel[0], {14, 16} -> GrayLevel[0], {14, 17} -> 
       GrayLevel[0], {14, 18} -> GrayLevel[0], {14, 19} -> 
       GrayLevel[0], {14, 20} -> GrayLevel[0], {14, 21} -> 
       GrayLevel[0], {14, 22} -> GrayLevel[0], {14, 23} -> 
       GrayLevel[0], {14, 24} -> GrayLevel[0], {14, 25} -> 
       GrayLevel[0], {14, 26} -> GrayLevel[0], {14, 27} -> 
       GrayLevel[0], {14, 28} -> GrayLevel[0], {14, 29} -> 
       GrayLevel[0], {14, 30} -> GrayLevel[0], {15, 1} -> 
       GrayLevel[0], {15, 2} -> GrayLevel[0], {15, 3} -> 
       GrayLevel[0], {15, 4} -> GrayLevel[0], {15, 5} -> 
       GrayLevel[0], {15, 6} -> GrayLevel[0], {15, 7} -> 
       RGBColor[0, 0, 1], {15, 8} -> GrayLevel[0], {15, 9} -> 
       GrayLevel[0], {15, 10} -> GrayLevel[0], {15, 11} -> 
       GrayLevel[0], {15, 12} -> GrayLevel[0], {15, 13} -> 
       GrayLevel[0], {15, 14} -> GrayLevel[0], {15, 15} -> 
       GrayLevel[0], {15, 16} -> GrayLevel[0], {15, 17} -> 
       GrayLevel[0], {15, 18} -> GrayLevel[0], {15, 19} -> 
       GrayLevel[0], {15, 20} -> GrayLevel[0], {15, 21} -> 
       GrayLevel[0], {15, 22} -> GrayLevel[0], {15, 23} -> 
       GrayLevel[0], {15, 24} -> GrayLevel[0], {15, 25} -> 
       GrayLevel[0], {15, 26} -> GrayLevel[0], {15, 27} -> 
       GrayLevel[0], {15, 28} -> GrayLevel[0], {15, 29} -> 
       GrayLevel[0], {15, 30} -> GrayLevel[0], {16, 1} -> 
       GrayLevel[0], {16, 2} -> GrayLevel[0], {16, 3} -> 
       GrayLevel[0], {16, 4} -> GrayLevel[0], {16, 5} -> 
       GrayLevel[0], {16, 6} -> RGBColor[0, 0, 1], {16, 7} -> 
       GrayLevel[0], {16, 8} -> GrayLevel[0], {16, 9} -> 
       GrayLevel[0], {16, 10} -> GrayLevel[0], {16, 11} -> 
       GrayLevel[0], {16, 12} -> GrayLevel[0], {16, 13} -> 
       GrayLevel[0], {16, 14} -> GrayLevel[0], {16, 15} -> 
       GrayLevel[0], {16, 16} -> GrayLevel[0], {16, 17} -> 
       GrayLevel[0], {16, 18} -> GrayLevel[0], {16, 19} -> 
       GrayLevel[0], {16, 20} -> GrayLevel[0], {16, 21} -> 
       GrayLevel[0], {16, 22} -> GrayLevel[0], {16, 23} -> 
       GrayLevel[0], {16, 24} -> GrayLevel[0], {16, 25} -> 
       GrayLevel[0], {16, 26} -> GrayLevel[0], {16, 27} -> 
       GrayLevel[0], {16, 28} -> GrayLevel[0], {16, 29} -> 
       GrayLevel[0], {16, 30} -> GrayLevel[0], {17, 1} -> 
       GrayLevel[0], {17, 2} -> GrayLevel[0], {17, 3} -> 
       GrayLevel[0], {17, 4} -> GrayLevel[0], {17, 5} -> 
       GrayLevel[0], {17, 6} -> GrayLevel[0], {17, 7} -> 
       GrayLevel[0], {17, 8} -> GrayLevel[0], {17, 9} -> 
       GrayLevel[0], {17, 10} -> GrayLevel[0], {17, 11} -> 
       GrayLevel[0], {17, 12} -> GrayLevel[0], {17, 13} -> 
       GrayLevel[0], {17, 14} -> GrayLevel[0], {17, 15} -> 
       GrayLevel[0], {17, 16} -> GrayLevel[0], {17, 17} -> 
       GrayLevel[0], {17, 18} -> GrayLevel[0], {17, 19} -> 
       GrayLevel[0], {17, 20} -> GrayLevel[0], {17, 21} -> 
       GrayLevel[0], {17, 22} -> GrayLevel[0], {17, 23} -> 
       GrayLevel[0], {17, 24} -> GrayLevel[0], {17, 25} -> 
       GrayLevel[0], {17, 26} -> GrayLevel[0], {17, 27} -> 
       GrayLevel[0], {17, 28} -> GrayLevel[0], {17, 29} -> 
       GrayLevel[0], {17, 30} -> GrayLevel[0], {18, 1} -> 
       GrayLevel[0], {18, 2} -> GrayLevel[0], {18, 3} -> 
       GrayLevel[0], {18, 4} -> GrayLevel[0], {18, 5} -> 
       GrayLevel[0], {18, 6} -> GrayLevel[0], {18, 7} -> 
       GrayLevel[0], {18, 8} -> GrayLevel[0], {18, 9} -> 
       GrayLevel[0], {18, 10} -> GrayLevel[0], {18, 11} -> 
       GrayLevel[0], {18, 12} -> GrayLevel[0], {18, 13} -> 
       GrayLevel[0], {18, 14} -> GrayLevel[0], {18, 15} -> 
       GrayLevel[0], {18, 16} -> GrayLevel[0], {18, 17} -> 
       GrayLevel[0], {18, 18} -> GrayLevel[0], {18, 19} -> 
       GrayLevel[0], {18, 20} -> GrayLevel[0], {18, 21} -> 
       GrayLevel[0], {18, 22} -> GrayLevel[0], {18, 23} -> 
       GrayLevel[0], {18, 24} -> GrayLevel[0], {18, 25} -> 
       GrayLevel[0], {18, 26} -> GrayLevel[0], {18, 27} -> 
       GrayLevel[0], {18, 28} -> GrayLevel[0], {18, 29} -> 
       GrayLevel[0], {18, 30} -> GrayLevel[0], {19, 1} -> 
       GrayLevel[0], {19, 2} -> GrayLevel[0], {19, 3} -> 
       GrayLevel[0], {19, 4} -> GrayLevel[0], {19, 5} -> 
       GrayLevel[0], {19, 6} -> GrayLevel[0], {19, 7} -> 
       GrayLevel[0], {19, 8} -> GrayLevel[0], {19, 9} -> 
       GrayLevel[0], {19, 10} -> GrayLevel[0], {19, 11} -> 
       GrayLevel[0], {19, 12} -> GrayLevel[0], {19, 13} -> 
       GrayLevel[0], {19, 14} -> GrayLevel[0], {19, 15} -> 
       GrayLevel[0], {19, 16} -> GrayLevel[0], {19, 17} -> 
       GrayLevel[0], {19, 18} -> GrayLevel[0], {19, 19} -> 
       GrayLevel[0], {19, 20} -> GrayLevel[0], {19, 21} -> 
       GrayLevel[0], {19, 22} -> GrayLevel[0], {19, 23} -> 
       GrayLevel[0], {19, 24} -> GrayLevel[0], {19, 25} -> 
       GrayLevel[0], {19, 26} -> GrayLevel[0], {19, 27} -> 
       GrayLevel[0], {19, 28} -> GrayLevel[0], {19, 29} -> 
       GrayLevel[0], {19, 30} -> GrayLevel[0], {20, 1} -> 
       GrayLevel[0], {20, 2} -> GrayLevel[0], {20, 3} -> 
       GrayLevel[0], {20, 4} -> GrayLevel[0], {20, 5} -> 
       GrayLevel[0], {20, 6} -> GrayLevel[0], {20, 7} -> 
       GrayLevel[0], {20, 8} -> GrayLevel[0], {20, 9} -> 
       GrayLevel[0], {20, 10} -> GrayLevel[0], {20, 11} -> 
       GrayLevel[0], {20, 12} -> GrayLevel[0], {20, 13} -> 
       GrayLevel[0], {20, 14} -> GrayLevel[0], {20, 15} -> 
       GrayLevel[0], {20, 16} -> GrayLevel[0], {20, 17} -> 
       GrayLevel[0], {20, 18} -> GrayLevel[0], {20, 19} -> 
       GrayLevel[0], {20, 20} -> GrayLevel[0], {20, 21} -> 
       GrayLevel[0], {20, 22} -> GrayLevel[0], {20, 23} -> 
       GrayLevel[0], {20, 24} -> GrayLevel[0], {20, 25} -> 
       GrayLevel[0], {20, 26} -> GrayLevel[0], {20, 27} -> 
       GrayLevel[0], {20, 28} -> GrayLevel[0], {20, 29} -> 
       GrayLevel[0], {20, 30} -> GrayLevel[0], {21, 1} -> 
       GrayLevel[0], {21, 2} -> GrayLevel[0], {21, 3} -> 
       GrayLevel[0], {21, 4} -> GrayLevel[0], {21, 5} -> 
       GrayLevel[0], {21, 6} -> GrayLevel[0], {21, 7} -> 
       GrayLevel[0], {21, 8} -> GrayLevel[0], {21, 9} -> 
       GrayLevel[0], {21, 10} -> GrayLevel[0], {21, 11} -> 
       GrayLevel[0], {21, 12} -> GrayLevel[0], {21, 13} -> 
       GrayLevel[0], {21, 14} -> GrayLevel[0], {21, 15} -> 
       GrayLevel[0], {21, 16} -> GrayLevel[0], {21, 17} -> 
       GrayLevel[0], {21, 18} -> GrayLevel[0], {21, 19} -> 
       GrayLevel[0], {21, 20} -> GrayLevel[0], {21, 21} -> 
       GrayLevel[0], {21, 22} -> GrayLevel[0], {21, 23} -> 
       GrayLevel[0], {21, 24} -> GrayLevel[0], {21, 25} -> 
       GrayLevel[0], {21, 26} -> GrayLevel[0], {21, 27} -> 
       GrayLevel[0], {21, 28} -> GrayLevel[0], {21, 29} -> 
       GrayLevel[0], {21, 30} -> GrayLevel[0], {22, 1} -> 
       GrayLevel[0], {22, 2} -> GrayLevel[0], {22, 3} -> 
       GrayLevel[0], {22, 4} -> GrayLevel[0], {22, 5} -> 
       GrayLevel[0], {22, 6} -> GrayLevel[0], {22, 7} -> 
       GrayLevel[0], {22, 8} -> GrayLevel[0], {22, 9} -> 
       GrayLevel[0], {22, 10} -> GrayLevel[0], {22, 11} -> 
       GrayLevel[0], {22, 12} -> GrayLevel[0], {22, 13} -> 
       GrayLevel[0], {22, 14} -> RGBColor[
         Rational[5, 9], 
         Rational[5, 9], 1], {22, 15} -> GrayLevel[0], {22, 16} -> 
       GrayLevel[0], {22, 17} -> GrayLevel[0], {22, 18} -> 
       GrayLevel[0], {22, 19} -> GrayLevel[0], {22, 20} -> 
       GrayLevel[0], {22, 21} -> GrayLevel[0], {22, 22} -> 
       GrayLevel[0], {22, 23} -> GrayLevel[0], {22, 24} -> 
       GrayLevel[0], {22, 25} -> GrayLevel[0], {22, 26} -> 
       GrayLevel[0], {22, 27} -> GrayLevel[0], {22, 28} -> 
       GrayLevel[0], {22, 29} -> GrayLevel[0], {22, 30} -> 
       GrayLevel[0], {23, 1} -> GrayLevel[0], {23, 2} -> 
       GrayLevel[0], {23, 3} -> GrayLevel[0], {23, 4} -> 
       GrayLevel[0], {23, 5} -> GrayLevel[0], {23, 6} -> 
       GrayLevel[0], {23, 7} -> GrayLevel[0], {23, 8} -> 
       GrayLevel[0], {23, 9} -> GrayLevel[0], {23, 10} -> 
       GrayLevel[0], {23, 11} -> GrayLevel[0], {23, 12} -> 
       GrayLevel[0], {23, 13} -> GrayLevel[0], {23, 14} -> 
       RGBColor[1, 0, 0], {23, 15} -> RGBColor[0, 1, 0], {23, 16} -> 
       GrayLevel[0], {23, 17} -> GrayLevel[0], {23, 18} -> 
       GrayLevel[0], {23, 19} -> GrayLevel[0], {23, 20} -> 
       GrayLevel[0], {23, 21} -> GrayLevel[0], {23, 22} -> 
       GrayLevel[0], {23, 23} -> GrayLevel[0], {23, 24} -> 
       GrayLevel[0], {23, 25} -> GrayLevel[0], {23, 26} -> 
       GrayLevel[0], {23, 27} -> GrayLevel[0], {23, 28} -> 
       GrayLevel[0], {23, 29} -> GrayLevel[0], {23, 30} -> 
       GrayLevel[0], {24, 1} -> GrayLevel[0], {24, 2} -> 
       GrayLevel[0], {24, 3} -> GrayLevel[0], {24, 4} -> 
       GrayLevel[0], {24, 5} -> GrayLevel[0], {24, 6} -> 
       GrayLevel[0], {24, 7} -> GrayLevel[0], {24, 8} -> 
       GrayLevel[0], {24, 9} -> GrayLevel[0], {24, 10} -> 
       GrayLevel[0], {24, 11} -> GrayLevel[0], {24, 12} -> 
       GrayLevel[0], {24, 13} -> GrayLevel[0], {24, 14} -> 
       GrayLevel[0], {24, 15} -> GrayLevel[0], {24, 16} -> 
       RGBColor[0, 1, 0], {24, 17} -> RGBColor[0, 1, 0], {24, 18} -> 
       GrayLevel[0], {24, 19} -> GrayLevel[0], {24, 20} -> 
       GrayLevel[0], {24, 21} -> GrayLevel[0], {24, 22} -> 
       GrayLevel[0], {24, 23} -> GrayLevel[0], {24, 24} -> 
       GrayLevel[0], {24, 25} -> GrayLevel[0], {24, 26} -> 
       GrayLevel[0], {24, 27} -> GrayLevel[0], {24, 28} -> 
       GrayLevel[0], {24, 29} -> GrayLevel[0], {24, 30} -> 
       GrayLevel[0], {25, 1} -> GrayLevel[0], {25, 2} -> 
       GrayLevel[0], {25, 3} -> GrayLevel[0], {25, 4} -> 
       GrayLevel[0], {25, 5} -> GrayLevel[0], {25, 6} -> 
       GrayLevel[0], {25, 7} -> GrayLevel[0], {25, 8} -> 
       GrayLevel[0], {25, 9} -> GrayLevel[0], {25, 10} -> 
       GrayLevel[0], {25, 11} -> GrayLevel[0], {25, 12} -> 
       GrayLevel[0], {25, 13} -> GrayLevel[0], {25, 14} -> 
       GrayLevel[0], {25, 15} -> GrayLevel[0], {25, 16} -> 
       RGBColor[0, 1, 0], {25, 17} -> GrayLevel[0], {25, 18} -> 
       GrayLevel[0], {25, 19} -> GrayLevel[0], {25, 20} -> 
       GrayLevel[0], {25, 21} -> GrayLevel[0], {25, 22} -> 
       GrayLevel[0], {25, 23} -> GrayLevel[0], {25, 24} -> 
       GrayLevel[0], {25, 25} -> GrayLevel[0], {25, 26} -> 
       GrayLevel[0], {25, 27} -> GrayLevel[0], {25, 28} -> 
       GrayLevel[0], {25, 29} -> GrayLevel[0], {25, 30} -> 
       GrayLevel[0], {26, 1} -> GrayLevel[0], {26, 2} -> 
       GrayLevel[0], {26, 3} -> GrayLevel[0], {26, 4} -> 
       GrayLevel[0], {26, 5} -> GrayLevel[0], {26, 6} -> 
       GrayLevel[0], {26, 7} -> GrayLevel[0], {26, 8} -> 
       GrayLevel[0], {26, 9} -> GrayLevel[0], {26, 10} -> 
       GrayLevel[0], {26, 11} -> GrayLevel[0], {26, 12} -> 
       GrayLevel[0], {26, 13} -> GrayLevel[0], {26, 14} -> 
       GrayLevel[0], {26, 15} -> GrayLevel[0], {26, 16} -> 
       GrayLevel[0], {26, 17} -> GrayLevel[0], {26, 18} -> 
       GrayLevel[0], {26, 19} -> GrayLevel[0], {26, 20} -> 
       GrayLevel[0], {26, 21} -> GrayLevel[0], {26, 22} -> 
       GrayLevel[0], {26, 23} -> GrayLevel[0], {26, 24} -> 
       GrayLevel[0], {26, 25} -> GrayLevel[0], {26, 26} -> 
       GrayLevel[0], {26, 27} -> GrayLevel[0], {26, 28} -> 
       GrayLevel[0], {26, 29} -> GrayLevel[0], {26, 30} -> 
       GrayLevel[0], {27, 1} -> GrayLevel[0], {27, 2} -> 
       GrayLevel[0], {27, 3} -> GrayLevel[0], {27, 4} -> 
       GrayLevel[0], {27, 5} -> GrayLevel[0], {27, 6} -> 
       GrayLevel[0], {27, 7} -> GrayLevel[0], {27, 8} -> 
       GrayLevel[0], {27, 9} -> GrayLevel[0], {27, 10} -> 
       GrayLevel[0], {27, 11} -> GrayLevel[0], {27, 12} -> 
       GrayLevel[0], {27, 13} -> GrayLevel[0], {27, 14} -> 
       GrayLevel[0], {27, 15} -> GrayLevel[0], {27, 16} -> 
       GrayLevel[0], {27, 17} -> GrayLevel[0], {27, 18} -> 
       GrayLevel[0], {27, 19} -> GrayLevel[0], {27, 20} -> 
       GrayLevel[0], {27, 21} -> GrayLevel[0], {27, 22} -> 
       GrayLevel[0], {27, 23} -> GrayLevel[0], {27, 24} -> 
       GrayLevel[0], {27, 25} -> GrayLevel[0], {27, 26} -> 
       GrayLevel[0], {27, 27} -> GrayLevel[0], {27, 28} -> 
       GrayLevel[0], {27, 29} -> GrayLevel[0], {27, 30} -> 
       GrayLevel[0], {28, 1} -> GrayLevel[0], {28, 2} -> 
       GrayLevel[0], {28, 3} -> GrayLevel[0], {28, 4} -> 
       GrayLevel[0], {28, 5} -> GrayLevel[0], {28, 6} -> 
       GrayLevel[0], {28, 7} -> GrayLevel[0], {28, 8} -> 
       GrayLevel[0], {28, 9} -> GrayLevel[0], {28, 10} -> 
       GrayLevel[0], {28, 11} -> GrayLevel[0], {28, 12} -> 
       GrayLevel[0], {28, 13} -> GrayLevel[0], {28, 14} -> 
       GrayLevel[0], {28, 15} -> GrayLevel[0], {28, 16} -> 
       GrayLevel[0], {28, 17} -> GrayLevel[0], {28, 18} -> 
       GrayLevel[0], {28, 19} -> GrayLevel[0], {28, 20} -> 
       GrayLevel[0], {28, 21} -> GrayLevel[0], {28, 22} -> 
       GrayLevel[0], {28, 23} -> GrayLevel[0], {28, 24} -> 
       GrayLevel[0], {28, 25} -> GrayLevel[0], {28, 26} -> 
       GrayLevel[0], {28, 27} -> GrayLevel[0], {28, 28} -> 
       GrayLevel[0], {28, 29} -> GrayLevel[0], {28, 30} -> 
       GrayLevel[0], {29, 1} -> GrayLevel[0], {29, 2} -> 
       GrayLevel[0], {29, 3} -> GrayLevel[0], {29, 4} -> 
       GrayLevel[0], {29, 5} -> GrayLevel[0], {29, 6} -> 
       GrayLevel[0], {29, 7} -> GrayLevel[0], {29, 8} -> 
       GrayLevel[0], {29, 9} -> GrayLevel[0], {29, 10} -> 
       GrayLevel[0], {29, 11} -> GrayLevel[0], {29, 12} -> 
       GrayLevel[0], {29, 13} -> GrayLevel[0], {29, 14} -> 
       GrayLevel[0], {29, 15} -> GrayLevel[0], {29, 16} -> 
       GrayLevel[0], {29, 17} -> GrayLevel[0], {29, 18} -> 
       GrayLevel[0], {29, 19} -> GrayLevel[0], {29, 20} -> 
       GrayLevel[0], {29, 21} -> GrayLevel[0], {29, 22} -> 
       GrayLevel[0], {29, 23} -> GrayLevel[0], {29, 24} -> 
       GrayLevel[0], {29, 25} -> GrayLevel[0], {29, 26} -> 
       GrayLevel[0], {29, 27} -> GrayLevel[0], {29, 28} -> 
       GrayLevel[0], {29, 29} -> GrayLevel[0], {29, 30} -> 
       GrayLevel[0], {30, 1} -> GrayLevel[0], {30, 2} -> 
       GrayLevel[0], {30, 3} -> GrayLevel[0], {30, 4} -> 
       GrayLevel[0], {30, 5} -> GrayLevel[0], {30, 6} -> 
       GrayLevel[0], {30, 7} -> GrayLevel[0], {30, 8} -> 
       GrayLevel[0], {30, 9} -> GrayLevel[0], {30, 10} -> 
       GrayLevel[0], {30, 11} -> GrayLevel[0], {30, 12} -> 
       GrayLevel[0], {30, 13} -> GrayLevel[0], {30, 14} -> 
       GrayLevel[0], {30, 15} -> GrayLevel[0], {30, 16} -> 
       GrayLevel[0], {30, 17} -> GrayLevel[0], {30, 18} -> 
       GrayLevel[0], {30, 19} -> GrayLevel[0], {30, 20} -> 
       GrayLevel[0], {30, 21} -> GrayLevel[0], {30, 22} -> 
       GrayLevel[0], {30, 23} -> GrayLevel[0], {30, 24} -> 
       GrayLevel[0], {30, 25} -> GrayLevel[0], {30, 26} -> 
       GrayLevel[0], {30, 27} -> GrayLevel[0], {30, 28} -> 
       GrayLevel[0], {30, 29} -> GrayLevel[0], {30, 30} -> GrayLevel[0]}},
   GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
   GridBoxItemSize->{"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.867067464673131*^9, 3.867067863945981*^9, 
  3.8671586397682495`*^9},
 CellLabel->
  "Out[231]=",ExpressionUUID->"25901723-4d69-4c27-b129-5f329df6eeff"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"NotTest", "@", "\n", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"scene", " ", "=", " ", 
      RowBox[{
       RowBox[{"ARCParseFile", "[", "\"\<b775ac94\>\"", "]"}], "[", 
       RowBox[{"\"\<Train\>\"", ",", " ", "1", ",", " ", "\"\<Input\>\""}], 
       "]"}]}], "}"}], ",", "\n", "\t", 
    RowBox[{"Profile100", "@", "\n", "\t", 
     RowBox[{"ARCContiguousImageRegions", "[", "scene", "]"}]}]}], "\n", 
   "]"}]}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.8670648834100757`*^9, 3.8670648845534835`*^9}, {
   3.867065699332783*^9, 3.8670657005546775`*^9}, 3.867066602985096*^9, {
   3.867067095820299*^9, 3.8670671292766294`*^9}, {3.867067322170509*^9, 
   3.8670673733466396`*^9}, {3.867067486663558*^9, 3.8670674881218376`*^9}, {
   3.8670686288640537`*^9, 3.8670686292122416`*^9}, 3.867158647990182*^9},
 CellLabel->"In[232]:=",
 CellID->207392509,
 "TestId" -> "",ExpressionUUID->"68a0a59c-4264-4021-a43a-defb06b73f5b"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      "Expression" -> Inactive[Daniel`ARC`ARCContiguousImageRegions][
         Inactive[Daniel`ARC`ARCScene][CompressedData["
1:eJxTTMoPSmJiYGCQg+JRgA8wMeKRZGdnwRRkhomxY8oxMjIywSQxpBkZGfBZ
xoBfFr/WwQ048MoyMePXzYxXnoDmwQEAVcoCNg==
          "]]], "Mean" -> Quantity[8.65, "Milliseconds"], "Median" -> 
       Quantity[8.55, "Milliseconds"], "Minimum" -> 
       Quantity[8.24, "Milliseconds"], "Maximum" -> 
       Quantity[10.58, "Milliseconds"], "Plot" -> Graphics[{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[
               Rational[1, 72]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Line[CompressedData["
1:eJw9kw1Qk3Ucx4EzRQoZhcrONwjkxdgCmcyNwb68yRxjwPbsYZBiCgJ1SXI3
E0PPOShDgRYVkUEnx2unCIR0BSlPpwdxFZalp0IeosyJUkhEoJnZ9fy2u93u
s8//s9/+/3v+vjte1+10cXJyynny/u/z/9eUMlR4oHf4xFtK/gso/F5qGfYj
dsVcsbdAYCnlWYBbNrem8dlDPHvB5B4u+dTVwrM3gnvKuvVDxCuxeCrQ1DpF
632w5tzZuUezZp6fx0hiQXKPiLw/qo/VlB3YShyAe5zMT11cwnMQsgdzjZcT
ya+DKqtcanemeSHI70oQBeXRejHujKbEuTG0n1AkLPGUtlRRH4Y/Hx25OzRI
vB7xe4Jz6kaJw1G/JUfzdCuxBFeNYu6mmeZtQPUfPjX/ODgCgkFr9l0hsRRu
rwUXN09TvxG75ietiwaIZfA8mOXivJ9Yjr5y75CjRcSRGLC2FUnWECtgCa+L
1a8gjsKVo+ke2gfE0ShYtbeJc5yfEjeFkpmU3cRAHudxpjiCZzOgy/SvqjhJ
PgbV/b+4+LxPPgb97AsF0pXkYyHVtstOLuX3Z45F8OKy0xVK8nGY6TXstwdS
H4daS31X4Svk43F59Wys8zD5eOyzjXc8rCSfgPs3VKyknHwCPKN/91VsoPPc
hNU1VZ98tI/8Jlg6Tu2suER9IgrkWwu/dyefiKtjfeNsG3kV9NsHrskd+1Ph
+IJ7Gf0K8psxccz/frKY/GZos4tF9jPk1VgrLKn5UEpeDS5NUSR9mXwSGie1
Is8s8klIYYanI2i/ThpUVqZemVhOXoMb0cs/3+Y432SMnD+4e+Y2+WRMXWty
P9xEXovGH/O3P3WKvBaa33L/7nxM9ykFK8aWHKk1kU9B6Bfd68Th1KdiWBb0
9Tb6v0iFR2MMJwii9al4/GD9jo4Q/ry5VDzXKWr1GqXfT0NLxbu9bR9Tn4az
GbJXI7dQn4Y7Iw1PToBnLg1Jt891LRDSfB2sFbPiD1yo12FX3mcLTzykXgdu
5NevbPHU62B4o+N0rOO+6zF/XZ4ZqqFej3zvd9q5eur1YPMEb76XQ70eF66b
Ar7Npp5BrZctakhCPYPDqmnnAMfzzKBNvrAvf4LfL8cg8O1bOWMs9QbEr+os
NO6h3oAGJi9zEd0fswHLROO+c6U034AS10DjRdDzyyJzWUv3+bU8g4U1Kqx+
o+M+svjLJtVIVNSzKGeGfpj0ovnp+JJRmyKP0/x05Hq+OCPypj4dS/O/uZRU
R306bG7qkNJQmm+E2v7zBfxEvRH2zr1Wezv1RnR+1/wsE0e9Ec0NF6OfcZxf
BuZ9etiwpEPKfwG3P7lg
              "]]}}}, {{}, {}}}, {
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
          AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
          AxesLabel -> {"nth iteration", "execution time"}, 
          AxesOrigin -> {0., 0}, DisplayFunction :> Identity, 
          Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> Large, 
          Method -> {
           "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
            "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& )}}, PlotLabel -> "Profiling Result", 
          PlotRange -> {{0., 100.}, {0, 0.0105817}}, PlotRangeClipping -> 
          True, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {0, 
             Scaled[0.05]}}, 
          Ticks -> {{0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70,
             75, 80, 85, 90, 95, 100}, Automatic}}], 
       "Execution Times" -> CompressedData["
1:eJwNkn9Qy3EYx1uHiLQR2vlVl1S0RGNKelM5XaXQmkzyo2njiO6GGGfPt5Jo
mZD8yOnSD0dqKkdJc1zpkN+Oli7RTESSlN+fP557/nnueb+e9/txXr91+Qae
lZWVgpW3cG+N6WIa/F1WFZtc0tCvceTzuVS8M9sWdvQR1HY+4rNDOXhUZ1RF
NXEY1u2mLukmTL59s/9PnxYtixOXVIsIOadyM/auJnwy+rqEalIQ35gQ82Ix
ISQuU2LhcVBVLBK5K1PwoS0yyFaahkUjBZLibML3Pwc/NjUSgrd7KPLaCPmx
ivDhJYRXMV7Gt1oOOd+ccv+yzm/Ux38UcrDd7KEp6iFsGejS2zQQBPvirHl7
CHWZjp6HkgkN+tJk8WQC55MXGDWe8PLQCvuIn4TEiTsLjYzvrVDcG7mNoDTa
12rmEJbLp2TrLjH++mfWTkcJ9bLpiZIJBElEme+lMezuYRmVOhB6a6L3WNwI
Z7j8iqSNhBeT+gJ5JsIuc0f5ryzC1zchMnEm4wn44uw/m8Ok3OzTJ3YxjvLL
G3TPmb7f6qT7duyu9roOWSkhal1Dsx/TOzfo08p6f0LnqSlfl3gRIuI1Ikst
wVWYkntcQjAu80+WrCWc74oQCeIIkVJTzxymm5W19GXnOMKbgHFX1jDeljv7
tvW+J3Q3F9qlF7L5R6p1gy8Twj8n/Db802J8+8iDZ9QE76tV07x8CCZf9xtr
2F778wuNfHfCv5+z1pd7chhtEJU4tGlRrDtcU3qScHOl76Z5sYQPLQWMgBD2
/nbFICFBr+vzOmbNclBeGHLxF+NseX3dHEyI3lFeGchyH2j1k3uHE1SOB8qM
+QSZkr/7iILwsFU99W4889HBPL9JTEgP6eFNZT6X+g2pU3Vq4bb/naJdxv5h
oiEpZjuhQKqU27B8xoo6nPtTCSlD3WKeLOAgH1tcdceVg37+zPy5LMcfZkm4
OISQKW160OVAuCYNVc87R0gQzOgVORLGqG49D8sjmG1DPVO9OYRanj5c8Jhg
MezUW8oIhntFo6RBhKKCJwEjGN+AU7VsZhjhP11mb8U=
        "], "Timestamp" -> "2022/07/18  02:44:11 PM", "User" -> "danie"], 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`DocumentShape[
       Association[{"Expression"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"Mean"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"Median"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"Minimum"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"Maximum"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"Plot"} -> 
        TypeSystem`PackageScope`AtomShape[60], {"Execution Times"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"Timestamp"} -> 
        TypeSystem`PackageScope`AtomShape[220.80000000000004`], {"User"} -> 
        TypeSystem`PackageScope`AtomShape[48.00000000000001]], 1], 
     "InitialType" -> 
     TypeSystem`Struct[{
       "Expression", "Mean", "Median", "Minimum", "Maximum", "Plot", 
        "Execution Times", "Timestamp", "User"}, {TypeSystem`AnyType, 
        TypeSystem`Atom[
         Quantity[1, "Milliseconds"]], 
        TypeSystem`Atom[
         Quantity[1, "Milliseconds"]], 
        TypeSystem`Atom[
         Quantity[1, "Milliseconds"]], 
        TypeSystem`Atom[
         Quantity[1, "Milliseconds"]], 
        TypeSystem`Atom[Graphics], 
        TypeSystem`Vector[
         TypeSystem`Atom[Real], 100], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String]}], "Meta" -> Association[], "RowTarget" -> 20,
      "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`DocumentShape[
       Association[{"Expression"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"Mean"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"Median"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"Minimum"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"Maximum"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"Plot"} -> 
        TypeSystem`PackageScope`AtomShape[60], {"Execution Times"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"Timestamp"} -> 
        TypeSystem`PackageScope`AtomShape[220.80000000000004`], {"User"} -> 
        TypeSystem`PackageScope`AtomShape[48.00000000000001]], 1], "Type" -> 
     TypeSystem`Struct[{
       "Expression", "Mean", "Median", "Minimum", "Maximum", "Plot", 
        "Execution Times", "Timestamp", "User"}, {TypeSystem`AnyType, 
        TypeSystem`Atom[
         Quantity[1, "Milliseconds"]], 
        TypeSystem`Atom[
         Quantity[1, "Milliseconds"]], 
        TypeSystem`Atom[
         Quantity[1, "Milliseconds"]], 
        TypeSystem`Atom[
         Quantity[1, "Milliseconds"]], 
        TypeSystem`Atom[Graphics], 
        TypeSystem`Vector[
         TypeSystem`Atom[Real], 100], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String]}], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 10, "DataRowCount" -> 
     9, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Expression", 
                  Style[
                  "Expression", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Expression"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Expression"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style["\[Ellipsis]", 
                   GrayLevel[0.5]], 
                  Style[
                   Style["\[Ellipsis]", 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Expression"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Expression"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5], Bold}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mean", 
                  Style[
                  "Mean", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Mean"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mean"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"8.65`", "\"ms\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Median", 
                  Style[
                  "Median", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Median"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Median"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"8.55`", "\"ms\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Median"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Minimum", 
                  Style[
                  "Minimum", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Minimum"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Minimum"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"8.24`", "\"ms\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Minimum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Maximum", 
                  Style[
                  "Maximum", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Maximum"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Maximum"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"10.58`", "\"ms\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Maximum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Plot", 
                  Style[
                  "Plot", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Plot"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Plot"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                GraphicsBox[{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[
                    NCache[
                    Rational[1, 72], 0.013888888888888888`]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJw9kw1Qk3Ucx4EzRQoZhcrONwjkxdgCmcyNwb68yRxjwPbsYZBiCgJ1SXI3
E0PPOShDgRYVkUEnx2unCIR0BSlPpwdxFZalp0IeosyJUkhEoJnZ9fy2u93u
s8//s9/+/3v+vjte1+10cXJyynny/u/z/9eUMlR4oHf4xFtK/gso/F5qGfYj
dsVcsbdAYCnlWYBbNrem8dlDPHvB5B4u+dTVwrM3gnvKuvVDxCuxeCrQ1DpF
632w5tzZuUezZp6fx0hiQXKPiLw/qo/VlB3YShyAe5zMT11cwnMQsgdzjZcT
ya+DKqtcanemeSHI70oQBeXRejHujKbEuTG0n1AkLPGUtlRRH4Y/Hx25OzRI
vB7xe4Jz6kaJw1G/JUfzdCuxBFeNYu6mmeZtQPUfPjX/ODgCgkFr9l0hsRRu
rwUXN09TvxG75ietiwaIZfA8mOXivJ9Yjr5y75CjRcSRGLC2FUnWECtgCa+L
1a8gjsKVo+ke2gfE0ShYtbeJc5yfEjeFkpmU3cRAHudxpjiCZzOgy/SvqjhJ
PgbV/b+4+LxPPgb97AsF0pXkYyHVtstOLuX3Z45F8OKy0xVK8nGY6TXstwdS
H4daS31X4Svk43F59Wys8zD5eOyzjXc8rCSfgPs3VKyknHwCPKN/91VsoPPc
hNU1VZ98tI/8Jlg6Tu2suER9IgrkWwu/dyefiKtjfeNsG3kV9NsHrskd+1Ph
+IJ7Gf0K8psxccz/frKY/GZos4tF9jPk1VgrLKn5UEpeDS5NUSR9mXwSGie1
Is8s8klIYYanI2i/ThpUVqZemVhOXoMb0cs/3+Y432SMnD+4e+Y2+WRMXWty
P9xEXovGH/O3P3WKvBaa33L/7nxM9ykFK8aWHKk1kU9B6Bfd68Th1KdiWBb0
9Tb6v0iFR2MMJwii9al4/GD9jo4Q/ry5VDzXKWr1GqXfT0NLxbu9bR9Tn4az
GbJXI7dQn4Y7Iw1PToBnLg1Jt891LRDSfB2sFbPiD1yo12FX3mcLTzykXgdu
5NevbPHU62B4o+N0rOO+6zF/XZ4ZqqFej3zvd9q5eur1YPMEb76XQ70eF66b
Ar7Npp5BrZctakhCPYPDqmnnAMfzzKBNvrAvf4LfL8cg8O1bOWMs9QbEr+os
NO6h3oAGJi9zEd0fswHLROO+c6U034AS10DjRdDzyyJzWUv3+bU8g4U1Kqx+
o+M+svjLJtVIVNSzKGeGfpj0ovnp+JJRmyKP0/x05Hq+OCPypj4dS/O/uZRU
R306bG7qkNJQmm+E2v7zBfxEvRH2zr1Wezv1RnR+1/wsE0e9Ec0NF6OfcZxf
BuZ9etiwpEPKfwG3P7lg
                    "]]}}}, {{}, {}}}, {
                 PlotRangeClipping -> True, Frame -> True, FrameStyle -> 
                  GrayLevel[0.85], Ticks -> None, FrameTicks -> None, Axes -> 
                  None, ImageSize -> 96, DisplayFunction -> Identity, 
                  DisplayFunction -> Identity, AspectRatio -> 
                  NCache[GoldenRatio^(-1), 0.6180339887498948], 
                  Axes -> {True, True}, AxesLabel -> {
                    FormBox["\"nth iteration\"", TraditionalForm], 
                    FormBox["\"execution time\"", TraditionalForm]}, 
                  AxesOrigin -> {0., 0}, DisplayFunction :> Identity, 
                  Frame -> {{False, False}, {False, False}}, 
                  FrameLabel -> {{None, None}, {None, None}}, 
                  FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                  GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> Large, 
                  Method -> {
                   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
                    True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                  FormBox["\"Profiling Result\"", TraditionalForm], 
                  PlotRange -> {{0., 100.}, {0, 0.0105817}}, 
                  PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {0, 
                    Scaled[0.05]}}, Ticks -> {{{0, 
                    FormBox["0", TraditionalForm]}, {5, 
                    FormBox["5", TraditionalForm]}, {10, 
                    FormBox["10", TraditionalForm]}, {15, 
                    FormBox["15", TraditionalForm]}, {20, 
                    FormBox["20", TraditionalForm]}, {25, 
                    FormBox["25", TraditionalForm]}, {30, 
                    FormBox["30", TraditionalForm]}, {35, 
                    FormBox["35", TraditionalForm]}, {40, 
                    FormBox["40", TraditionalForm]}, {45, 
                    FormBox["45", TraditionalForm]}, {50, 
                    FormBox["50", TraditionalForm]}, {55, 
                    FormBox["55", TraditionalForm]}, {60, 
                    FormBox["60", TraditionalForm]}, {65, 
                    FormBox["65", TraditionalForm]}, {70, 
                    FormBox["70", TraditionalForm]}, {75, 
                    FormBox["75", TraditionalForm]}, {80, 
                    FormBox["80", TraditionalForm]}, {85, 
                    FormBox["85", TraditionalForm]}, {90, 
                    FormBox["90", TraditionalForm]}, {95, 
                    FormBox["95", TraditionalForm]}, {100, 
                    FormBox["100", TraditionalForm]}}, Automatic}}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Plot"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Execution Times", 
                  Style[
                  "Execution Times", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Execution Times"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Execution Times"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 100], " }\[ThinSpace]"}], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 100], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Execution Times"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Execution Times"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Timestamp", 
                  Style[
                  "Timestamp", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Timestamp"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Timestamp"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["2022/07/18  02:44:11 PM", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Timestamp"]}, "Item", False], "Mouse"], 
              ImageSize -> {{220.80000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["User", 
                  Style[
                  "User", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["User"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["User"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["danie", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["User"]}, "Item", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{359., {150., 156.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{359., {150., 156.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.867067333907094*^9, 3.8670673616307583`*^9}, {
   3.8670674078797245`*^9, 3.867067425238755*^9}, 3.867067489821334*^9, {
   3.867067867847534*^9, 3.8670678959781084`*^9}, 3.8670686305761986`*^9, 
   3.8671586510547523`*^9},
 CellLabel->
  "Out[233]=",ExpressionUUID->"15bd759d-9f30-4cdd-afe3-4cb248b32a32"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReloadARC", "[", "]"}], ";"}], "\n", 
 RowBox[{"NotTest", "@", "\n", 
  RowBox[{"ARCContiguousImageRegions", "[", 
   RowBox[{
    RowBox[{"ARCParseFile", "[", "\"\<b775ac94\>\"", "]"}], "[", 
    RowBox[{"\"\<Train\>\"", ",", " ", "1", ",", " ", "\"\<Input\>\""}], 
    "]"}], "]"}]}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.86706741331667*^9, 3.8670674207086163`*^9}, {
   3.867067499359717*^9, 3.8670675008346577`*^9}, {3.867067731856831*^9, 
   3.8670677897161083`*^9}, {3.8670678986637697`*^9, 
   3.8670678995086746`*^9}, {3.867068633367668*^9, 3.8670686337186956`*^9}, {
   3.8670690878924294`*^9, 3.867069088043639*^9}, 3.867158654041913*^9},
 CellLabel->"In[234]:=",
 CellID->51734470,
 "TestId" -> "",ExpressionUUID->"f9eb0708-94e3-4528-bffc-35a5ae42ce56"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[
      TooltipBox[
       TagBox[GridBox[{
          {"\<\"\"\>"}
         },
         AutoDelete->False,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.5]},
         GridBoxBackground->{
          "Columns" -> {{None}}, "Rows" -> {{None}}, 
           "ItemsIndexed" -> {{1, 1} -> RGBColor[0, 0, 1]}},
         GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
         GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
         GridBoxItemSize->{"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}],
        "Grid"],
       StyleBox[
       "\"<|\\n    \\\"Color\\\" -> 1,\\n    \\\"Position\\\" -> {10, 18},\\n \
   \\\"Image\\\" -> {{1}},\\n    \\\"PixelPositions\\\" -> {{10, 18}}\\n|>\"",
         FontFamily -> "Courier", StripOnInput -> False],
       TooltipStyle->"TextStyling"],
      Annotation[#, 
       Style[
       "<|\n    \"Color\" -> 1,\n    \"Position\" -> {10, 18},\n    \"Image\" \
-> {{1}},\n    \"PixelPositions\" -> {{10, 18}}\n|>", FontFamily -> 
        "Courier"], "Tooltip"]& ]},
    {
     TagBox[
      TooltipBox[
       TagBox[GridBox[{
          {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
          {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
          {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
          {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"}
         },
         AutoDelete->False,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.5]},
         GridBoxBackground->{
          "Columns" -> {{None}}, "Rows" -> {{None}}, 
           "ItemsIndexed" -> {{1, 1} -> GrayLevel[0], {1, 2} -> 
             RGBColor[0, 0, 1], {1, 3} -> RGBColor[0, 0, 1], {1, 4} -> 
             RGBColor[0, 0, 1], {2, 1} -> RGBColor[0, 0, 1], {2, 2} -> 
             RGBColor[0, 0, 1], {2, 3} -> GrayLevel[0], {2, 4} -> 
             RGBColor[0, 0, 1], {3, 1} -> GrayLevel[0], {3, 2} -> 
             GrayLevel[0], {3, 3} -> GrayLevel[0], {3, 4} -> 
             RGBColor[0, 0, 1], {4, 1} -> GrayLevel[0], {4, 2} -> 
             GrayLevel[0], {4, 3} -> RGBColor[0, 0, 1], {4, 4} -> 
             GrayLevel[0]}},
         GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
         GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
         GridBoxItemSize->{"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}],
        "Grid"],
       StyleBox[
       "\"<|\\n    \\\"Color\\\" -> 1,\\n    \\\"Position\\\" -> {13, 4},\\n  \
  \\\"Image\\\" -> {\\n        {0, 1, 1, 1},\\n        {1, 1, 0, 1},\\n       \
 {0, 0, 0, 1},\\n        {0, 0, 1, 0}\\n    },\\n    \\\"PixelPositions\\\" \
-> {\\n        {13, 5},\\n        {13, 6},\\n        {13, 7},\\n        {14, \
4},\\n        {14, 5},\\n        {14, 7},\\n        {15, 7},\\n        {16, \
6}\\n    }\\n|>\"", FontFamily -> "Courier", StripOnInput -> False],
       TooltipStyle->"TextStyling"],
      Annotation[#, 
       Style[
       "<|\n    \"Color\" -> 1,\n    \"Position\" -> {13, 4},\n    \"Image\" \
-> {\n        {0, 1, 1, 1},\n        {1, 1, 0, 1},\n        {0, 0, 0, 1},\n   \
     {0, 0, 1, 0}\n    },\n    \"PixelPositions\" -> {\n        {13, 5},\n    \
    {13, 6},\n        {13, 7},\n        {14, 4},\n        {14, 5},\n        \
{14, 7},\n        {15, 7},\n        {16, 6}\n    }\n|>", FontFamily -> 
        "Courier"], "Tooltip"]& ]},
    {
     TagBox[
      TooltipBox[
       TagBox[GridBox[{
          {"\<\"\"\>"}
         },
         AutoDelete->False,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.5]},
         GridBoxBackground->{
          "Columns" -> {{None}}, "Rows" -> {{None}}, 
           "ItemsIndexed" -> {{1, 1} -> RGBColor[1, 0, 0]}},
         GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
         GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
         GridBoxItemSize->{"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}],
        "Grid"],
       StyleBox[
       "\"<|\\n    \\\"Color\\\" -> 2,\\n    \\\"Position\\\" -> {10, 17},\\n \
   \\\"Image\\\" -> {{1}},\\n    \\\"PixelPositions\\\" -> {{10, 17}}\\n|>\"",
         FontFamily -> "Courier", StripOnInput -> False],
       TooltipStyle->"TextStyling"],
      Annotation[#, 
       Style[
       "<|\n    \"Color\" -> 2,\n    \"Position\" -> {10, 17},\n    \"Image\" \
-> {{1}},\n    \"PixelPositions\" -> {{10, 17}}\n|>", FontFamily -> 
        "Courier"], "Tooltip"]& ]},
    {
     TagBox[
      TooltipBox[
       TagBox[GridBox[{
          {"\<\"\"\>"}
         },
         AutoDelete->False,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.5]},
         GridBoxBackground->{
          "Columns" -> {{None}}, "Rows" -> {{None}}, 
           "ItemsIndexed" -> {{1, 1} -> RGBColor[1, 0, 0]}},
         GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
         GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
         GridBoxItemSize->{"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}],
        "Grid"],
       StyleBox[
       "\"<|\\n    \\\"Color\\\" -> 2,\\n    \\\"Position\\\" -> {13, 8},\\n  \
  \\\"Image\\\" -> {{1}},\\n    \\\"PixelPositions\\\" -> {{13, 8}}\\n|>\"", 
        FontFamily -> "Courier", StripOnInput -> False],
       TooltipStyle->"TextStyling"],
      Annotation[#, 
       Style[
       "<|\n    \"Color\" -> 2,\n    \"Position\" -> {13, 8},\n    \"Image\" \
-> {{1}},\n    \"PixelPositions\" -> {{13, 8}}\n|>", FontFamily -> "Courier"],
        "Tooltip"]& ]},
    {
     TagBox[
      TooltipBox[
       TagBox[GridBox[{
          {"\<\"\"\>"}
         },
         AutoDelete->False,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.5]},
         GridBoxBackground->{
          "Columns" -> {{None}}, "Rows" -> {{None}}, 
           "ItemsIndexed" -> {{1, 1} -> RGBColor[1, 0, 0]}},
         GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
         GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
         GridBoxItemSize->{"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}],
        "Grid"],
       StyleBox[
       "\"<|\\n    \\\"Color\\\" -> 2,\\n    \\\"Position\\\" -> {23, 14},\\n \
   \\\"Image\\\" -> {{1}},\\n    \\\"PixelPositions\\\" -> {{23, 14}}\\n|>\"",
         FontFamily -> "Courier", StripOnInput -> False],
       TooltipStyle->"TextStyling"],
      Annotation[#, 
       Style[
       "<|\n    \"Color\" -> 2,\n    \"Position\" -> {23, 14},\n    \"Image\" \
-> {{1}},\n    \"PixelPositions\" -> {{23, 14}}\n|>", FontFamily -> 
        "Courier"], "Tooltip"]& ]},
    {
     TagBox[
      TooltipBox[
       TagBox[GridBox[{
          {"\<\"\"\>"}
         },
         AutoDelete->False,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.5]},
         GridBoxBackground->{
          "Columns" -> {{None}}, "Rows" -> {{None}}, 
           "ItemsIndexed" -> {{1, 1} -> RGBColor[0, 1, 0]}},
         GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
         GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
         GridBoxItemSize->{"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}],
        "Grid"],
       StyleBox[
       "\"<|\\n    \\\"Color\\\" -> 3,\\n    \\\"Position\\\" -> {12, 7},\\n  \
  \\\"Image\\\" -> {{1}},\\n    \\\"PixelPositions\\\" -> {{12, 7}}\\n|>\"", 
        FontFamily -> "Courier", StripOnInput -> False],
       TooltipStyle->"TextStyling"],
      Annotation[#, 
       Style[
       "<|\n    \"Color\" -> 3,\n    \"Position\" -> {12, 7},\n    \"Image\" \
-> {{1}},\n    \"PixelPositions\" -> {{12, 7}}\n|>", FontFamily -> "Courier"],
        "Tooltip"]& ]},
    {
     TagBox[
      TooltipBox[
       TagBox[GridBox[{
          {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
          {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
          {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>"}
         },
         AutoDelete->False,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.5]},
         GridBoxBackground->{
          "Columns" -> {{None}}, "Rows" -> {{None}}, 
           "ItemsIndexed" -> {{1, 1} -> RGBColor[0, 1, 0], {1, 2} -> 
             GrayLevel[0], {1, 3} -> GrayLevel[0], {2, 1} -> 
             GrayLevel[0], {2, 2} -> RGBColor[0, 1, 0], {2, 3} -> 
             RGBColor[0, 1, 0], {3, 1} -> GrayLevel[0], {3, 2} -> 
             RGBColor[0, 1, 0], {3, 3} -> GrayLevel[0]}},
         GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
         GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
         GridBoxItemSize->{"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}],
        "Grid"],
       StyleBox[
       "\"<|\\n    \\\"Color\\\" -> 3,\\n    \\\"Position\\\" -> {23, 15},\\n \
   \\\"Image\\\" -> {{1, 0, 0}, {0, 1, 1}, {0, 1, 0}},\\n    \
\\\"PixelPositions\\\" -> {{23, 15}, {24, 16}, {24, 17}, {25, 16}}\\n|>\"", 
        FontFamily -> "Courier", StripOnInput -> False],
       TooltipStyle->"TextStyling"],
      Annotation[#, 
       Style[
       "<|\n    \"Color\" -> 3,\n    \"Position\" -> {23, 15},\n    \"Image\" \
-> {{1, 0, 0}, {0, 1, 1}, {0, 1, 0}},\n    \"PixelPositions\" -> {{23, 15}, \
{24, 16}, {24, 17}, {25, 16}}\n|>", FontFamily -> "Courier"], "Tooltip"]& ]},
    {
     TagBox[
      TooltipBox[
       TagBox[GridBox[{
          {"\<\"\"\>"}
         },
         AutoDelete->False,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.5]},
         GridBoxBackground->{
          "Columns" -> {{None}}, "Rows" -> {{None}}, 
           "ItemsIndexed" -> {{1, 1} -> RGBColor[1, 1, 0]}},
         GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
         GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
         GridBoxItemSize->{"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}],
        "Grid"],
       StyleBox[
       "\"<|\\n    \\\"Color\\\" -> 4,\\n    \\\"Position\\\" -> {11, 18},\\n \
   \\\"Image\\\" -> {{1}},\\n    \\\"PixelPositions\\\" -> {{11, 18}}\\n|>\"",
         FontFamily -> "Courier", StripOnInput -> False],
       TooltipStyle->"TextStyling"],
      Annotation[#, 
       Style[
       "<|\n    \"Color\" -> 4,\n    \"Position\" -> {11, 18},\n    \"Image\" \
-> {{1}},\n    \"PixelPositions\" -> {{11, 18}}\n|>", FontFamily -> 
        "Courier"], "Tooltip"]& ]},
    {
     TagBox[
      TooltipBox[
       TagBox[GridBox[{
          {"\<\"\"\>"}
         },
         AutoDelete->False,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.5]},
         GridBoxBackground->{
          "Columns" -> {{None}}, "Rows" -> {{None}}, 
           "ItemsIndexed" -> {{1, 1} -> RGBColor[1, 1, 0]}},
         GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
         GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
         GridBoxItemSize->{"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}],
        "Grid"],
       StyleBox[
       "\"<|\\n    \\\"Color\\\" -> 4,\\n    \\\"Position\\\" -> {12, 8},\\n  \
  \\\"Image\\\" -> {{1}},\\n    \\\"PixelPositions\\\" -> {{12, 8}}\\n|>\"", 
        FontFamily -> "Courier", StripOnInput -> False],
       TooltipStyle->"TextStyling"],
      Annotation[#, 
       Style[
       "<|\n    \"Color\" -> 4,\n    \"Position\" -> {12, 8},\n    \"Image\" \
-> {{1}},\n    \"PixelPositions\" -> {{12, 8}}\n|>", FontFamily -> "Courier"],
        "Tooltip"]& ]},
    {
     TagBox[
      TooltipBox[
       TagBox[GridBox[{
          {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
          {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
          {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>"}
         },
         AutoDelete->False,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.5]},
         GridBoxBackground->{
          "Columns" -> {{None}}, "Rows" -> {{None}}, 
           "ItemsIndexed" -> {{1, 1} -> GrayLevel[0], {1, 2} -> 
             RGBColor[1, 0.5, 0], {1, 3} -> RGBColor[1, 0.5, 0], {2, 1} -> 
             GrayLevel[0], {2, 2} -> RGBColor[1, 0.5, 0], {2, 3} -> 
             GrayLevel[0], {3, 1} -> RGBColor[1, 0.5, 0], {3, 2} -> 
             GrayLevel[0], {3, 3} -> RGBColor[1, 0.5, 0]}},
         GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
         GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
         GridBoxItemSize->{"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}],
        "Grid"],
       StyleBox[
       "\"<|\\n    \\\"Color\\\" -> 7,\\n    \\\"Position\\\" -> {11, 15},\\n \
   \\\"Image\\\" -> {{0, 1, 1}, {0, 1, 0}, {1, 0, 1}},\\n    \
\\\"PixelPositions\\\" -> {\\n        {11, 16},\\n        {11, 17},\\n        \
{12, 16},\\n        {13, 15},\\n        {13, 17}\\n    }\\n|>\"", FontFamily -> 
        "Courier", StripOnInput -> False],
       TooltipStyle->"TextStyling"],
      Annotation[#, 
       Style[
       "<|\n    \"Color\" -> 7,\n    \"Position\" -> {11, 15},\n    \"Image\" \
-> {{0, 1, 1}, {0, 1, 0}, {1, 0, 1}},\n    \"PixelPositions\" -> {\n        \
{11, 16},\n        {11, 17},\n        {12, 16},\n        {13, 15},\n        \
{13, 17}\n    }\n|>", FontFamily -> "Courier"], "Tooltip"]& ]},
    {
     TagBox[
      TooltipBox[
       TagBox[GridBox[{
          {"\<\"\"\>"}
         },
         AutoDelete->False,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.5]},
         GridBoxBackground->{
          "Columns" -> {{None}}, "Rows" -> {{None}}, 
           "ItemsIndexed" -> {{1, 1} -> RGBColor[
               Rational[5, 9], 
               Rational[5, 9], 1]}},
         GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
         GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
         GridBoxItemSize->{"Columns" -> {{1.3}}, "Rows" -> {{1.5}}}],
        "Grid"],
       StyleBox[
       "\"<|\\n    \\\"Color\\\" -> 8,\\n    \\\"Position\\\" -> {22, 14},\\n \
   \\\"Image\\\" -> {{1}},\\n    \\\"PixelPositions\\\" -> {{22, 14}}\\n|>\"",
         FontFamily -> "Courier", StripOnInput -> False],
       TooltipStyle->"TextStyling"],
      Annotation[#, 
       Style[
       "<|\n    \"Color\" -> 8,\n    \"Position\" -> {22, 14},\n    \"Image\" \
-> {{1}},\n    \"PixelPositions\" -> {{22, 14}}\n|>", FontFamily -> 
        "Courier"], "Tooltip"]& ]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.867067417655711*^9, 3.8670674209828005`*^9}, {
   3.8670674920183196`*^9, 3.8670675018903227`*^9}, {3.8670677590354195`*^9, 
   3.867067790108564*^9}, {3.8670678702462115`*^9, 3.8670679002431455`*^9}, 
   3.8670685563078656`*^9, 3.8670686344946184`*^9, 3.8670690884188714`*^9, 
   3.8671586547719374`*^9},
 CellLabel->
  "Out[235]=",ExpressionUUID->"57066c77-61d5-4f04-947a-2ffa8950e9d5"]
}, Closed]]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Local",
WindowSize->{958, 980},
WindowMargins->{{-7., Automatic}, {Automatic, 0}},
Visible->True,
DockedCells->{
  Cell[
   BoxData[
    DynamicBox[
     ToBoxes[
      Column[{
        Row[{
          Button["New Test", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`NewFunctionCell[
            Daniel`ARC`ARCContiguousImageRegions], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022717124117668]], ImageSize -> {95., 40}, 
           Method -> "Queued"], " ", 
          Button["Add Tests to File", 
           
           DevTools`NotebookTools`\
RedirectPrintsAndMessagesToDynamicOutputSection[
            DevTools`TestingTools`CreateUnitTests[
            Daniel`ARC`ARCContiguousImageRegions, "SubTest" -> None], 
            HoldComplete[
            DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022717124117668]], ImageSize -> {162.5, 40}, 
           Method -> "Queued"], " ", 
          Button[
          "Run Tests", 
           DevTools`TestingTools`RunUnitTestsInNotebook[
            Daniel`ARC`ARCContiguousImageRegions]; Null, 
           ImageSize -> {102.5, 40}, Method -> "Queued"], " ", 
          Button["Edit Tests", 
           DevTools`TestingTools`EditUnitTests[
           Daniel`ARC`ARCContiguousImageRegions], ImageSize -> {110., 40}, 
           Method -> "Queued"], " ", 
          Button["Edit Function", 
           DevTools`SourceTools`EditFunction[
           Daniel`ARC`ARCContiguousImageRegions], ImageSize -> {132.5, 40}, 
           Method -> "Queued"], " ", 
          Row[{
            
            DynamicModule[{
             DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
              "Capture"}, 
             Button[
              Dynamic[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel], 
              If[
              DevTools`TestingTools`FunctionCapture`Private`buttonLabel === 
               "Capture", 
               DevTools`TestingTools`FunctionCapture`EnableFunctionCapture[
                Daniel`ARC`ARCContiguousImageRegions]; 
               
               DevTools`TestingTools`FunctionCapture`\
RegisterFunctionCaptureNotebook[Daniel`ARC`ARCContiguousImageRegions, 
                 InputNotebook[]]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Release"; Null, 
               DevTools`TestingTools`FunctionCapture`DisableFunctionCapture[
                Daniel`ARC`ARCContiguousImageRegions]; 
               DevTools`TestingTools`FunctionCapture`Private`buttonLabel = 
                "Capture"; Null], ImageSize -> {100, 40}, Method -> "Queued"],
              DynamicModuleValues :> {}], 
            Button["?", 
             DevTools`TestingTools`FunctionCapture`CaptureFunctionHelp[], 
             ImageSize -> {30, 40}, Method -> "Queued"]}], " ", 
          Row[{
            Button["<", 
             DevTools`NotebookTools`MoveNotebook["Left"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"], 
            Button[">", 
             DevTools`NotebookTools`MoveNotebook["Right"], 
             ImageSize -> {42.5, 40}, Method -> "Queued"]}]}], 
        DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022717124117668; If[
          And[
           ValueQ[
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022717124117668], 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022717124117668 =!= "", 
           DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022717124117668 =!= Null], 
          (If[
           TrueQ[
            OptionValue[
            DevTools`NotebookTools`DynamicOutputSection, {"MaxHeight" -> 300},
              "NakedSection"]], 
           Framed[#, FrameStyle -> None, FrameMargins -> 2], 
           
           Framed[#, FrameStyle -> LightGray, Background -> White, 
            FrameMargins -> 15]]& )[
           Grid[{{
              Pane[
              DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022717124117668, "ImageSize" -> {Full, {0, 
                  OptionValue[
                  DevTools`NotebookTools`DynamicOutputSection, {
                   "MaxHeight" -> 300}, "MaxHeight"]}}, Scrollbars -> 
               Automatic, FrameMargins -> 0]}, 
             If[
              TrueQ[
               OptionValue[
               DevTools`NotebookTools`DynamicOutputSection, {
                "MaxHeight" -> 300}, "NakedSection"]], 
              Apply[Sequence, {}], {
               Button[
               "OK", DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022717124117668 = "", ImageSize -> {100, 33}]}]},
             Spacings -> {0, 1}, Alignment -> {Left, Top}]], 
          Apply[Sequence, {}]]}], StandardForm], 
     TrackedSymbols :> {
      DevTools`NotebookTools`Private`\
DynamicOutputSectionVariable2022717124117668}]], "DockedCell"]},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, 
  "CreateNamedNotebook2Args" -> {
   "ARCContiguousImageRegions", "Type" -> "Function", 
    "GenerateNotebookArgs" -> {
     "Function" -> Daniel`ARC`ARCContiguousImageRegions}, "ReturnNotebook" -> 
    True}},
InputAutoReplacements->{},
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"814907a3-e475-4702-a3c7-9478f348f34a"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 97, 0, 96, "Title",ExpressionUUID->"c690ee21-6006-4824-87bd-d6901cb7756f"],
Cell[680, 24, 256, 5, 53, "Code",ExpressionUUID->"149951ae-536f-4c65-9b74-fe4702c40eed",
 InitializationCell->False],
Cell[CellGroupData[{
Cell[961, 33, 79, 0, 67, "Section",ExpressionUUID->"12a5ffe0-9841-459e-87e5-7cca512d5200"],
Cell[CellGroupData[{
Cell[1065, 37, 161, 3, 53, "Subsection",ExpressionUUID->"fe609f61-90fb-4b6c-8fc1-81519d668dac"],
Cell[1229, 42, 1129, 26, 94, "Output",ExpressionUUID->"dd6126c0-6dd5-4e10-95ff-26a41cd6219b"],
Cell[CellGroupData[{
Cell[2383, 72, 3582, 84, 50, "TestUI",ExpressionUUID->"da9b01f0-b084-4042-8881-70e6a1c12f27",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[5968, 158, 1023, 24, 89, "Code",ExpressionUUID->"cf9da7ba-ba95-4d8a-b708-1ff987b2396e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->22692119]
}, Open  ]],
Cell[7006, 185, 1003, 14, 337, "Output",ExpressionUUID->"e8aca6b9-2755-401d-a3ed-18fa1b7771bd"]
}, Closed]],
Cell[CellGroupData[{
Cell[8046, 204, 157, 3, 37, "Subsection",ExpressionUUID->"c4a67c81-ce40-4a2d-80ad-d61ee47369e4"],
Cell[8206, 209, 1123, 27, 94, "Output",ExpressionUUID->"07aa6008-20ae-4a54-a3bc-121bb3113443"],
Cell[CellGroupData[{
Cell[9354, 240, 3618, 85, 50, "TestUI",ExpressionUUID->"2c661f7c-3f14-46b7-af5f-701d12ce5869",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[12975, 327, 903, 22, 89, "Code",ExpressionUUID->"bf0a8b06-d3b3-4b32-b70f-c328e1a0d92b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->99323463]
}, Open  ]],
Cell[13893, 352, 5381, 130, 194, "Output",ExpressionUUID->"4f4495e5-0d79-4030-97fb-39fda7029437"]
}, Closed]],
Cell[CellGroupData[{
Cell[19311, 487, 158, 3, 37, "Subsection",ExpressionUUID->"505e7833-ad11-4d2b-b5cc-be7834091e93"],
Cell[CellGroupData[{
Cell[19494, 494, 169, 3, 44, "Subsubsection",ExpressionUUID->"bd960dae-f807-47d3-9a0f-11648c8f483f"],
Cell[CellGroupData[{
Cell[19688, 501, 3614, 85, 50, "TestUI",ExpressionUUID->"1075fae6-1c33-4246-a063-ed8ddf1d67d5",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[23305, 588, 1026, 24, 89, "Code",ExpressionUUID->"18c1402a-13d4-4aa2-884a-f9465c092cf7",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->5867004]
}, Open  ]],
Cell[24346, 615, 2076, 46, 95, "Output",ExpressionUUID->"26f42027-43e5-4ac0-bfd7-2210f57d0815"]
}, Closed]],
Cell[CellGroupData[{
Cell[26459, 666, 194, 3, 36, "Subsubsection",ExpressionUUID->"e9e6d6a2-c034-4e84-b7fc-c8d7022c6c30"],
Cell[CellGroupData[{
Cell[26678, 673, 3614, 85, 50, "TestUI",ExpressionUUID->"9428f487-d5e4-45b0-9057-8d16744c6751",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[30295, 760, 1146, 27, 107, "Code",ExpressionUUID->"b171b4cf-430e-4895-b8d7-dafce63d8e6a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->5546390]
}, Open  ]],
Cell[31456, 790, 3600, 91, 113, "Output",ExpressionUUID->"b3c0860e-b25d-4fda-aa70-8d0a35e6efb2"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[35105, 887, 211, 4, 53, "Subsection",ExpressionUUID->"09ba5d07-6e7e-47b0-838c-334fc3d1633a"],
Cell[CellGroupData[{
Cell[35341, 895, 3584, 84, 50, "TestUI",ExpressionUUID->"ba28ff5b-12b6-4f5e-9b96-b41a078479cc",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[38928, 981, 1358, 31, 161, "Code",ExpressionUUID->"a3342af3-a50f-4218-b688-c8cfda6276f6",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->67606506]
}, Open  ]],
Cell[40301, 1015, 1546, 19, 774, "Output",ExpressionUUID->"79f6f0aa-c220-49d8-b41a-eae13342d97e"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[41896, 1040, 154, 3, 67, "Section",ExpressionUUID->"1fa5c936-c47c-4526-b41f-195e979fe365"],
Cell[CellGroupData[{
Cell[42075, 1047, 159, 3, 53, "Subsection",ExpressionUUID->"1e96bc66-6761-42c2-9304-4f9b9d0af710"],
Cell[42237, 1052, 926, 22, 125, "Code",ExpressionUUID->"573a2bec-f8b8-437a-b629-c78630219379",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->85172780],
Cell[43166, 1076, 54249, 1005, 325, "Output",ExpressionUUID->"c0e636bb-3f8c-4dca-8d50-7e8a678d8fd2"]
}, Closed]],
Cell[CellGroupData[{
Cell[97452, 2086, 153, 3, 37, "Subsection",ExpressionUUID->"e306c565-bd03-40e7-8d2b-ab8bed044c90"],
Cell[CellGroupData[{
Cell[97630, 2093, 329, 7, 28, "Input",ExpressionUUID->"9ecba804-e82d-4284-bb9b-d4816170af4e"],
Cell[97962, 2102, 38326, 600, 742, "Output",ExpressionUUID->"25901723-4d69-4c27-b129-5f329df6eeff"]
}, Open  ]],
Cell[136303, 2705, 1111, 24, 125, "Code",ExpressionUUID->"68a0a59c-4264-4021-a43a-defb06b73f5b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->207392509],
Cell[137417, 2731, 54793, 1011, 325, "Output",ExpressionUUID->"15bd759d-9f30-4cdd-afe3-4cb248b32a32"],
Cell[192213, 3744, 878, 18, 71, "Code",ExpressionUUID->"f9eb0708-94e3-4528-bffc-35a5ae42ce56",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellID->51734470],
Cell[193094, 3764, 14872, 345, 545, "Output",ExpressionUUID->"57066c77-61d5-4f04-947a-2ffa8950e9d5"]
}, Closed]]
}, Open  ]]
}, Open  ]]
}
]
*)

